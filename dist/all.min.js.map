{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///all.min.js","webpack:///webpack/bootstrap 7b21027debe36c2a9b6a","webpack:///./src/_cn-flex-form.module.js","webpack:///./src/cn-flex-form-config.service.js","webpack:///./src/cn-flex-form-types.service.js","webpack:///./src/cn-flex-form.routes.js","webpack:///./src/schema-form-extensions.js","webpack:///./src/cn-flex-form.service.js","webpack:///external \"lodash\"","webpack:///external \"objectpath\"","webpack:///./src/cn-flex-form-modal-loader.service.js","webpack:///./src/cn-flex-form-modal-loader.js","webpack:///./src/cn-flex-form.directive.js","webpack:///./~/process/browser.js","webpack:///./src/cn-flex-form-header.directive.js","webpack:///./src/cn-flex-form-validate.directive.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_6__","__WEBPACK_EXTERNAL_MODULE_7__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_cnFlexFormConfig","_cnFlexFormConfig2","_cnFlexFormTypes","_cnFlexFormTypes2","_cnFlexForm","_schemaFormExtensions","_cnFlexForm2","_cnFlexForm3","_cnFlexFormModalLoader","_cnFlexFormModalLoader2","_cnFlexFormModalLoader3","_cnFlexForm4","_cnFlexForm5","_cnFlexFormHeader","_cnFlexFormHeader2","_cnFlexFormValidate","_cnFlexFormValidate2","angular","provider","cnFlexFormRoutesProvider","config","cnFlexFormRoutes","schemaFormConfig","run","addTemplates","FlexFormModal","controller","FlexFormModalLoader","directive","name","cnFlexFormConfigProvider","addIgnoreParam","param","ignoreParams","push","cnFlexFormConfig","$stateParams","getStateParams","overrides","arguments","length","undefined","_","omit","v","isUndefined","$inject","$get","_extends","assign","target","i","source","key","prototype","hasOwnProperty","cnFlexFormTypesProvider","registerFieldType","fieldType","fieldTypeRegister","unshift","cnFlexFormTypes","getFieldType","field","l","condition","type","schema","includes","titleMap","titleMapResolve","titleMapQuery","format","$stateProvider","addStates","_ref","permissions","shared","controllerAs","state","url","templateUrl","cnFlexFormServiceProvider","tv4","addFormat","data","isString","test","extensions","each","extension","registerField","$templateCache","put","sharedAutocompleteTpl","_defineProperty","enumerable","configurable","writable","_toConsumableArray","arr","Array","isArray","arr2","from","schemaFormDecoratorsProvider","handler","fieldTypeHandlers","addMapping","createDirective","CNFlexFormService","Api","$parse","sfPath","$interpolate","$timeout","cnUtil","getService","fn","find","services","destroyService","service","cleanup","empty","remove","s","CNFlexFormConstructor","_len","args","_key","model","_args$","curService","compile","newService","CNFlexForm","debug","window","arrayCopies","arrayListeners","dataCache","defaults","errors","events","formCache","scopeCache","listeners","resolveRegister","updates","skipDefault","getParams","params","getScope","scope","isCompiled","setupConfig","forms","form","processField","bind","initModelWatch","initArrayCopyWatch","broadcastErrors","setValue","compiled","formCtrl","updateSchema","getSchema","getSchemaForm","setupSchemaRefresh","getParamOverrides","noop","processSchema","getSchemaType","first","processDefault","curDefault","getKey","replaceArrayIndex","arrayIndex","parseCondition","parseExpression","modelValue","get","has","equals","isTrulyEmpty","set","copy","validationMessage","processFieldset","fieldset","items","forEach","pos","htmlClass","collapsible","toggleCollapse","collapsed","render","processFieldType","secondPass","isFunction","getOgKeys","reject","keys","isDefined","_ogKeys","addToFormCache","description","showClearAll","processFieldProps","$broadcast","getDotKey","error","buildError","isEmpty","ngModelOptions","allowInvalid","fieldPropHandlers","prop","reduce","total","next","depth","ObjectPath","parse","properties","shift","getDefault","getFromFormCache","getWatchables","exp","watchables","nested","matchNestedExpression","replaceStr","replace","concat","processResolve","resolve","dataProp","fieldProp","handleResolve","watchable","_ref2","match","_ref3","_slicedToArray","base","registerResolve","registerHandler","parseAny","result","eithers","split","x","parseAll","all","acc","last","skipPropHandlers","cursor","loadMore","refreshSchema","val","val1","_ref4","fieldKey","register","processConditional","conditionals","prev","getFromScopeCache","map","path","processFieldWatch","watch","resolution","cur","adjustment","date","units","trim","math","operator","+","-","*","/","adjuster","trigger","curCondition","console","updatePath","fromPath","update","moment","add","toDate","floor","ceil","round","initialize","startsWith","_condition$match","_condition$match2","list","predicateParams","predicateBody","generatePredicate","body","_len2","_key2","processFieldUpdatedSchema","curVal","runHandler","isObject","arrMatch","registerArrayHandlers","handlers","arrKey","onArray","reorder","lastKey","deregisterHandlers","arrVal","listenerKey","deregisterArrayHandlers","item","watching","modelWatch","$watch","onModelWatch","initSchemaParams","firstUpdate","cleanModel","prevParams","listener","isInitArray","incrementUpdates","stripIndexes","$on","event","cacheKey","uniqueId","isNumber","genericKey","index","getArrayCopy","addArrayCopy","$emit","addToScopeCache","deleteArrayCopiesFor","link","splice","copies","getArrayCopies","pluck","getArrayScopes","getArrayCopiesFor","keyStart","filter","warn","addToDataCache","getFromDataCache","matchIntStrIndex","_ref5","_ref6","toReplace","replaced","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","resolveNestedExpressions","_ref13","_ref14","parsed","keyVal","_ref15","_ref16","isStr","parseFloat","resolved","start","getAssignable","_ref17","noConstruction","progress","fullPath","slice","options","_ref18","_getAssignable","silent","silenceListeners","skipDefaults","indexOf","getArrayIndex","ks","k","skipKeys","indexedKey","setArrayIndex","childKeys","_loop","indexedChildKey","processArray","array","sortOptions","e","ui","processSection","section","processComponent","component","cols","processCurrency","currencyFormat","currency-dollars","currency-microcents","currency","processPercentage","processUrl","processReusable","view","processFacebookVideo","processCreativeImage","processMediaUpload","processCsvUpload","processRadios","processRadiobuttons","radios","fullWidth","btnClass","divide","processDate","maxView","iconClass","modelFormatter","multiply","hours","minutes","modelParser","d","parseInt","startOf","viewFormatter","dateFormat","viewParser","getSelectValProp","select","valueProperty","getAllowedSelectValue","getTitleMap","valProp","omitHashKey","identity","partialRight","findFn","compose","partial","processSchedule","startEmpty","processSelect","onInit","setter","newVal","queryParams","paramsKeys","showClearCache","refreshData","singleQuery","minLookup","titleQuery","q","_ref19","skipFiltering","onAdd","displayFormat","itemFormatter","processTemplate","detailedList","destroyStrategy","selectionStyle","maxItems","valid","$setDirty","processToggle","toggle","processHelp","help","processDisplay","display","getDisplay","tpl","parseScope","processor","processTable","table","row","columns","extend","processSelectDisplay","selectDisplay","selectField","setupArraySelectDisplay","setupSelectDisplay","linkModel","featureKey","showFeature","features","show","selectKey","elem","splitIndexedKey","indexedSelectKey","selectModel","selectValue","itemValue","selectFieldKey","splitKey","refresh","debounce","diff","isNull","then","processUpdatedSchema","onProcessDiff","reset","registers","reprocessSchema","curKeys","compact","prevSchema","newSchema","readonly","getFormsToProcess","reprocessField","_ref20","_ref21","cached","current","isChild","redraw","log","subKey","join","message","arrayIndexKey","exec","re","RegExp","asArray","keyCopy","clone","indexOfIndex","sliceIterator","_arr","_n","_d","_e","_s","_i","Symbol","iterator","done","err","TypeError","cn-radios","cn-radiobuttons","cn-autocomplete","cn-datetimepicker","cn-display","cn-currency","cn-percentage","cn-url","cn-mediaupload","cn-creativeimage","cn-facebookvideo","cn-csvupload","cn-reusable","cn-toggle","cn-table","tabarray","cn-schedule","getPromises","promiseMap","promise","getPromise","$q","promises","defer","cnFlexFormModalLoaderServiceProvider","def","parent","modalMap","modal","modalId","cnFlexFormModalLoaderService","resolveMapping","getMapping","removeMapping","$state","$rootScope","$scope","FFModalLoaderTag","activate","open","vm","_ref$options","onDismiss","onAfterDismiss","finally","goBack","catch","restParams","dismissEvent","dismissModal","transition","go","opened","dismiss","__tag","$uibModal","process","cnFlexForm","restrict","template","formIndex","formName","delayForm","cleanupEvent","FlexForm","bindToController","cnFlexFormService","$location","cnFlexFormTag","search","showForm","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","timeout","len","Item","nextTick","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","cnFlexFormHeader","submit","loadOffscreen","FlexFormHeader","ffHeaderTag","initTitle","initActionConfig","actionConfig","returnState","returnStyle","returnText","closeButton","actions","updateData","$parent","isDisabled","btnConfig","ffValidate","attrs","ngModel","ffValidateTag","required","$viewValue","$setValidity"],"mappings":"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","file":"all.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"lodash\"), require(\"objectpath\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"cn-flex-form\", [\"lodash\", \"objectpath\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cn-flex-form\"] = factory(require(\"lodash\"), require(\"objectpath\"));\n\telse\n\t\troot[\"cn-flex-form\"] = factory(root[\"lodash\"], root[\"objectpath\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"lodash\"), require(\"objectpath\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"cn-flex-form\", [\"lodash\", \"objectpath\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cn-flex-form\"] = factory(require(\"lodash\"), require(\"objectpath\"));\n\telse\n\t\troot[\"cn-flex-form\"] = factory(root[\"lodash\"], root[\"objectpath\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _cnFlexFormConfig = __webpack_require__(1);\n\t\n\tvar _cnFlexFormConfig2 = _interopRequireDefault(_cnFlexFormConfig);\n\t\n\tvar _cnFlexFormTypes = __webpack_require__(2);\n\t\n\tvar _cnFlexFormTypes2 = _interopRequireDefault(_cnFlexFormTypes);\n\t\n\tvar _cnFlexForm = __webpack_require__(3);\n\t\n\tvar _schemaFormExtensions = __webpack_require__(4);\n\t\n\tvar _cnFlexForm2 = __webpack_require__(5);\n\t\n\tvar _cnFlexForm3 = _interopRequireDefault(_cnFlexForm2);\n\t\n\tvar _cnFlexFormModalLoader = __webpack_require__(8);\n\t\n\tvar _cnFlexFormModalLoader2 = _interopRequireDefault(_cnFlexFormModalLoader);\n\t\n\tvar _cnFlexFormModalLoader3 = __webpack_require__(9);\n\t\n\tvar _cnFlexForm4 = __webpack_require__(10);\n\t\n\tvar _cnFlexForm5 = _interopRequireDefault(_cnFlexForm4);\n\t\n\tvar _cnFlexFormHeader = __webpack_require__(12);\n\t\n\tvar _cnFlexFormHeader2 = _interopRequireDefault(_cnFlexFormHeader);\n\t\n\tvar _cnFlexFormValidate = __webpack_require__(13);\n\t\n\tvar _cnFlexFormValidate2 = _interopRequireDefault(_cnFlexFormValidate);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = angular.module('cn.flex-form', ['ui.router', 'schemaForm', 'ui.bootstrap.datetimepicker', 'cnTagsInput', 'cn.util']).provider('cnFlexFormConfig', _cnFlexFormConfig2.default).provider('cnFlexFormTypes', _cnFlexFormTypes2.default).provider('cnFlexFormRoutes', _cnFlexForm.cnFlexFormRoutesProvider).config(_cnFlexForm.cnFlexFormRoutes).config(_schemaFormExtensions.schemaFormConfig).run(_schemaFormExtensions.addTemplates).provider('cnFlexFormService', _cnFlexForm3.default).provider('cnFlexFormModalLoaderService', _cnFlexFormModalLoader2.default).factory('FlexFormModal', _cnFlexFormModalLoader3.FlexFormModal).controller('FlexFormModalLoader', _cnFlexFormModalLoader3.FlexFormModalLoader).directive('cnFlexForm', _cnFlexForm5.default).directive('cnFlexFormHeader', _cnFlexFormHeader2.default).directive('ffValidate', _cnFlexFormValidate2.default).name;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tfunction cnFlexFormConfigProvider() {\n\t\n\t  cnFlexFormConfig.$inject = [\"$stateParams\"];\n\t  var ignoreParams = ['page', 'debug', 'sandbox', 'modal', 'modalId'];\n\t\n\t  return {\n\t    addIgnoreParam: addIgnoreParam,\n\t    $get: cnFlexFormConfig\n\t  };\n\t\n\t  ////////\n\t\n\t  function addIgnoreParam(param) {\n\t    ignoreParams.push(param);\n\t  }\n\t\n\t  function cnFlexFormConfig($stateParams) {\n\t    'ngInject';\n\t\n\t    return {\n\t      getStateParams: getStateParams,\n\t      ignoreParams: ignoreParams\n\t    };\n\t\n\t    ////////\n\t\n\t    function getStateParams() {\n\t      var overrides = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t      return _(_extends({}, $stateParams, overrides)).omit(ignoreParams).omit(function (v) {\n\t        return _.isUndefined(v) || v === null;\n\t      }).value();\n\t    }\n\t  }\n\t}\n\t\n\t//angular\n\t//.module('cn.flex-form')\n\t//.provider('cnFlexFormConfig', cnFlexFormConfigProvider);\n\t\n\texports.default = cnFlexFormConfigProvider;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tfunction cnFlexFormTypesProvider() {\n\t\n\t  var fieldTypeRegister = [{\n\t    condition: function condition(field) {\n\t      return field.type === 'hidden';\n\t    },\n\t    type: 'hidden'\n\t  }, {\n\t    condition: function condition(field) {\n\t      return field.type.includes('radios');\n\t    },\n\t    type: 'cn-radios'\n\t  }, {\n\t    condition: function condition(field) {\n\t      return field.type.includes('radiobuttons');\n\t    },\n\t    type: 'cn-radiobuttons'\n\t  }, {\n\t    condition: function condition(field) {\n\t      return field.type.includes('autocomplete') || field.titleMap || field.titleMapResolve || field.titleMapQuery;\n\t    },\n\t    type: 'cn-autocomplete'\n\t  }, {\n\t    condition: function condition(field) {\n\t      return field.type === 'cn-datetimepicker' || field.type === 'datetime-local' || field.type === 'time-minutes';\n\t    },\n\t    type: 'cn-datetimepicker'\n\t  }, {\n\t    condition: function condition(field) {\n\t      return field.type === 'help';\n\t    },\n\t    type: 'help'\n\t  }, {\n\t    condition: function condition(field) {\n\t      return field.type.includes('display');\n\t    },\n\t    type: 'cn-display'\n\t  }, {\n\t    condition: function condition(field) {\n\t      return field.schema && field.schema.format && field.schema.format.includes('currency');\n\t    },\n\t    type: 'cn-currency'\n\t  }, {\n\t    condition: function condition(field) {\n\t      return field.schema && field.schema.format === 'percentage';\n\t    },\n\t    type: 'cn-percentage'\n\t  }, {\n\t    condition: function condition(field) {\n\t      return field.schema && field.type === 'url';\n\t    },\n\t    type: 'cn-url'\n\t  }, {\n\t    condition: function condition(field) {\n\t      return field.type === 'toggle' || field.type === 'boolean';\n\t    },\n\t    type: 'cn-toggle'\n\t  }, {\n\t    condition: function condition(field) {\n\t      return field.type === 'creativeimage';\n\t    },\n\t    type: 'cn-creativeimage'\n\t  }, {\n\t    condition: function condition(field) {\n\t      return field.type === 'facebookvideo';\n\t    },\n\t    type: 'cn-facebookvideo'\n\t  }, {\n\t    condition: function condition(field) {\n\t      return field.type === 'mediaupload';\n\t    },\n\t    type: 'cn-mediaupload'\n\t  }, {\n\t    condition: function condition(field) {\n\t      return field.type === 'csvupload';\n\t    },\n\t    type: 'cn-csvupload'\n\t  }, {\n\t    condition: function condition(field) {\n\t      return field.type === 'reusable';\n\t    },\n\t    type: 'cn-reusable'\n\t  }, {\n\t    condition: function condition(field) {\n\t      return field.type === 'table';\n\t    },\n\t    type: 'cn-table'\n\t  }, {\n\t    condition: function condition(field) {\n\t      return field.type === 'array';\n\t    },\n\t    type: 'array'\n\t  }, {\n\t    condition: function condition(field) {\n\t      return field.type === 'schedule';\n\t    },\n\t    type: 'cn-schedule'\n\t  }];\n\t\n\t  return {\n\t    registerFieldType: registerFieldType,\n\t    $get: cnFlexFormTypes\n\t  };\n\t\n\t  ////////\n\t\n\t  function registerFieldType(fieldType) {\n\t    fieldTypeRegister.unshift(fieldType);\n\t  }\n\t\n\t  function cnFlexFormTypes() {\n\t    return {\n\t      fieldTypeRegister: fieldTypeRegister,\n\t      getFieldType: getFieldType\n\t    };\n\t\n\t    /////////\n\t\n\t    function getFieldType(field) {\n\t      for (var i = 0, l = fieldTypeRegister.length; i < l; i++) {\n\t        if (fieldTypeRegister[i].condition(field)) {\n\t          return fieldTypeRegister[i].type;\n\t        }\n\t      }\n\t      return field.type || field.schema && field.schema.type;\n\t    }\n\t  }\n\t}\n\t\n\texports.default = cnFlexFormTypesProvider;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tcnFlexFormRoutesProvider.$inject = [\"$stateProvider\"];\n\tcnFlexFormRoutes.$inject = [\"$stateProvider\"];\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tfunction cnFlexFormRoutesProvider($stateProvider) {\n\t  'ngInject';\n\t\n\t  return {\n\t    addStates: addStates,\n\t    $get: $get\n\t  };\n\t\n\t  ////////////\n\t\n\t  function $get() {\n\t    // nothing to do here, but required\n\t  }\n\t\n\t  function addStates(_ref) {\n\t    var permissions = _ref.permissions,\n\t        name = _ref.name;\n\t\n\t    var shared = {\n\t      controller: 'FlexFormModalLoader',\n\t      controllerAs: 'vm',\n\t      permissions: permissions\n\t    };\n\t    $stateProvider.state(name + '.page.modal', _extends({\n\t      url: '/~:modal/:modalId'\n\t    }, shared)).state(name + '.page.modalParams', _extends({\n\t      url: '/~:modal/:modalId/:restParams'\n\t    }, shared));\n\t  }\n\t}\n\t\n\tfunction cnFlexFormRoutes($stateProvider) {\n\t  'ngInject';\n\t\n\t  $stateProvider.state('flex-form-sandbox', {\n\t    url: '/flex-form/sandbox',\n\t    controller: 'FlexFormSandbox',\n\t    controllerAs: 'vm',\n\t    templateUrl: 'app/components/cn-flex-form/sandbox.html'\n\t  });\n\t}\n\t\n\texports.cnFlexFormRoutes = cnFlexFormRoutes;\n\texports.cnFlexFormRoutesProvider = cnFlexFormRoutesProvider;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tschemaFormConfig.$inject = [\"cnFlexFormServiceProvider\"];\n\taddTemplates.$inject = [\"$templateCache\"];\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tfunction schemaFormConfig(cnFlexFormServiceProvider) {\n\t  'ngInject';\n\t\n\t  tv4.addFormat({\n\t    'url': function url(data) {\n\t      return _.isString(data) && !/^(https?:\\/\\/.{2}|$)/.test(data) && 'invalid url';\n\t    }\n\t  });\n\t\n\t  var extensions = ['cn-fieldset', 'cn-toggle', 'cn-datetimepicker', 'cn-autocomplete', 'cn-autocomplete-detailed', 'cn-currency', 'cn-url', 'cn-radios', 'cn-radiobuttons', 'cn-percentage', 'cn-display', 'cn-mediaupload', 'cn-csvupload', 'cn-reusable', 'cn-table', 'cn-creativeimage', 'cn-schedule', 'cn-facebookvideo'];\n\t\n\t  _.each(extensions, function (extension) {\n\t    cnFlexFormServiceProvider.registerField({\n\t      type: extension,\n\t      templateUrl: 'app/components/cn-flex-form/forms/' + extension + '.html'\n\t    });\n\t  });\n\t}\n\t\n\tfunction addTemplates($templateCache) {\n\t  'ngInject';\n\t\n\t  $templateCache.put('app/components/cn-flex-form/forms/cn-toggle.html', '\\n      <div class=\"form-group {{form.htmlClass}}\"\\n           ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\n        <label class=\"control-label\" ng-show=\"showTitle()\">{{form.title}}</label>\\n        <div class=\"clearfix\">\\n          <cn-toggle-switch\\n            name=\"{{form.key.join(\\'.\\')}}\"\\n            class=\"pull-left\"\\n            ng-show=\"form.key\"\\n            ng-model-options=\"form.ngModelOptions\"\\n            ng-model=\"$$value$$\"\\n            sf-changed=\"form\"\\n            schema-validate=\"form\"\\n            on-value=\"form.onValue\"\\n            off-value=\"form.offValue\"\\n            ng-required=\"form.required\"\\n            read-only=\"form.readonly\"\\n            undefined-class=\"form.undefinedClass\"/>\\n          <span ng-show=\"form.onText && form.offText\">\\n            {{$$value$$ === form.onValue ? form.onText : form.offText}}\\n          </span>\\n        </div>\\n        <span class=\"help-block\" sf-message=\"form.description\"></span>\\n      </div>');\n\t\n\t  $templateCache.put('app/components/cn-flex-form/forms/cn-datetimepicker.html', '\\n      <div class=\"form-group {{form.htmlClass}}\"\\n           ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\n        <label class=\"control-label\"\\n               for=\"{{form.key.join(\\'.\\')}}\"\\n               ng-show=\"showTitle()\">{{form.title}}</label>\\n        <cn-datetimepicker\\n          ng-show=\"form.key\"\\n          ng-model=\"$$value$$\"\\n          ng-model-options=\"form.ngModelOptions\"\\n          is-disabled=\"form.readonly\"\\n          sf-changed=\"form\"\\n          schema-validate=\"form\"\\n          input-id=\"{{form.key.join(\\'.\\')}}\"\\n          min-date=\"form.minDate\"\\n          max-date=\"form.maxDate\"\\n          max-view=\"{{form.maxView}}\"\\n          cn-date-required=\"form.required\"\\n          placeholder=\"{{form.placeholder}}\"\\n          model-type=\"{{form.schema.type}}\"\\n          model-formatter=\"form.modelFormatter\"\\n          model-parser=\"form.modelParser\"\\n          view-formatter=\"form.viewFormatter\"\\n          view-parser=\"form.viewParser\"\\n          format-string={{form.dateFormat}}\\n          icon-class={{form.iconClass}}>\\n        </cn-datetimepicker>\\n        <span class=\"help-block\" sf-message=\"form.description\"></span>\\n      </div>');\n\t\n\t  var sharedAutocompleteTpl = '\\n        <tags-input\\n          ng-show=\"form.key\"\\n          ng-model=\"$$value$$\"\\n          ng-model-options=\"form.ngModelOptions\"\\n          ng-disabled=\"form.readonly\"\\n          sf-changed=\"form\"\\n          schema-validate=\"form\"\\n          input-id=\"{{form.key.join(\\'.\\')}}\"\\n          display-property=\"{{form.displayProperty || \\'name\\'}}\"\\n          value-property=\"{{form.valueProperty}}\"\\n          placeholder=\"{{form.placeholder || \\' \\'}}\"\\n          clear-on-blur=\"true\"\\n          add-on-comma=\"false\"\\n          add-from-autocomplete-only=\"{{!form.allowNew}}\"\\n          on-before-tag-added=\"form.onAdd({value: $tag}, form, $event, $prev)\"\\n          on-init=\"form.onInit($tag, form, $event, $setter)\"\\n          model-type=\"{{form.getSchemaType()}}\"\\n          array-value-type=\"{{form.schema.items.type}}\"\\n          hide-tags=\"{{form.detailedList}}\"\\n          tags-style=\"{{form.selectionStyle}}\"\\n          required=\"{{form.required}}\"\\n          min-length=\"{{form.minLength}}\"\\n          allowed-tags-pattern=\".*\"\\n          dropdown-icon=\"true\"\\n          item-formatter=\"form.itemFormatter\"\\n          min-tags=\"{{form.schema.minItems}}\"\\n          max-tags=\"{{form.schema.maxItems || form.getSchemaType() !== \\'array\\' ? 1 : 0}}\"\\n          allow-bulk=\"{{form.bulkAdd}}\"\\n          bulk-delimiter=\"{{form.bulkDelimiter}}\"\\n          bulk-placeholder=\"{{form.bulkPlaceholder}}\"\\n          show-clear-all=\"{{form.showClearAll}}\"\\n          show-clear-cache=\"{{form.showClearCache}}\"\\n          show-button=\"true\">\\n          <auto-complete\\n            source=\"form.getTitleMap && form.getTitleMap() || form.titleQuery($query, options)\"\\n            skip-filtering=\"{{form.skipFiltering}}\"\\n            single-query=\"{{form.singleQuery}}\"\\n            min-length=\"{{form.minLookup}}\">\\n          </auto-complete>\\n        </tags-input>';\n\t\n\t  $templateCache.put('app/components/cn-flex-form/forms/cn-autocomplete.html', '\\n      <div class=\"form-group {{form.htmlClass}}\"\\n           ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\n        <label class=\"control-label\"\\n               for=\"{{form.key.join(\\'.\\')}}-input\"\\n               ng-show=\"showTitle()\">{{form.title}}</label>\\n        ' + sharedAutocompleteTpl + '\\n        <span class=\"help-block\" sf-message=\"form.description\"></span>\\n      </div>');\n\t\n\t  $templateCache.put('app/components/cn-flex-form/forms/cn-autocomplete-detailed.html', '\\n      <div class=\"form-group {{form.htmlClass}}\"\\n           ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\n        <label class=\"control-label\"\\n               for=\"{{form.key.join(\\'.\\')}}-input\"\\n               ng-show=\"showTitle()\">{{form.title}}</label>\\n        <div sf-array=\"form\">\\n          <ol class=\"list-group cn-autocomplete-list\"\\n              ng-if=\"modelArray.length\"\\n              ng-model=\"modelArray\">\\n            <li class=\"list-group-item {{form.fieldHtmlClass}}\"\\n                ng-repeat=\"item in modelArray track by $index\">\\n              <button ng-hide=\"form.readonly || form.remove === null\"\\n                      ng-click=\"deleteFromArray($index)\"\\n                      type=\"button\" class=\"close pull-right\">\\n                <span aria-hidden=\"true\">&times;</span>\\n              </button>\\n              <sf-decorator form=\"copyWithIndex($index)\"/>\\n            </li>\\n          </ol>\\n        </div>\\n        ' + sharedAutocompleteTpl + '\\n        <span class=\"help-block\" sf-message=\"form.description\"></span>\\n      </div>');\n\t\n\t  $templateCache.put('app/components/cn-flex-form/forms/cn-currency.html', '\\n      <div class=\"form-group {{form.htmlClass}}\"\\n           ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\n        <label class=\"control-label\"\\n               ng-show=\"showTitle()\"\\n               for=\"{{form.key.join(\\'.\\')}}\">{{form.title}}</label>\\n        <div class=\"{{form.fieldClass}} input-group\">\\n          <label class=\"input-group-addon\"\\n                 ng-disabled=\"form.readonly\"\\n                 for=\"{{form.key.join(\\'.\\')}}\">$</label>\\n          <input class=\"form-control\"\\n                 cn-currency-format=\"{{form.currencyFormat}}\"\\n                 cn-currency-placeholder=\"{{form.placeholder}}\"\\n                 ng-show=\"form.key\"\\n                 ng-model-options=\"form.ngModelOptions\"\\n                 ng-disabled=\"form.readonly\"\\n                 sf-changed=\"form\"\\n                 schema-validate=\"form\"\\n                 type=\"text\"\\n                 step=\"any\"\\n                 min=\"{{form.min}}\"\\n                 max=\"{{form.max}}\"\\n                 id=\"{{form.key.join(\\'.\\')}}\"\\n                 name=\"{{form.key.join(\\'.\\')}}\"\\n                 ng-model=\"$$value$$\">\\n        </div>\\n        <span class=\"help-block\" sf-message=\"form.description\"></span>\\n      </div>');\n\t\n\t  $templateCache.put('app/components/cn-flex-form/forms/cn-url.html', '\\n      <div class=\"form-group {{form.htmlClass}}\"\\n           ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\n        <label class=\"control-label\"\\n               ng-show=\"showTitle()\"\\n               for=\"{{form.key.join(\\'.\\')}}\">{{form.title}}</label>\\n        <input class=\"form-control\"\\n               cn-url-format\\n               ng-show=\"form.key\"\\n               ng-model-options=\"form.ngModelOptions\"\\n               ng-disabled=\"form.readonly\"\\n               sf-changed=\"form\"\\n               schema-validate=\"form\"\\n               type=\"text\"\\n               id=\"{{form.key.join(\\'.\\')}}\"\\n               name=\"{{form.key.join(\\'.\\')}}\"\\n               ng-model=\"$$value$$\">\\n        <span class=\"help-block\" sf-message=\"form.description\"></span>\\n      </div>');\n\t\n\t  $templateCache.put('app/components/cn-flex-form/forms/cn-radios.html', '<div class=\"form-group {{form.htmlClass}}\"\\n            ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\n         <label class=\"control-label\" ng-show=\"showTitle()\">{{form.title}}</label>\\n         <div class=\"btn-group clearfix\">\\n           <label class=\"radio radio-block\"\\n                  ng-repeat=\"item in form.titleMap\">\\n             <input type=\"radio\"\\n                    sf-changed=\"form\"\\n                    ng-disabled=\"form.readonly\"\\n                    ng-model=\"$$value$$\"\\n                    ng-model-options=\"form.ngModelOptions\"\\n                    schema-validate=\"form\"\\n                    ff-validate=\"form\"\\n                    ng-value=\"item.value\"\\n                    name=\"{{form.key.join(\\'.\\')}}\">\\n             <span class=\"radio-block-icon\" ng-if=\"item.iconClass\">\\n               <i class=\"fa fa-{{item.iconClass}} fa-lg\"></i>\\n             </span>\\n             <span ng-bind-html=\"item.name\"></span>\\n           </label>\\n         </div>\\n         <span class=\"help-block\" sf-message=\"form.description\"></span>\\n       </div>');\n\t\n\t  $templateCache.put('app/components/cn-flex-form/forms/cn-radiobuttons.html', '\\n      <div class=\"form-group schema-form-radiobuttons cn-radiobuttons {{form.htmlClass}}\"\\n           ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\n        <label class=\"control-label\" ng-show=\"showTitle()\">{{form.title}}</label>\\n        <div class=\"btn-group clearfix\">\\n          <label class=\"btn btn-{{item.value}} {{form.btnClass}} {{item.value === $$value$$ ? \\'active\\' : \\'\\'}}\"\\n                 ng-repeat=\"item in form.titleMap\">\\n            <input type=\"radio\"\\n                   class=\"{{form.fieldHtmlClass}} hide\"\\n                   sf-changed=\"form\"\\n                   ng-disabled=\"form.readonly\"\\n                   ng-model=\"$$value$$\"\\n                   ng-model-options=\"form.ngModelOptions\"\\n                   schema-validate=\"form\"\\n                   ff-validate=\"form\"\\n                   ng-value=\"item.value\"\\n                   name=\"{{form.key.join(\\'.\\')}}\">\\n            <i class=\"fa fa-{{item.value}} fa-lg\"></i>\\n            <span ng-bind-html=\"item.name\"></span>\\n          </label>\\n        </div>\\n        <span class=\"help-block\" sf-message=\"form.description\"></span>\\n      </div>');\n\t\n\t  $templateCache.put('app/components/cn-flex-form/forms/cn-percentage.html', '\\n      <div class=\"form-group {{form.htmlClass}}\"\\n           ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\n        <label class=\"control-label\"\\n               ng-show=\"showTitle()\"\\n               for=\"{{form.key && form.key[0]}}\">{{form.title}}</label>\\n        <div class=\"{{form.fieldClass}} input-group\">\\n          <input class=\"form-control\"\\n                 cn-percentage-format\\n                 ng-show=\"form.key\"\\n                 ng-model-options=\"form.ngModelOptions\"\\n                 ng-disabled=\"form.readonly\"\\n                 sf-changed=\"form\"\\n                 schema-validate=\"form\"\\n                 type=\"number\"\\n                 step=\"any\"\\n                 min=\"{{form.min}}\"\\n                 max=\"{{form.max}}\"\\n                 id=\"{{form.key && form.key[0]}}\"\\n                 name=\"{{form.key && form.key[0]}}\"\\n                 ng-model=\"$$value$$\">\\n           <div class=\"input-group-addon\"\\n                  ng-disabled=\"form.readonly\"\\n                  for=\"{{form.key && form.key[0]}}\">%</div>\\n        </div>\\n        <span class=\"help-block\" sf-message=\"form.description\"></span>\\n      </div>');\n\t\n\t  $templateCache.put('app/components/cn-flex-form/forms/cn-display.html', '\\n      <div class=\"form-group cn-display{{form.htmlClass}}\">\\n        <input ng-show=\"form.key\"\\n               class=\"form-control\"\\n               id=\"{{form.key.join(\\'.\\')}}\"\\n               name=\"{{form.key.join(\\'.\\')}}\"\\n               ng-disabled=\"true\"\\n               value=\"{{form.getDisplay(form.key, form.arrayIndex)}}\">\\n      </div>');\n\t\n\t  $templateCache.put('app/components/cn-flex-form/forms/cn-fieldset.html', '\\n      <fieldset\\n        ng-disabled=\"form.readonly\"\\n        class=\"schema-form-fieldset {{form.htmlClass}}\"\\n        ng-class=\"{\\'borderless\\': form.pos === 0, \\'notitle\\': form.notitle || !form.title}\">\\n        <legend ng-hide=\"form.notitle\"\\n                ng-click=\"form.toggleCollapse(form)\"\\n                ng-class=\"{\\'sr-only\\': !showTitle(), collapsible: form.collapsible}\"\\n                ng-mouseenter=\"form.render = true\">\\n          <i ng-show=\"form.collapsible\"\\n             class=\"fa fa-caret-{{form.collapsed ? \\'right\\' : \\'down\\'}}\"></i>\\n          {{ form.title }}\\n        </legend>\\n        <div class=\"help-block\" ng-show=\"form.description\" ng-bind-html=\"form.description\"></div>\\n        <div uib-collapse=\"form.collapsed\">\\n          <div ng-if=\"form.render\">\\n            <sf-decorator ng-repeat=\"item in form.items\" form=\"item\"/>\\n          </div>\\n        </div>\\n      </fieldset>');\n\t\n\t  $templateCache.put('app/components/cn-flex-form/forms/cn-mediaupload.html', '\\n      <div class=\"form-group {{form.htmlClass}}\"\\n           ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\n        <label class=\"control-label\"\\n               ng-show=\"showTitle()\"\\n               for=\"{{form.key && form.key[0]}}\">{{form.title}}</label>\\n        <media-upload ng-model=\"$$value$$\"\\n                      cn-disabled=\"form.readonly\"\\n                      cn-file-type=\"form.fileType\"\\n                      cn-upload-path=\"form.uploadPath\"\\n                      cn-data=\"form.data\"\\n                      cn-preview-path=\"form.previewPath\"\\n                      cn-model-value-key=\"form.modelValueKey\"\\n                      cn-existing-preview=\"form.existingPreview\"\\n                      ng-model-options=\"form.ngModelOptions\"\\n                      sf-changed=\"form\"\\n                      schema-validate=\"form\"\\n                      ff-form=\"form\"\\n                      class=\"clearfix\">\\n        </media-upload>\\n        <span class=\"help-block\" sf-message=\"form.description\"></span>\\n     </div>');\n\t\n\t  $templateCache.put('app/components/cn-flex-form/forms/cn-csvupload.html', '\\n      <div class=\"form-group {{form.htmlClass}}\"\\n           ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\n        <label class=\"control-label\"\\n               ng-show=\"showTitle()\"\\n               for=\"{{form.key && form.key[0]}}\">{{form.title}}</label>\\n        <csv-upload ng-model=\"$$value$$\"\\n                      cn-upload-path=\"form.uploadPath\"\\n                      ng-model-options=\"form.ngModelOptions\"\\n                      sf-changed=\"form\"\\n                      schema-validate=\"form\"\\n                      ff-form=\"form\"\\n                      class=\"clearfix\">\\n        </csv-upload>\\n        <span class=\"help-block\" sf-message=\"form.description\"></span>\\n     </div>');\n\t\n\t  $templateCache.put('app/components/cn-flex-form/forms/cn-reusable.html', '\\n      <div class=\"form-group cn-reusable {{form.htmlClass}}\"\\n           ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\n        <label class=\"control-label\"\\n               ng-show=\"showTitle()\"\\n               for=\"{{form.key.join(\\'.\\')}}\">{{form.title}}</label>\\n        <cn-select-or\\n          ng-show=\"form.key\"\\n          select-from=\"form.library\"\\n          ng-model=\"$$value$$\"\\n          ng-model-options=\"form.ngModelOptions\"\\n          sf-changed=\"form\"\\n          schema-validate=\"form\"\\n          ff-form=\"form\"\\n          directiveId=\"form.directiveId\"\\n          item-template=\"form.itemTemplate\"\\n          toggle-text=\"form.toggleText\"\\n          ng-disabled=\"form.readonly\"\\n          view=\"form.view\">\\n          <sf-decorator ng-repeat=\"item in form.items\" form=\"item\"/>\\n        </cn-select-or>\\n        <p ng-if=\"form.loadMore && form.view === \\'list\\'\">\\n          <a ng-click=\"form.loadMore()\"\\n             class=\"btn btn-default btn-block\">Load More</a>\\n        </p>\\n        <span class=\"help-block\" sf-message=\"form.description\"></span>\\n      </div>');\n\t\n\t  $templateCache.put('app/components/cn-flex-form/forms/cn-table.html', '\\n      <div class=\"form-group cn-ff-table {{form.htmlClass}}\"\\n           ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\n        <h6>{{form.title}}</h6>\\n        <div class=\"row\">\\n          <div ng-repeat=\"col in form.columns\" class=\"{{col.columnWidth}}\">\\n            <p class=\"column-header\">{{col.columnHeader}}</p>\\n          </div>\\n        </div>\\n        <div class=\"row\" ng-repeat=\"row in form.items\">\\n          <div ng-repeat=\"col in row.items\" class=\"{{col.columnWidth}}\">\\n            <sf-decorator form=\"col\"></sf-decorator>\\n          </div>\\n        </div>\\n        <span class=\"help-block\" sf-message=\"form.description\"></span>\\n      </div>');\n\t\n\t  $templateCache.put('app/components/cn-flex-form/forms/cn-creativeimage.html', '\\n      <div class=\"form-group {{form.htmlClass}}\"\\n           ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\n        <label class=\"control-label\"\\n               ng-show=\"showTitle()\"\\n               for=\"{{form.key && form.key[0]}}\">{{form.title}}</label>\\n        <cn-creative-image ng-model=\"$$value$$\"\\n                      cn-disabled=\"form.readonly\"\\n                      cn-upload-path=\"form.uploadPath\"\\n                      cn-data=\"form.data\"\\n                      cn-preview-path=\"form.previewPath\"\\n                      cn-model-value-key=\"form.modelValueKey\"\\n                      cn-existing-preview=\"form.existingPreview\"\\n                      ng-model-options=\"form.ngModelOptions\"\\n                      cn-ng-model-key=\"form.ngModelKey\"\\n                      sf-changed=\"form\"\\n                      schema-validate=\"form\"\\n                      ff-form=\"form\"\\n                      class=\"clearfix\">\\n        </cn-creative-image>\\n        <span class=\"help-block\" sf-message=\"form.description\"></span>\\n     </div>');\n\t\n\t  $templateCache.put('app/components/cn-flex-form/forms/cn-schedule.html', '\\n      <div class=\"form-group {{ form.htmlClass }}\"\\n           ng-class=\"{ \\'has-error\\': hasError(), \\'has-success\\': hasSuccess() }\">\\n        <label class=\"control-label\"\\n               ng-show=\"showTitle()\"\\n               for=\"{{ form.key.join(\\'.\\') }}\">\\n          {{ form.title }}\\n        </label>\\n        <cn-schedule form=\"form\"\\n                     ng-model=\"$$value$$\">\\n        </cn-schedule>\\n        <span class=\"help-block\" sf-message=\"form.description\"></span>\\n      </div>\\n    ');\n\t\n\t  $templateCache.put('app/components/cn-flex-form/forms/cn-facebookvideo.html', '\\n      <div class=\"form-group {{form.htmlClass}}\"\\n           ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\n        <label class=\"control-label\"\\n               ng-show=\"showTitle()\"\\n               for=\"{{form.key && form.key[0]}}\">{{form.title}}</label>\\n        <cn-facebook-video ng-model=\"$$value$$\"\\n                      cn-disabled=\"form.readonly\"\\n                      cn-upload-path=\"form.uploadPath\"\\n                      cn-data=\"form.data\"\\n                      cn-preview-path=\"form.previewPath\"\\n                      cn-model-value-key=\"form.modelValueKey\"\\n                      cn-existing-preview=\"form.existingPreview\"\\n                      ng-model-options=\"form.ngModelOptions\"\\n                      cn-video-key=\"form.videoKey\"\\n                      cn-thumbnail-key=\"form.thumbnailKey\"\\n                      sf-changed=\"form\"\\n                      schema-validate=\"form\"\\n                      ff-form=\"form\"\\n                      class=\"clearfix\">\\n        </cn-facebook-video>\\n        <span class=\"help-block\" sf-message=\"form.description\"></span>\\n     </div>');\n\t}\n\t\n\texports.schemaFormConfig = schemaFormConfig;\n\texports.addTemplates = addTemplates;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tcnFlexFormServiceProvider.$inject = [\"schemaFormDecoratorsProvider\", \"cnFlexFormTypesProvider\"];\n\tCNFlexFormService.$inject = [\"Api\", \"$parse\", \"cnFlexFormConfig\", \"cnFlexFormTypes\", \"sfPath\", \"$interpolate\", \"$timeout\", \"cnUtil\", \"$stateParams\"];\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\t// Need these modules for test bundle\n\tvar _ = typeof window !== 'undefined' && window._ || __webpack_require__(6);\n\tvar ObjectPath = typeof window !== 'undefined' && window.ObjectPath || __webpack_require__(7);\n\t\n\tvar fieldTypeHandlers = {\n\t  'fieldset': 'processFieldset',\n\t  'cn-radios': 'processRadios',\n\t  'cn-radiobuttons': 'processRadiobuttons',\n\t  'cn-autocomplete': 'processSelect',\n\t  'cn-datetimepicker': 'processDate',\n\t  'help': 'processHelp',\n\t  'cn-display': 'processDisplay',\n\t  'cn-currency': 'processCurrency',\n\t  'cn-percentage': 'processPercentage',\n\t  'cn-url': 'processUrl',\n\t  'cn-mediaupload': 'processMediaUpload',\n\t  'cn-creativeimage': 'processCreativeImage',\n\t  'cn-facebookvideo': 'processFacebookVideo',\n\t  'cn-csvupload': 'processCsvUpload',\n\t  'cn-reusable': 'processReusable',\n\t  'cn-toggle': 'processToggle',\n\t  'cn-table': 'processTable',\n\t  'component': 'processComponent',\n\t  'section': 'processSection',\n\t  'tabarray': 'processSection',\n\t  'array': 'processArray',\n\t  'cn-schedule': 'processSchedule'\n\t};\n\t\n\t// handlers that don't run on secondPass are ones that shouldn't ever change\n\t// and we want to avoid compounding their effects\n\tvar fieldPropHandlers = [{\n\t  prop: 'default',\n\t  handler: function handler(field, service) {\n\t    return service.processDefault(field);\n\t  }\n\t}, {\n\t  prop: 'resolve',\n\t  handler: function handler(field, service, secondPass) {\n\t    return !secondPass && service.processResolve(field);\n\t  }\n\t}, {\n\t  prop: 'selectDisplay',\n\t  handler: function handler(field, service) {\n\t    return service.processSelectDisplay(field);\n\t  }\n\t}, {\n\t  prop: 'schema',\n\t  handler: function handler(field, service) {\n\t    return _.isUndefined(field.default) && !_.isUndefined(field.schema.default) && service.processDefault(field);\n\t  }\n\t}, {\n\t  prop: 'watch',\n\t  handler: function handler(field, service, secondPass) {\n\t    return !secondPass && field.watch && service.processFieldWatch(field);\n\t  }\n\t}, {\n\t  prop: 'type',\n\t  handler: function handler(field, service, secondPass) {\n\t    return service.processFieldType(field, secondPass);\n\t  }\n\t}, {\n\t  prop: 'conditionals',\n\t  handler: function handler(field, service) {\n\t    return service.processConditional(field);\n\t  }\n\t}, {\n\t  prop: 'updateSchema',\n\t  handler: function handler(field, service, secondPass) {\n\t    return !secondPass && service.processFieldUpdatedSchema(field);\n\t  }\n\t}];\n\t\n\tfunction cnFlexFormServiceProvider(schemaFormDecoratorsProvider, cnFlexFormTypesProvider) {\n\t  'ngInject';\n\t\n\t  return {\n\t    registerField: registerField,\n\t    $get: CNFlexFormService\n\t  };\n\t\n\t  //////////\n\t\n\t  function registerField(fieldType) {\n\t    if (fieldType.condition) {\n\t      cnFlexFormTypesProvider.registerFieldType({\n\t        condition: fieldType.condition,\n\t        type: fieldType.type\n\t      });\n\t    }\n\t\n\t    if (fieldType.handler) {\n\t      fieldTypeHandlers[fieldType.type] = fieldType.handler;\n\t    }\n\t\n\t    if (fieldType.templateUrl) {\n\t      schemaFormDecoratorsProvider.addMapping('bootstrapDecorator', fieldType.type, fieldType.templateUrl);\n\t      schemaFormDecoratorsProvider.createDirective(fieldType.type, fieldType.templateUrl);\n\t    }\n\t  }\n\t}\n\t\n\tfunction CNFlexFormService(Api, $parse, cnFlexFormConfig, cnFlexFormTypes, sfPath, $interpolate, $timeout, cnUtil, $stateParams) {\n\t  'ngInject';\n\t\n\t  var services = [];\n\t  var prototype = {\n\t    compile: compile,\n\t    addArrayCopy: addArrayCopy,\n\t    addToDataCache: addToDataCache,\n\t    addToFormCache: addToFormCache,\n\t    addToScopeCache: addToScopeCache,\n\t    broadcastErrors: broadcastErrors,\n\t    buildError: buildError,\n\t    cleanup: cleanup,\n\t    deleteArrayCopiesFor: deleteArrayCopiesFor,\n\t    deregisterHandlers: deregisterHandlers,\n\t    deregisterArrayHandlers: deregisterArrayHandlers,\n\t    getArrayCopy: getArrayCopy,\n\t    getArrayCopies: getArrayCopies,\n\t    getArrayCopiesFor: getArrayCopiesFor,\n\t    getArrayScopes: getArrayScopes,\n\t    getDefault: getDefault,\n\t    getFromDataCache: getFromDataCache,\n\t    getFromFormCache: getFromFormCache,\n\t    getFromScopeCache: getFromScopeCache,\n\t    getFormsToProcess: getFormsToProcess,\n\t    getKey: getKey,\n\t    getSchema: getSchema,\n\t    getWatchables: getWatchables,\n\t    handleResolve: handleResolve,\n\t    incrementUpdates: incrementUpdates,\n\t    initArrayCopyWatch: initArrayCopyWatch,\n\t    initModelWatch: initModelWatch,\n\t    initSchemaParams: initSchemaParams,\n\t    isCompiled: isCompiled,\n\t    onModelWatch: onModelWatch,\n\t    parseAll: parseAll,\n\t    parseAny: parseAny,\n\t    parseCondition: parseCondition,\n\t    parseExpression: parseExpression,\n\t    processArray: processArray,\n\t    processCreativeImage: processCreativeImage,\n\t    processDefault: processDefault,\n\t    processDisplay: processDisplay,\n\t    processFacebookVideo: processFacebookVideo,\n\t    processField: processField,\n\t    processFieldset: processFieldset,\n\t    processFieldProps: processFieldProps,\n\t    processFieldType: processFieldType,\n\t    processFieldUpdatedSchema: processFieldUpdatedSchema,\n\t    processFieldWatch: processFieldWatch,\n\t    processComponent: processComponent,\n\t    processConditional: processConditional,\n\t    processCurrency: processCurrency,\n\t    processPercentage: processPercentage,\n\t    processUrl: processUrl,\n\t    processDate: processDate,\n\t    processHelp: processHelp,\n\t    processRadios: processRadios,\n\t    processRadiobuttons: processRadiobuttons,\n\t    processReusable: processReusable,\n\t    processSchema: processSchema,\n\t    processSelectDisplay: processSelectDisplay,\n\t    processResolve: processResolve,\n\t    processSection: processSection,\n\t    processSelect: processSelect,\n\t    processSchedule: processSchedule,\n\t    processTable: processTable,\n\t    processTemplate: processTemplate,\n\t    processToggle: processToggle,\n\t    processUpdatedSchema: processUpdatedSchema,\n\t    processMediaUpload: processMediaUpload,\n\t    processCsvUpload: processCsvUpload,\n\t    registerArrayHandlers: registerArrayHandlers,\n\t    registerHandler: registerHandler,\n\t    registerResolve: registerResolve,\n\t    replaceArrayIndex: replaceArrayIndex,\n\t    reprocessField: reprocessField,\n\t    resolveNestedExpressions: resolveNestedExpressions,\n\t    setArrayIndex: setArrayIndex,\n\t    setupConfig: setupConfig,\n\t    setupArraySelectDisplay: setupArraySelectDisplay,\n\t    setupSelectDisplay: setupSelectDisplay,\n\t    setupSchemaRefresh: setupSchemaRefresh,\n\t    silenceListeners: silenceListeners,\n\t    skipDefaults: skipDefaults\n\t  };\n\t\n\t  function getService(fn) {\n\t    return _.find(services, fn);\n\t  }\n\t\n\t  function destroyService(fn) {\n\t    var service = getService(fn);\n\t    if (service) {\n\t      service.cleanup();\n\t      _.empty(service);\n\t      _.remove(services, function (s) {\n\t        return s === service;\n\t      });\n\t    }\n\t  }\n\t\n\t  function CNFlexFormConstructor() {\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    if (args.length > 1) {\n\t      var schema = args[0],\n\t          model = args[1],\n\t          config = args[2];\n\t    } else {\n\t      var _args$ = args[0],\n\t          schema = _args$.schema,\n\t          model = _args$.model,\n\t          config = _args$.config;\n\t    }\n\t\n\t    var curService = getService(function (service) {\n\t      return service.model === model;\n\t    });\n\t    if (curService) {\n\t      if (schema) {\n\t        curService.compile(schema, model, config);\n\t      }\n\t      return curService;\n\t    }\n\t\n\t    var newService = new CNFlexForm(schema, model, config);\n\t    services.push(newService);\n\t    return newService;\n\t  }\n\t\n\t  function CNFlexForm(schema, model, config) {\n\t\n\t    if ($stateParams.debug) {\n\t      window.services = services;\n\t    }\n\t\n\t    this.arrayCopies = {};\n\t    this.arrayListeners = {};\n\t    this.dataCache = {};\n\t    this.defaults = {};\n\t    this.errors = [];\n\t    this.events = [];\n\t    this.formCache = {};\n\t    this.scopeCache = {};\n\t    this.listeners = {};\n\t    this.resolveRegister = {};\n\t    this.model = model;\n\t    this.updates = 0;\n\t    this.skipDefault = {};\n\t\n\t    var overrides = config.getParams ? config.getParams() : {};\n\t    this.params = cnFlexFormConfig.getStateParams(overrides);\n\t\n\t    this._ = _;\n\t\n\t    this.compile(schema, model, config);\n\t  }\n\t\n\t  _.extend(CNFlexForm.prototype, prototype);\n\t  _.extend(CNFlexFormConstructor, prototype, { getService: getService, destroyService: destroyService });\n\t\n\t  return CNFlexFormConstructor;\n\t\n\t  //////////////\n\t\n\t  function compile(schema, model, config) {\n\t    var service = this;\n\t\n\t    if (config && config.getScope) {\n\t      service.scope = config.getScope();\n\t    }\n\t    service.schema = schema;\n\t    service.model = model;\n\t\n\t    if (!service.isCompiled()) {\n\t      service.setupConfig(config);\n\t\n\t      if (schema.forms) {\n\t        _.each(schema.forms, function (form) {\n\t          _.each(form.form, service.processField.bind(service));\n\t        });\n\t      } else {\n\t        _.each(schema.form, service.processField.bind(service));\n\t      }\n\t\n\t      service.initModelWatch();\n\t      service.initArrayCopyWatch();\n\t      service.isCompiled(true);\n\t    }\n\t\n\t    service.broadcastErrors();\n\t  }\n\t\n\t  function isCompiled(setValue) {\n\t    var service = this;\n\t    if (setValue) {\n\t      service.schema.compiled = setValue;\n\t    }\n\t    return service.schema && service.schema.compiled;\n\t  }\n\t\n\t  function setupConfig(config) {\n\t    var service = this;\n\t    if (config) {\n\t      if (config.formCtrl) service.formCtrl = config.formCtrl;\n\t      if (config.updateSchema) service.updateSchema = config.updateSchema;\n\t      if (config.getSchema) service.getSchemaForm = service.setupSchemaRefresh(config.getSchema);\n\t    }\n\t    service.getParamOverrides = config.getParams || _.noop;\n\t  }\n\t\n\t  function processSchema(field) {\n\t    var service = this;\n\t    var schema = field.schema;\n\t\n\t\n\t    field.getSchemaType = function () {\n\t      return _.isArray(schema.type) ? _.first(schema.type) : schema.type;\n\t    };\n\t    if (!field.type) field.type = field.getSchemaType && field.getSchemaType();\n\t  }\n\t\n\t  function processDefault(field) {\n\t    var service = this;\n\t    var schema = field.schema;\n\t\n\t    var curDefault = field.default || schema.default;\n\t    var key = service.getKey(field.key);\n\t\n\t    if (service.skipDefault[key]) {\n\t      delete service.skipDefault[key];\n\t      return;\n\t    }\n\t\n\t    if (field.condition) {\n\t      var condition = replaceArrayIndex(field.condition, field.arrayIndex || key);\n\t      if (!service.parseCondition(condition)) return;\n\t    }\n\t\n\t    // if schemaUpdate hasn't been triggered, let schemaForm directive handle defaults\n\t    //if(service.updates || field.default) {\n\t    if (!_.isUndefined(curDefault)) {\n\t      if (key.includes && key.includes('[]')) return;\n\t      var model = service.parseExpression(field.key, service.model);\n\t      var modelValue = model.get();\n\t      // if there's an existing default and it's the same as the current value\n\t      // update the current value to the new default\n\t      if (_.isUndefined(modelValue) || (_.has(service.defaults, key) ? angular.equals(modelValue, service.defaults[key]) : _.isTrulyEmpty(modelValue)) && !angular.equals(modelValue, curDefault)) {\n\t        model.set(angular.copy(curDefault));\n\t      }\n\t    }\n\t    service.defaults[key] = angular.copy(curDefault);\n\t\n\t    if (schema.format === 'url' && !field.validationMessage) {\n\t      if (!field.type) field.type = 'cn-url';\n\t      field.validationMessage = 'Must be a valid url (https://...)';\n\t    }\n\t  }\n\t\n\t  function processFieldset(fieldset) {\n\t    var service = this;\n\t\n\t    fieldset.type = 'cn-fieldset';\n\t    fieldset.items.forEach(service.processField.bind(service));\n\t\n\t    if (_.has(fieldset, 'pos') && fieldset.pos === 0) {\n\t      fieldset.htmlClass = (fieldset.htmlClass || '') + ' borderless';\n\t    }\n\t    if (fieldset.collapsible) {\n\t      fieldset.toggleCollapse = function (fieldset) {\n\t        if (fieldset.collapsible) {\n\t          fieldset.collapsed = !fieldset.collapsed;\n\t        }\n\t      };\n\t\n\t      fieldset.render = !fieldset.collapsed;\n\t    } else {\n\t      fieldset.render = true;\n\t    }\n\t  }\n\t\n\t  function processFieldType(field, secondPass) {\n\t    var service = this;\n\t    var fieldType = cnFlexFormTypes.getFieldType(field);\n\t    var handler = fieldTypeHandlers[fieldType];\n\t    if (_.isString(handler)) {\n\t      service[handler](field, secondPass);\n\t    } else if (_.isFunction(handler)) {\n\t      handler.call(service, field, secondPass);\n\t    }\n\t  }\n\t\n\t  function getOgKeys(field) {\n\t    return _.reject(_.keys(field), function (key) {\n\t      return (/^key$|^htmlClass$|^_/.test(key)\n\t      );\n\t    });\n\t  }\n\t\n\t  function processField(field, pos) {\n\t    var service = this;\n\t\n\t    if (angular.isDefined(pos)) {\n\t      field.pos = pos;\n\t    }\n\t\n\t    if (!field._ogKeys) {\n\t      field._ogKeys = getOgKeys(field);\n\t    }\n\t\n\t    var key = service.getKey(field.key);\n\t\n\t    if (key) {\n\t      service.addToFormCache(field, key);\n\t      var schema = service.getSchema(key);\n\t\n\t      if (schema) {\n\t        field.schema = schema;\n\t        if (schema.description) field.description = schema.description;\n\t        if (schema.type === 'array' && !('showClearAll' in field)) field.showClearAll = true;\n\t      }\n\t\n\t      service.processSchema(field);\n\t    }\n\t\n\t    service.processFieldProps(field);\n\t\n\t    if (key) {\n\t      (function (key) {\n\t        if (_.find(service.errors, { key: key })) {\n\t          service.errors = _.reject(service.errors, { key: key });\n\t          service.scope.$broadcast('schemaForm.error.' + key, 'serverValidation', true);\n\t          service.scope.$broadcast('schemaForm.error.' + key, 'schemaForm', true);\n\t        }\n\t      })(getDotKey(key));\n\t\n\t      if (field.error) {\n\t        service.errors.push(service.buildError(field));\n\t        if (_.isEmpty(field.ngModelOptions)) {\n\t          field.ngModelOptions = {\n\t            allowInvalid: true\n\t          };\n\t        } else {\n\t          field.ngModelOptions.allowInvalid = true;\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  function processFieldProps(field, secondPass) {\n\t    var service = this;\n\t    fieldPropHandlers.forEach(function (_ref) {\n\t      var prop = _ref.prop,\n\t          handler = _ref.handler;\n\t      return _.has(field, prop) && handler(field, service, secondPass);\n\t    });\n\t  }\n\t\n\t  function getKey(key) {\n\t    if (_.isArray(key)) {\n\t      key = _.reduce(key, function (total, next) {\n\t        return (/^(-?\\d*)$/.test(next) ? total + '[' + next + ']' : total + '.' + next\n\t        );\n\t      });\n\t    }\n\t    return key;\n\t  }\n\t\n\t  function getSchema(key, depth) {\n\t    var service = this;\n\t    if (!key) return;\n\t\n\t    key = ObjectPath.parse(service.getKey(key));\n\t    depth = depth || service.schema.schema.properties;\n\t\n\t    var first = void 0,\n\t        next = void 0;\n\t\n\t    while (key.length > 1) {\n\t      next = key[1];\n\t      if (/^-?\\d*$/.test(next)) {\n\t        if (key.length === 2) {\n\t          depth = depth[key.shift()];\n\t        } else {\n\t          depth = depth[key.shift()].items.properties;\n\t          key.shift();\n\t        }\n\t      } else {\n\t        depth = depth[key.shift()].properties;\n\t      }\n\t    }\n\t\n\t    // if array item\n\t    first = key[0] || 'items';\n\t\n\t    return depth[first];\n\t  }\n\t\n\t  function getDefault(field) {\n\t    var service = this;\n\t    field = field.key ? field : service.getFromFormCache(field);\n\t    return field && (angular.isDefined(field.default) ? field.default : field.schema && field.schema.default);\n\t  }\n\t\n\t  function getWatchables(exp) {\n\t    var watchables = [];\n\t    var nested = matchNestedExpression(exp);\n\t    var replaceStr = '';\n\t\n\t    while (nested) {\n\t      if (/^-?\\d+$/.test(nested[1]) || /^(\"|').*(\"|')$/.test(nested[1])) {\n\t        replaceStr = nested[0];\n\t        exp = exp.replace(nested[0], 'ff_replace_ff');\n\t      } else {\n\t        watchables.push(nested[1].replace(/ff_replace_ff/g, replaceStr));\n\t        replaceStr = '';\n\t        exp = exp.replace(nested[0], '');\n\t      }\n\t      nested = matchNestedExpression(exp);\n\t    }\n\t\n\t    return [].concat(watchables, [exp.replace(/ff_replace_ff/g, replaceStr)]);\n\t  }\n\t\n\t  function processResolve(field) {\n\t    var service = this;\n\t    var key = service.getKey(field.key);\n\t\n\t    _.each(field.resolve, function (dataProp, fieldProp) {\n\t      dataProp = replaceArrayIndex(dataProp, key || field.arrayIndex);\n\t      if (dataProp.includes('[arrayIndex]')) return;\n\t\n\t      service.handleResolve(field, fieldProp, dataProp, true);\n\t\n\t      getWatchables(dataProp).forEach(function (watchable) {\n\t        var _ref2 = watchable.match(/(schema\\.data\\.|model\\.)(\\S+)/) || [],\n\t            _ref3 = _slicedToArray(_ref2, 3),\n\t            base = _ref3[1],\n\t            exp = _ref3[2];\n\t\n\t        if (base) {\n\t          if (base === 'schema.data.') {\n\t            service.registerResolve(field, fieldProp, exp, dataProp);\n\t          } else if (base === 'model.') {\n\t            service.registerHandler(exp, function () {\n\t              service.handleResolve(field, fieldProp, dataProp);\n\t            });\n\t          }\n\t        }\n\t      });\n\t    });\n\t\n\t    return field;\n\t  }\n\t\n\t  function parseAny(exp, base) {\n\t    var service = this;\n\t    var result = void 0;\n\t    var eithers = exp.split(' || ');\n\t    var match = _.find(eithers, function (x) {\n\t      var v = service.parseExpression(x, base).get();\n\t      if (!_.isUndefined(v)) {\n\t        result = v;\n\t        return true;\n\t      }\n\t    });\n\t    return result;\n\t  }\n\t\n\t  function parseAll(exp, base) {\n\t    var service = this;\n\t    var all = exp.split(' && ');\n\t    var match = _.reduce(all, function (acc, x) {\n\t      var v = service.parseExpression(x, base).get();\n\t      if (!_.isUndefined(v)) {\n\t        acc.push(v);\n\t      }\n\t      return acc;\n\t    }, []);\n\t    return all.length === match.length ? _.last(match) : undefined;\n\t  }\n\t\n\t  function handleResolve(field, fieldProp, exp, skipPropHandlers) {\n\t    var service = this;\n\t    var data = exp.includes(' || ') ? service.parseAny(exp) : exp.includes(' && ') ? service.parseAll(exp) : service.parseExpression(exp).get();\n\t\n\t    if (data && data.cursor) {\n\t      field.loadMore = function () {\n\t        var dataProp = exp.match(/schema\\.data\\.(.+)/)[1];\n\t        service.refreshSchema('data:' + dataProp + ':' + data.cursor);\n\t      };\n\t    } else {\n\t      delete field.loadMore;\n\t    }\n\t\n\t    var val = data && data.data ? data.data : data;\n\t    var val1 = fieldProp === 'condition' ? val + '' : val;\n\t    service.parseExpression(fieldProp, field).set(val1);\n\t\n\t    if (!skipPropHandlers) {\n\t      fieldPropHandlers.forEach(function (_ref4) {\n\t        var prop = _ref4.prop,\n\t            handler = _ref4.handler;\n\t        return prop === fieldProp && handler(field, service);\n\t      });\n\t    }\n\t  }\n\t\n\t  function registerResolve(field, fieldProp, dataProp, exp) {\n\t    var service = this;\n\t\n\t    var fieldKey = service.getKey(field.key);\n\t    service.resolveRegister[dataProp] = service.resolveRegister[dataProp] || {};\n\t\n\t    var register = service.resolveRegister[dataProp];\n\t    register[fieldKey] = register[fieldKey] || [];\n\t    register[fieldKey].push({ field: field, prop: fieldProp, exp: exp });\n\t  }\n\t\n\t  function processConditional(field) {\n\t    var service = this;\n\t\n\t    _.each(field.conditionals, function (condition, key) {\n\t      var handler = function handler(val, prev) {\n\t        field[key] = service.parseCondition(condition);\n\t        var scope = service.getFromScopeCache(service.getKey(field.key));\n\t        if (key === 'required' && scope) {\n\t          service.scope.$broadcast('schemaFormValidate');\n\t        }\n\t      };\n\t      field.conditionals[key].match(/model\\.([^\\s]+)/g).map(function (path) {\n\t        return path.match(/model\\.([^\\s]+)/)[1];\n\t      }).forEach(function (key) {\n\t        service.registerHandler(key, handler);\n\t      });\n\t      handler();\n\t    });\n\t  }\n\t\n\t  function processFieldWatch(field) {\n\t    var service = this;\n\t    if (!field.watch) return;\n\t\n\t    var schema = field.schema;\n\t    field.watch = _.isArray(field.watch) ? field.watch : [field.watch];\n\t\n\t    _.each(field.watch, function (watch) {\n\t      if (watch.resolution) {\n\t        var condition = void 0;\n\t        if (_.isString(field.condition)) {\n\t          // if the condition isn't already wrapped in parens, wrap it\n\t          condition = /^\\(.*\\)$/.test(field.condition) ? field.condition : '(' + field.condition + ')';\n\t        }\n\t        if (_.isString(watch.condition)) {\n\t          condition = condition ? condition + ' && ' + watch.condition : watch.condition;\n\t        }\n\t        var resolution = watch.resolution;\n\t        var handler = void 0;\n\t\n\t        if (_.isFunction(resolution)) {\n\t          handler = function handler(cur, prev) {\n\t            if (!condition || service.parseCondition(condition)) {\n\t              resolution(cur, prev);\n\t            }\n\t          };\n\t        } else {\n\t          var adjustment = {};\n\t\n\t          adjustment.date = resolution.match(/\\+ ?(\\d+) (days|hours)/);\n\t\n\t          if (adjustment.date) {\n\t            adjustment.date = {\n\t              val: adjustment.date[1],\n\t              units: adjustment.date[2]\n\t            };\n\t            resolution = resolution.replace(adjustment.date.val, '').trim();\n\t          } else {\n\t            adjustment.math = resolution.match(/(\\+|\\-|\\/|\\*) ?(\\S+)/);\n\t\n\t            if (adjustment.math) {\n\t              adjustment.operator = {\n\t                '+': 'add',\n\t                '-': 'subtract',\n\t                '*': 'multiply',\n\t                '/': 'divide'\n\t              }[adjustment.math[1]];\n\t\n\t              adjustment.adjuster = service.parseExpression(adjustment.math[2]);\n\t            }\n\t          }\n\t\n\t          resolution = resolution.match(/(\\S+) ?= ?(\\S+)/);\n\t\n\t          handler = function handler(val, prev, key, trigger) {\n\t            var curCondition = condition && replaceArrayIndex(condition, key);\n\t            if (_.isString(curCondition) && curCondition.includes('[arrayIndex]')) {\n\t              return console.error('arrayIndex could not be repalced from expression \\'' + curCondition + '\\'');\n\t            }\n\t            var updatePath = replaceArrayIndex(resolution[1], key);\n\t            var fromPath = replaceArrayIndex(resolution[2], key);\n\t\n\t            var update = service.parseExpression(updatePath);\n\t\n\t            // avoid loop where two watches keep triggering each other\n\t            if (trigger === update.path().key) return;\n\t            trigger = update.path().key;\n\t\n\t            var from = service.parseExpression(fromPath);\n\t\n\t            if (!condition || service.parseCondition(curCondition)) {\n\t              if (adjustment.date) {\n\t                update.set(moment(from.get()).add(adjustment.date.val, adjustment.date.units).toDate());\n\t              } else if (adjustment.math) {\n\t                //var result = _[adjustment.operator](from.get(), adjustment.adjuster.get());\n\t                //let result = eval(from.get() + adjustment.math[1] + adjustment.adjuster.get());\n\t                var result = $parse(from.get() + adjustment.math[1] + adjustment.adjuster.get())();\n\t                schema = schema || field.items && (field.items[0].schema || field.items[0].items && field.items[0].items[0].schema);\n\t                if (field.type === 'cn-currency') {\n\t                  var p = schema && schema.format === 'currency-dollars' ? 2 : 0;\n\t\n\t                  if (adjustment.math[1] === '*') {\n\t                    result = _.floor(result, p);\n\t                  } else if (adjustment.math[1] === '/') {\n\t                    result = _.ceil(result, p);\n\t                  } else {\n\t                    result = _.round(result, p);\n\t                  }\n\t                }\n\t                //service.listeners[update.path().key].prev = result;\n\t                if (service.listeners[trigger]) {\n\t                  service.listeners[trigger].trigger = key;\n\t                }\n\t                update.set(result || 0);\n\t              } else {\n\t                update.set(from.get());\n\t              }\n\t            }\n\t          };\n\t        }\n\t\n\t        service.registerHandler(field, handler, field.updateSchema, watch.initialize);\n\t      }\n\t    });\n\t  }\n\t\n\t  function parseCondition(condition) {\n\t    var service = this;\n\t    if (condition.startsWith(\"_\")) {\n\t      var exp = /^_\\.(.*?)\\((.*?),[\\s(]*(.*?)\\)?\\s*=>[{\\s]*(?:return)?(.*?)\\}?\\)$/;\n\t\n\t      var _condition$match = condition.match(exp),\n\t          _condition$match2 = _slicedToArray(_condition$match, 5),\n\t          fn = _condition$match2[1],\n\t          list = _condition$match2[2],\n\t          predicateParams = _condition$match2[3],\n\t          predicateBody = _condition$match2[4];\n\t\n\t      return _[fn]($parse(list)(service), generatePredicate(predicateParams, predicateBody));\n\t    } else {\n\t      return $parse(condition)(service);\n\t    }\n\t  }\n\t\n\t  function generatePredicate(params, body) {\n\t    return function () {\n\t      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t        args[_key2] = arguments[_key2];\n\t      }\n\t\n\t      return $parse(body)(params.replace(/\\s/g, '').split(',').reduce(function (acc, cur, i) {\n\t        acc[cur] = args[i];return acc;\n\t      }, {}));\n\t    };\n\t  }\n\t\n\t  function processFieldUpdatedSchema(field) {\n\t    var service = this;\n\t    var key = service.getKey(field.key);\n\t    if (!service.updates && field.updateSchema && !service.schema.params[key]) {\n\t      // by this point defaults should be processed so we can get value directly from model\n\t      var curVal = service.parseExpression(key, service.model).get();\n\t      if (!_.isUndefined(curVal)) service.schema.params[key] = curVal;\n\t    }\n\t    service.registerHandler(field, null, field.updateSchema);\n\t  }\n\t\n\t  function registerHandler(key, handler, updateSchema, runHandler) {\n\t    var service = this;\n\t\n\t    // if field is passed instead of key\n\t    if (_.isObject(key) && !_.isArray(key)) {\n\t      if (!key.key && key.items) {\n\t        _.each(key.items, function (field) {\n\t          service.registerHandler(field, handler, field.updateSchema);\n\t        });\n\t        return;\n\t      } else {\n\t        key = key.key;\n\t      }\n\t    }\n\t\n\t    key = service.getKey(key);\n\t    var arrMatch = key.match(/(.*)\\[]\\.?(.*)/);\n\t\n\t    if (arrMatch) {\n\t      service.registerArrayHandlers(arrMatch[1], arrMatch[2], handler, updateSchema, runHandler);\n\t      return;\n\t    }\n\t\n\t    var cur = service.parseExpression(key, service.model).get();\n\t    var defaultValue = _.get(service.getSchema(key), 'default');\n\t\n\t    if (!service.listeners[key]) {\n\t      var prev = angular.copy(cur);\n\t      service.listeners[key] = {\n\t        handlers: [],\n\t        updateSchema: updateSchema,\n\t        prev: prev\n\t      };\n\t    }\n\t\n\t    if (handler) {\n\t      service.listeners[key].handlers.push(handler);\n\t      if (runHandler) handler(cur, null, key);\n\t    }\n\t  }\n\t\n\t  function registerArrayHandlers(arrKey, fieldKey, handler, updateSchema, runHandler) {\n\t    var service = this;\n\t    var onArray = function onArray(cur, prev, reorder) {\n\t\n\t      if (!prev && prev !== 0 && (cur | 0) < 1) return;\n\t      var i, l, key;\n\t\n\t      if (prev > cur || reorder) {\n\t        var lastKey = fieldKey ? arrKey + '[' + (prev - 1) + '].' + fieldKey : arrKey + '[' + (prev - 1) + ']';\n\t\n\t        // only deregister handlers once each time an element is removed\n\t        if (service.listeners[lastKey]) {\n\t          for (i = 0, l = prev; i < l; i++) {\n\t            key = fieldKey ? arrKey + '[' + i + '].' + fieldKey : arrKey + '[' + i + ']';\n\t\n\t            service.deregisterHandlers(key);\n\t          }\n\t        }\n\t        for (i = 0, l = cur; i < l; i++) {\n\t          key = fieldKey ? arrKey + '[' + i + '].' + fieldKey : arrKey + '[' + i + ']';\n\t\n\t          service.registerHandler(key, handler, updateSchema);\n\t          //no need to call if just reregisering handlers\n\t          //if(runHandler) handler(null, null, key);\n\t        }\n\t      } else if (cur > (prev || 0)) {\n\t        for (i = prev | 0, l = cur; i < l; i++) {\n\t          key = fieldKey ? arrKey + '[' + i + '].' + fieldKey : arrKey + '[' + i + ']';\n\t\n\t          service.registerHandler(key, handler, updateSchema, runHandler);\n\t          //if(runHandler) handler(null, null, key);\n\t        }\n\t      }\n\t    };\n\t\n\t    var arrVal = service.parseExpression(arrKey, service.model).get();\n\t    _.each(arrVal, function (field, i) {\n\t      var key = fieldKey ? arrKey + '[' + i + '].' + fieldKey : arrKey + '[' + i + ']';\n\t\n\t      service.registerHandler(key, handler, updateSchema);\n\t      if (runHandler) handler(null, null, key);\n\t    });\n\t\n\t    var listenerKey = arrKey + '.length';\n\t    if (service.arrayListeners[listenerKey]) {\n\t      service.arrayListeners[listenerKey].handlers.push(onArray);\n\t    } else {\n\t      service.arrayListeners[listenerKey] = {\n\t        handlers: [onArray],\n\t        prev: arrVal ? arrVal.length : 0\n\t      };\n\t    }\n\t  }\n\t\n\t  function deregisterHandlers(key) {\n\t    var service = this;\n\t\n\t    key = service.getKey(key);\n\t\n\t    var arrMatch = key.match(/([^[\\]]*)\\[]\\.?(.*)/);\n\t\n\t    if (arrMatch) {\n\t      service.deregisterArrayHandlers(arrMatch[1], arrMatch[2]);\n\t      return;\n\t    }\n\t\n\t    if (service.listeners[key]) service.listeners[key].handlers = [];\n\t    //if(service.listeners[key]) delete service.listeners[key];\n\t  }\n\t\n\t  function deregisterArrayHandlers(arrKey, fieldKey) {\n\t    var service = this;\n\t\n\t    service.parseExpression(arrKey, service.model).get().forEach(function (item, i) {\n\t      fieldKey ? service.deregisterHandlers(arrKey + '[' + i + '].' + fieldKey) : service.deregisterHandlers(arrKey + '[' + i + ']');\n\t    });\n\t  }\n\t\n\t  function initModelWatch() {\n\t    var service = this;\n\t    if (service.watching) return;\n\t    if (service.modelWatch) service.modelWatch();\n\t\n\t    service.modelWatch = service.scope.$watch(function () {\n\t      return service.model;\n\t    }, service.onModelWatch.bind(service), true);\n\t\n\t    service.initSchemaParams();\n\t    service.watching = true;\n\t    service.firstUpdate = true;\n\t  }\n\t\n\t  function onModelWatch(cur, prev) {\n\t    var service = this;\n\t    // we always run through the listeners on the first update because angular seems to mess up\n\t    // when the defaults are applied and uses the same object for both cur and prev\n\t    if (service.firstUpdate || !angular.equals(cur, prev)) {\n\t      service.firstUpdate = false;\n\t      cnUtil.cleanModel(service.model);\n\t\n\t      service.prevParams = angular.copy(service.params);\n\t\n\t      _.each(service.arrayListeners, function (listener, key) {\n\t        var val = service.parseExpression(key, service.model).get();\n\t        if (!angular.equals(val, listener.prev)) {\n\t          listener.handlers.forEach(function (handler) {\n\t            return handler(val, listener.prev);\n\t          });\n\t          listener.prev = angular.copy(val);\n\t        }\n\t      });\n\t\n\t      _.each(service.listeners, function (listener, key) {\n\t        if (listener) {\n\t          var val = service.parseExpression(key, service.model).get();\n\t          var isInitArray = angular.equals(val, []) && !listener.prev;\n\t          if (!angular.equals(val, listener.prev) && !isInitArray) {\n\t            listener.handlers.forEach(function (handler) {\n\t              handler(val, listener.prev, key, listener.trigger);\n\t            });\n\t            listener.trigger = null;\n\t            listener.prev = angular.copy(val);\n\t          }\n\t          if (listener.updateSchema && !angular.isUndefined(val) && !isInitArray && val !== null /* &&\n\t                                                                                                 !angular.equals(val, service.getDefault(key))*/) {\n\t              service.params[key] = val;\n\t            } else {\n\t            delete service.params[key];\n\t          }\n\t        }\n\t      });\n\t\n\t      if (!angular.equals(service.params, service.prevParams)) {\n\t        if (service.model.id && !service.updates && _.isEmpty(service.prevParams)) {\n\t          service.incrementUpdates();\n\t        } else {\n\t          if (_.isFunction(service.refreshSchema)) {\n\t            service.refreshSchema();\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  function initSchemaParams() {\n\t    var service = this;\n\t    _.each(service.listeners, function (listener, key) {\n\t      if (listener) {\n\t        var val = service.parseExpression(key, service.model).get();\n\t        if (listener.updateSchema && !angular.isUndefined(val) && val !== null) {\n\t          service.params[key] = val;\n\t        }\n\t      }\n\t    });\n\t  }\n\t\n\t  function stripIndexes(key) {\n\t    return key.replace(/\\[\\d+]/g, '[]');\n\t  }\n\t\n\t  function initArrayCopyWatch() {\n\t    var service = this;\n\t\n\t    service.events.push(service.scope.$on('schemaFormPropagateFormController', function (event, scope) {\n\t      var form = scope.form;\n\t\n\t      if (!form.key) {\n\t        form.cacheKey = form.type + '-' + _.uniqueId();\n\t      }\n\t      var key = form.cacheKey || service.getKey(form.key);\n\t\n\t      if (_.isNumber(scope.arrayIndex)) {\n\t        var genericKey = stripIndexes(key);\n\t        var index = scope.arrayIndex;\n\t        form.arrayIndex = index;\n\t\n\t        if (!service.getArrayCopy(genericKey, index)) {\n\t          service.processFieldProps(form, true);\n\t        }\n\t\n\t        if (!form.condition) form.condition = 'true';\n\t        // else if (form.condition.includes(\"arrayIndex\")) {\n\t        //   form.condition = service.replaceArrayIndex(form.condition, key);\n\t        // }\n\t\n\t        service.addArrayCopy(scope, genericKey, index);\n\t        scope.$emit('flexFormArrayCopyAdded', genericKey);\n\t      } else {\n\t        service.addToScopeCache(scope, key);\n\t      }\n\t    }));\n\t\n\t    service.events.push(service.scope.$on('schemaFormDeleteScope', function (event, scope, index) {\n\t      var key = service.getKey(scope.form.key);\n\t      var listener = service.listeners[key];\n\t      if (listener) listener.handlers = [];\n\t\n\t      service.deleteArrayCopiesFor(key, index);\n\t\n\t      if (scope.form.link) {\n\t        var list = service.parseExpression(scope.form.link, service.model).get();\n\t        list.splice(index, 1);\n\t        service.deleteArrayCopiesFor(scope.form.link, index);\n\t      }\n\t    }));\n\t  }\n\t\n\t  function addArrayCopy(form, key, index) {\n\t    var service = this;\n\t    if (!index || index < 0) index = 0;\n\t    if (!service.arrayCopies[key]) service.arrayCopies[key] = [];\n\t    service.arrayCopies[key][index] = form;\n\t    //service.arrayCopies[key].push(form);\n\t  }\n\t\n\t  function getArrayCopy(key, index) {\n\t    var service = this;\n\t    var copies = service.arrayCopies[key];\n\t    return copies && copies[index];\n\t  }\n\t\n\t  function getArrayCopies(key) {\n\t    var service = this;\n\t    return _.pluck(service.getArrayScopes(key), 'form');\n\t  }\n\t\n\t  function getArrayCopiesFor(keyStart) {\n\t    var service = this;\n\t    keyStart += '[]';\n\t\n\t    return _.filter(service.arrayCopies, function (copy, key) {\n\t      return key.includes(keyStart);\n\t    });\n\t  }\n\t\n\t  function deleteArrayCopiesFor(key, index) {\n\t    var service = this;\n\t    var copies = service.getArrayCopiesFor(key);\n\t    _.each(copies, function (list) {\n\t      return list && list.splice(index, 1);\n\t    });\n\t  }\n\t\n\t  function getArrayScopes(key) {\n\t    var service = this;\n\t    return service.arrayCopies[key];\n\t  }\n\t\n\t  function addToScopeCache(scope, key) {\n\t    var service = this;\n\t    if (service.scopeCache[key]) {\n\t      console.warn('caching duplicate scope for', key);\n\t    }\n\t    return service.scopeCache[key] = scope;\n\t  }\n\t\n\t  function getFromScopeCache(key) {\n\t    var service = this;\n\t    return service.scopeCache[key];\n\t  }\n\t\n\t  function addToFormCache(field, key) {\n\t    var service = this;\n\t    key = key || service.getKey(field.key);\n\t    if (!service.getFromFormCache(key)) service.formCache[key] = field;\n\t  }\n\t\n\t  function getFromFormCache(key) {\n\t    var service = this;\n\t    return service.formCache[key];\n\t  }\n\t\n\t  function addToDataCache(key, modelValue) {\n\t    var service = this;\n\t\n\t    if (key) {\n\t      service.dataCache[key] = modelValue;\n\t    }\n\t  }\n\t\n\t  function getFromDataCache(key) {\n\t    var service = this;\n\t\n\t    return service.dataCache[key];\n\t  }\n\t\n\t  function matchIntStrIndex(exp) {\n\t    return exp.match(/\\[(-?\\d+|\".*\"|'.*')]/);\n\t  }\n\t\n\t  function matchNestedExpression(exp) {\n\t    var _ref5 = matchIntStrIndex(exp) || [],\n\t        _ref6 = _slicedToArray(_ref5, 1),\n\t        toReplace = _ref6[0];\n\t\n\t    var replaced = [];\n\t\n\t    while (toReplace) {\n\t      replaced.push(toReplace);\n\t      exp = exp.replace(toReplace, 'ff_r' + (replaced.length - 1) + '_ff');\n\t\n\t      var _ref7 = matchIntStrIndex(exp) || [];\n\t\n\t      var _ref8 = _slicedToArray(_ref7, 1);\n\t\n\t      toReplace = _ref8[0];\n\t    }\n\t\n\t    var match = exp.match(/\\[([^[\\]]+)]([^[\\]]*)/);\n\t\n\t    return match && replaced.length ? match.map(function (exp) {\n\t      var _ref9 = exp.match(/ff_r(\\d+)_ff/) || [],\n\t          _ref10 = _slicedToArray(_ref9, 2),\n\t          toReplace = _ref10[0],\n\t          index = _ref10[1];\n\t\n\t      while (toReplace) {\n\t        exp = exp.replace(toReplace, replaced[index]);\n\t\n\t        var _ref11 = exp.match(/ff_r(\\d+)_ff/) || [];\n\t\n\t        var _ref12 = _slicedToArray(_ref11, 2);\n\t\n\t        toReplace = _ref12[0];\n\t        index = _ref12[1];\n\t      }\n\t      return exp;\n\t    }) : match;\n\t  }\n\t\n\t  function resolveNestedExpressions(exp, depth) {\n\t    var service = this;\n\t\n\t    var _ref13 = matchNestedExpression(exp) || [],\n\t        _ref14 = _slicedToArray(_ref13, 2),\n\t        nested = _ref14[1];\n\t\n\t    while (nested) {\n\t      var parsed = service.parseExpression(nested, depth).get();\n\t      var keyVal = _.isUndefined(parsed) ? '' : _.isString(parsed) ? '\"' + parsed + '\"' : parsed;\n\t      exp = exp.replace('[' + nested + ']', '[' + keyVal + ']');\n\t\n\t      var _ref15 = matchNestedExpression(exp) || [];\n\t\n\t      var _ref16 = _slicedToArray(_ref15, 2);\n\t\n\t      nested = _ref16[1];\n\t    }\n\t\n\t    return exp;\n\t  }\n\t\n\t  function parseExpression(exp, depth) {\n\t    var service = this;\n\t\n\t    if (!_.isString(exp) && !_.isArray(exp)) {\n\t      return { get: function get() {\n\t          return exp;\n\t        } };\n\t    }\n\t\n\t    // if expression is specific value\n\t    if (/^(null|false|true|undefined|'[^\\']*'|\"[^\\\"]*\"|-?[0-9.]+|\\[]|\\{})$/.test(exp)) {\n\t      return {\n\t        \"get\": function get() {\n\t          if (!exp) return exp;\n\t          var isStr = exp.match(/\"([^\\\"]*)\"/) || exp.match(/'([^\\']*)'/);\n\t          if (isStr) return isStr[1];\n\t          switch (exp) {\n\t            case 'null':\n\t              return null;\n\t            case 'false':\n\t              return false;\n\t            case 'true':\n\t              return true;\n\t            case 'undefined':\n\t              return;\n\t            case '[]':\n\t              return [];\n\t            case '{}':\n\t              return {};\n\t            default:\n\t              return parseFloat(exp);\n\t          }\n\t        }\n\t      };\n\t    }\n\t\n\t    exp = service.getKey(exp);\n\t\n\t    var match = exp.match(/^(model\\.)?(\\S+)$/);\n\t\n\t    var modelValue = {\n\t      get: function get() {\n\t        var resolved = service.resolveNestedExpressions(exp, depth);\n\t        var path = ObjectPath.parse(resolved);\n\t        var start = depth || service;\n\t\n\t        while (start && path.length > 1) {\n\t          start = start[path.shift()];\n\t        }\n\t\n\t        return start && start[path[0]];\n\t      },\n\t      getAssignable: function getAssignable() {\n\t        var _ref17 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n\t            noConstruction = _ref17.noConstruction;\n\t\n\t        var resolved = service.resolveNestedExpressions(exp, depth);\n\t        var path = ObjectPath.parse(resolved);\n\t        var progress = [];\n\t        var start = depth || service;\n\t\n\t        while (start && path.length > 1) {\n\t          var key = path.shift();\n\t          progress.push(key);\n\t          if (!start[key]) {\n\t            if (noConstruction) {\n\t              return null;\n\t            }\n\t            if (/^\\d?$/.test(path[0])) {\n\t              start[key] = [];\n\t            } else {\n\t              start[key] = {};\n\t            }\n\t          }\n\t          start = start[key];\n\t        }\n\t\n\t        return {\n\t          obj: start,\n\t          key: path[0],\n\t          path: service.getKey(progress),\n\t          fullPath: service.getKey(progress.concat(path.slice(0, 1)))\n\t        };\n\t      },\n\t      set: function set(val) {\n\t        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t        var resolved = service.resolveNestedExpressions(exp, depth);\n\t        var path = ObjectPath.parse(resolved);\n\t        if (val === 'remove') {\n\t          var _ref18 = this.getAssignable({ noConstruction: true }) || {},\n\t              obj = _ref18.obj,\n\t              key = _ref18.key;\n\t\n\t          delete service.defaults[resolved.replace('model.', '')];\n\t          if (obj) {\n\t            delete obj[key];\n\t          }\n\t        } else {\n\t          var _getAssignable = this.getAssignable(),\n\t              _obj = _getAssignable.obj,\n\t              _key3 = _getAssignable.key;\n\t\n\t          _obj[_key3] = val;\n\t        }\n\t        if (options.silent) {\n\t          service.silenceListeners(resolved, depth);\n\t          service.skipDefaults(resolved);\n\t        }\n\t        return val;\n\t      },\n\t      path: function path() {\n\t        return {\n\t          exp: exp,\n\t          depth: depth,\n\t          key: match[2]\n\t        };\n\t      }\n\t    };\n\t\n\t    return modelValue;\n\t  }\n\t\n\t  function silenceListeners(keyStart, depth) {\n\t    var service = this;\n\t    _.each(service.listeners, function (listener, key) {\n\t      if (key.indexOf(keyStart) === 0) {\n\t        listener.prev = angular.copy(service.parseExpression(key, depth).get());\n\t      }\n\t    });\n\t  }\n\t\n\t  function skipDefaults(keyStart) {\n\t    var service = this;\n\t    var index = keyStart.match(/\\[\\d*\\]/) ? getArrayIndex(keyStart) : null;\n\t    var ks = stripIndexes(keyStart);\n\t    var keys = _.filter(_.keys(service.formCache), function (k) {\n\t      return k.startsWith(ks);\n\t    });\n\t    var skipKeys = [];\n\t    _.each(keys, function (key) {\n\t      var indexedKey = service.setArrayIndex(key, index);\n\t      var model = service.parseExpression(indexedKey, service.model).get();\n\t      if (_.isArray(model)) {\n\t        var childKeys = _.filter(_.keys(service.formCache), function (k) {\n\t          return k.startsWith(key);\n\t        });\n\t\n\t        var _loop = function _loop(i) {\n\t          _.each(childKeys, function (k) {\n\t            skipKeys.push(k);\n\t            var indexedChildKey = service.setArrayIndex(k, [index, i]);\n\t            service.skipDefault[indexedChildKey] = true;\n\t          });\n\t        };\n\t\n\t        for (var i = 0; i < model.length; i++) {\n\t          _loop(i);\n\t        }\n\t      } else if (!skipKeys.includes(key)) {\n\t        service.skipDefault[indexedKey] = true;\n\t      }\n\t    });\n\t  }\n\t\n\t  function processArray(array) {\n\t    var service = this;\n\t    var key = service.getKey(array.key);\n\t\n\t    array.sortOptions = {\n\t      update: function update(e, ui) {\n\t        var listener = service.arrayListeners[key + '.length'];\n\t        listener.handlers.forEach(function (handler) {\n\t          handler(listener.prev, listener.prev, true);\n\t        });\n\t      }\n\t    };\n\t\n\t    service.processSection(array);\n\t  }\n\t\n\t  function processSection(section, secondPass) {\n\t    var service = this;\n\t    // if we're here because a parent's scope was emitted,\n\t    // scope for this section will soon be emitted, so can skip\n\t    if (secondPass) return;\n\t    _.each(section.items, service.processField.bind(service));\n\t  }\n\t\n\t  function processComponent(component) {\n\t    var service = this;\n\t\n\t    component.type = 'section';\n\t    component.htmlClass = 'row';\n\t\n\t    var cols = 12 / _.reject(component.items, 'hidden').length;\n\t\n\t    _.each(component.items, function (field, i) {\n\t      service.processField(field);\n\t      component.items[i] = {\n\t        type: 'section',\n\t        htmlClass: 'col-sm-' + cols,\n\t        items: [field]\n\t      };\n\t    });\n\t  }\n\t\n\t  function processCurrency(field) {\n\t    field.currencyFormat = {\n\t      'currency-dollars': 'dollars',\n\t      'currency-microcents': 'microcents',\n\t      'currency': 'cents'\n\t    }[field.schema.format];\n\t\n\t    field.type = 'cn-currency';\n\t  }\n\t\n\t  function processPercentage(field) {\n\t    field.type = 'cn-percentage';\n\t  }\n\t\n\t  function processUrl(field) {\n\t    field.type = 'cn-url';\n\t  }\n\t\n\t  function processReusable(field) {\n\t    var service = this;\n\t    field.type = 'cn-reusable';\n\t    field.view = field.view || 'new';\n\t    field.items.forEach(service.processField.bind(service));\n\t    field.items = [{\n\t      type: 'section',\n\t      items: field.items,\n\t      condition: '!model.' + service.getKey(field.key) + '.id'\n\t    }];\n\t  }\n\t\n\t  function processFacebookVideo(field) {\n\t    var service = this;\n\t    field.type = 'cn-facebookvideo';\n\t    if (!field.resolve) {\n\t      field.resolve = {};\n\t      _.each(field.data, function (exp, prop) {\n\t        return field.resolve['data.' + prop] = exp;\n\t      });\n\t    }\n\t    service.processResolve(field);\n\t  }\n\t\n\t  function processCreativeImage(field) {\n\t    var service = this;\n\t    field.type = 'cn-creativeimage';\n\t    if (!field.resolve) {\n\t      field.resolve = {};\n\t      _.each(field.data, function (exp, prop) {\n\t        return field.resolve['data.' + prop] = exp;\n\t      });\n\t    }\n\t    service.processResolve(field);\n\t  }\n\t\n\t  function processMediaUpload(field) {\n\t    var service = this;\n\t    field.type = 'cn-mediaupload';\n\t    if (!field.resolve) {\n\t      field.resolve = {};\n\t      _.each(field.data, function (exp, prop) {\n\t        return field.resolve['data.' + prop] = exp;\n\t      });\n\t    }\n\t    service.processResolve(field);\n\t  }\n\t\n\t  function processCsvUpload(field) {\n\t    var service = this;\n\t    field.type = 'cn-csvupload';\n\t  }\n\t\n\t  function processRadios(field) {\n\t    field.type = 'cn-radios';\n\t  }\n\t\n\t  function processRadiobuttons(radios) {\n\t    var service = this;\n\t    radios.type = 'cn-radiobuttons';\n\t    if (radios.fullWidth) {\n\t      radios.btnClass = 'col-sm-' + _.divide(12, radios.titleMap.length);\n\t    }\n\t  }\n\t\n\t  function processDate(date) {\n\t    var service = this;\n\t    date.type = 'cn-datetimepicker';\n\t\n\t    if (date.schema.format === 'time-minutes') {\n\t      date.maxView = 'hour';\n\t      date.iconClass = 'fa fa-clock-o';\n\t\n\t      date.modelFormatter = function (val) {\n\t        if (!val) return;\n\t\n\t        var m = moment(val);\n\t\n\t        return _.add(_.multiply(m.hours(), 60), m.minutes());\n\t      };\n\t\n\t      date.modelParser = function (val) {\n\t        if (!val) return;\n\t\n\t        var d = parseInt(val);\n\t        var hours = _.floor(d / 60);\n\t        var minutes = d % 60;\n\t\n\t        return moment().startOf('day').add('hours', hours).add('minutes', minutes);\n\t      };\n\t\n\t      date.viewFormatter = function (val) {\n\t        if (!val) return;\n\t\n\t        return date.modelParser(val).format(date.dateFormat);\n\t      };\n\t\n\t      date.viewParser = function (val) {\n\t        if (!val) return;\n\t\n\t        var match = val.match(/^(\\d{1,2}):?(\\d{1,2})? (a|p)/);\n\t        if (!match) return;\n\t\n\t        var hours = _.add(match[1] === '12' ? 0 : match[1], match[3] === 'a' ? 0 : 12);\n\t        var minutes = match[2] || '00';\n\t\n\t        if (minutes.length === 1) minutes += '0';\n\t\n\t        return _.add(_.multiply(hours, 60), minutes);\n\t      };\n\t    }\n\t  }\n\t\n\t  function getSelectValProp(select) {\n\t    var isArray = select.getSchemaType() === 'array';\n\t    return select.valueProperty || (isArray ? select.schema.items.type : select.schema.type) !== 'object' && 'value';\n\t  }\n\t\n\t  function getAllowedSelectValue(select, val, titleMap) {\n\t    titleMap = titleMap || select.getTitleMap();\n\t    var valProp = getSelectValProp(select);\n\t    var omitHashKey = valProp ? _.identity : _.partialRight(_.omit, \"$$hashKey\");\n\t    var findFn = valProp ? _.compose(_.partial(_.find, titleMap), _.partial(_.set, {}, valProp), omitHashKey) : _.compose(_.partial(_.find, titleMap), omitHashKey);\n\t    if (select.getSchemaType() === 'array') {\n\t      if (!val || !_.isArray(val)) return;\n\t      return val.map(findFn).filter(function (x) {\n\t        return x !== undefined;\n\t      });\n\t    } else {\n\t      return findFn(val);\n\t    }\n\t  }\n\t\n\t  function processSchedule(field) {\n\t    field.startEmpty = true;\n\t    field.type = 'cn-schedule';\n\t  }\n\t\n\t  function processSelect(select) {\n\t    var service = this;\n\t    var schema = select.schema;\n\t\n\t    if (select.titleMapResolve || select.titleMap) {\n\t      select.getTitleMap = function () {\n\t        return select.titleMap || service.schema.data[select.titleMapResolve];\n\t      };\n\t\n\t      select.onInit = function (val, form, event, setter) {\n\t        // make sure we use correct value\n\t        var modelValue = service.parseExpression(form.key, service.model);\n\t        if (event === 'tag-init') {\n\t          var newVal = getAllowedSelectValue(select, modelValue.get());\n\t          if (newVal !== undefined) setter(newVal);\n\t        }\n\t      };\n\t    }\n\t\n\t    if (select.titleMapQuery) {\n\t      var queryParams = select.titleMapQuery.params;\n\t      var paramsKeys = _.keys(queryParams);\n\t      select.showClearAll = true;\n\t      select.showClearCache = !!select.titleMapQuery.params.refreshData;\n\t      select.singleQuery = select.minLookup === 0;\n\t      select.titleQuery = function (q, _ref19) {\n\t        var refreshData = _ref19.refreshData;\n\t\n\t        var params = _(paramsKeys).reduce(function (acc, key) {\n\t          if (key === 'q') {\n\t            acc[queryParams[key]] = q;\n\t          } else if (key === 'refreshData') {\n\t            if (refreshData) acc[queryParams[key]] = true;\n\t          } else {\n\t            var exp = service.replaceArrayIndex(queryParams[key], select.arrayIndex);\n\t            var val = service.parseExpression(exp).get();\n\t            acc[key] = val;\n\t          }\n\t          return acc;\n\t        }, {});\n\t        return Api.get({\n\t          url: select.titleMapQuery.url,\n\t          params: params\n\t        });\n\t      };\n\t\n\t      if (!_.isNumber(select.minLookup)) select.minLookup = paramsKeys.length ? 3 : 0;\n\t      if (!_.has(select, 'skipFiltering')) select.skipFiltering = !!select.minLookup;\n\t\n\t      select.onInit = function (val, form, event, setter) {\n\t        if (event === 'tag-init') {\n\t          setter(val);\n\t        }\n\t      };\n\t    }\n\t\n\t    if (!_.isNumber(select.minLookup)) select.minLookup = 0;\n\t\n\t    if (schema.items) {\n\t      var defaults = [];\n\t      _.each(schema.items.properties, function (schema, key) {\n\t        if (angular.isDefined(schema.default)) {\n\t          defaults.push({\n\t            \"key\": key,\n\t            default: schema.default\n\t          });\n\t        }\n\t      });\n\t      if (defaults.length) {\n\t        select.onAdd = function (val, form, event) {\n\t          if (val.value && event === 'tag-added') {\n\t            _.each(defaults, function (prop) {\n\t              if (!val.value[prop.key]) val.value[prop.key] = prop.default;\n\t            });\n\t          }\n\t        };\n\t      }\n\t    }\n\t\n\t    if (select.displayFormat) {\n\t      select.itemFormatter = service.processTemplate(select.displayFormat);\n\t    }\n\t\n\t    if (!select.type.includes('cn-autocomplete')) {\n\t      if (select.items) {\n\t        select.detailedList = true;\n\t\n\t        if (select.items[0].type !== 'component') {\n\t          if (select.items.length > 1) {\n\t            _.each(select.items, function (i) {\n\t              return i.destroyStrategy = \"retain\";\n\t            });\n\t            select.items = [{\n\t              type: \"component\",\n\t              items: select.items\n\t            }];\n\t          }\n\t\n\t          service.processFieldset(select);\n\t        }\n\t\n\t        select.type = 'cn-autocomplete-detailed';\n\t        select.destroyStrategy = 'retain';\n\t      } else {\n\t        if (!select.selectionStyle) {\n\t          select.selectionStyle = select.key === 'tags' ? 'tags' : select.getSchemaType() === 'array' && select.schema.maxItems !== 1 ? 'list' : 'select';\n\t        }\n\t        select.type = 'cn-autocomplete';\n\t      }\n\t\n\t      if (select.titleMapResolve) {\n\t        service.scope.$on('cnFlexFormDiff:data', function (e, data) {\n\t          if (data[select.titleMapResolve]) {\n\t            var modelValue = service.parseExpression(select.key, service.model);\n\t            var val = modelValue.get();\n\t            if (val !== undefined) {\n\t              var valid = getAllowedSelectValue(select, val, data[select.titleMapResolve]);\n\t              if (valid === undefined || _.isArray(valid) && _.isEmpty(valid)) modelValue.set();\n\t            }\n\t          }\n\t        });\n\t      }\n\t\n\t      service.registerHandler(select.key, function (val) {\n\t        var form = service.formCtrl && service.formCtrl[service.getKey(select.key)];\n\t        if (form && form.$setDirty) form.$setDirty();\n\t      }, select.updateSchema);\n\t    }\n\t  }\n\t\n\t  function processToggle(toggle) {\n\t    toggle.type = 'cn-toggle';\n\t  }\n\t\n\t  function processHelp(help) {\n\t    help.htmlClass = 'help-block';\n\t  }\n\t\n\t  function processDisplay(display) {\n\t    var service = this;\n\t    display.type = 'cn-display';\n\t    display.getDisplay = service.processTemplate(display.displayFormat, true);\n\t  }\n\t\n\t  function processTemplate(tpl, parseScope) {\n\t    var service = this;\n\t    //var processor = /<(\\S+)[^>]*>.*<\\/\\1>/.test(tpl) ? $compile : $interpolate;\n\t    var processor = $interpolate;\n\t    return function (scope, arrayIndex) {\n\t      if (parseScope) {\n\t        if (angular.isDefined(arrayIndex)) {\n\t          scope = _.map(scope, function (key) {\n\t            return key === 'arrayIndex' ? arrayIndex : key;\n\t          });\n\t        }\n\t        scope = service.parseExpression(scope, service.model).get();\n\t      }\n\t      return processor(tpl)(scope);\n\t    };\n\t  }\n\t\n\t  function processTable(table) {\n\t    var service = this;\n\t    table.type = 'cn-table';\n\t    table.items.forEach(function (row) {\n\t      for (var i = 0; i < table.columns.length; i++) {\n\t        _.extend(row.items[i], table.columns[i]);\n\t        //if(row.columns[i].key) row.columns[i].key = ObjectPath.parse(row.columns[i].key);\n\t        service.processField(row.items[i]);\n\t      }\n\t    });\n\t  }\n\t\n\t  function processSelectDisplay(selectDisplay) {\n\t    var service = this;\n\t    var schema = service.getSchema(selectDisplay.key);\n\t    var selectField = _.find(selectDisplay.items, 'selectField');\n\t\n\t    return schema && schema.type === 'array' ? service.setupArraySelectDisplay(selectDisplay, selectField) : service.setupSelectDisplay(selectDisplay, selectField);\n\t  }\n\t\n\t  function setupArraySelectDisplay(selectDisplay, selectField) {\n\t    var service = this;\n\t    // band-aid because this is being set as an object instead of array somwhere\n\t    // deep in the angular or angular-schema-form nether-regions\n\t    var linkModel = service.parseExpression(selectDisplay.link, service.model);\n\t    if (!linkModel.get()) linkModel.set([]);\n\t\n\t    _.each(selectDisplay.items, function (item) {\n\t      if (item.selectField === true) return;\n\t\n\t      var key = _.isArray(item.key) ? item.key : ObjectPath.parse(item.key);\n\t      var featureKey = _.last(key);\n\t\n\t      item.showFeature = function (index) {\n\t        var features = service.parseExpression('model.' + selectDisplay.link + '[' + index + '].features').get();\n\t        var show = features && features.includes(featureKey);\n\t        return show;\n\t      };\n\t\n\t      var condition = 'form.showFeature(arrayIndex)';\n\t      item.condition = item.condition ? '(' + item.condition + ') && ' + condition : condition;\n\t    });\n\t    // handle legacy objects that don't have values set in the selectField\n\t    var model = service.parseExpression(service.getKey(selectDisplay.key), service.model).get();\n\t    _.each(selectDisplay.items, function (item) {\n\t      var key = service.getKey(item.key);\n\t      var selectKey = service.getKey(selectField.key);\n\t      if (key === selectKey) return;\n\t      _.each(model, function (elem, i) {\n\t        var indexedKey = service.setArrayIndex(key, i);\n\t        var splitIndexedKey = ObjectPath.parse(indexedKey);\n\t        var indexedSelectKey = service.setArrayIndex(selectKey, i);\n\t        var selectModel = service.parseExpression(indexedSelectKey, service.model);\n\t        var selectValue = selectModel.get();\n\t        var itemValue = service.parseExpression(indexedKey, service.model).get();\n\t        if (itemValue && !_.includes(selectValue, splitIndexedKey[splitIndexedKey.length - 1])) {\n\t          if (!selectValue) {\n\t            selectValue = [];\n\t          }\n\t          selectValue.push(splitIndexedKey[splitIndexedKey.length - 1]);\n\t          selectModel.set(selectValue);\n\t        }\n\t      });\n\t    });\n\t    // handle new objects with values set in defaults\n\t    var defaults = service.getSchema(selectDisplay.key).default;\n\t    _.each(defaults, function (elem, i) {\n\t      var selectKey = service.getKey(selectField.key);\n\t      var indexedSelectKey = service.setArrayIndex(selectKey, i);\n\t      var selectModel = service.parseExpression(indexedSelectKey, service.model);\n\t      var selectValue = selectModel.get();\n\t      _.each(elem, function (val, key) {\n\t        if (!selectValue) {\n\t          selectValue = [];\n\t        }\n\t        selectValue.push(key);\n\t        selectModel.set(selectValue);\n\t      });\n\t    });\n\t  }\n\t\n\t  function setupSelectDisplay(selectDisplay, selectField) {\n\t    var service = this;\n\t    var selectFieldKey = service.getKey(selectField.key);\n\t\n\t    _.each(selectDisplay.items, function (item) {\n\t      if (item.selectField === true) return;\n\t\n\t      var key = _.isArray(item.key) ? item.key : ObjectPath.parse(item.key);\n\t      var featureKey = _.last(key);\n\t\n\t      item.showFeature = function () {\n\t        var features = service.parseExpression('model.' + selectFieldKey).get();\n\t        var show = features && features.includes(featureKey);\n\t        return show;\n\t      };\n\t\n\t      var condition = 'form.showFeature()';\n\t      item.condition = item.condition ? '(' + item.condition + ') && ' + condition : condition;\n\t    });\n\t    // handle legacy objects that don't have values set in the selectField\n\t    var selectKey = service.getKey(selectField.key);\n\t    var selectModel = service.parseExpression(selectKey, service.model);\n\t    var selectValue = selectModel.get();\n\t    _.each(selectDisplay.items, function (item) {\n\t      var key = service.getKey(item.key);\n\t      if (selectKey === key) return;\n\t      var splitKey = ObjectPath.parse(key);\n\t      var itemValue = service.parseExpression(key, service.model).get();\n\t      if (itemValue && !_.includes(selectValue, splitKey[splitKey.length - 1])) {\n\t        if (!selectValue) {\n\t          selectValue = [];\n\t        }\n\t        selectValue.push(splitKey[splitKey.length - 1]);\n\t        selectModel.set(selectValue);\n\t      }\n\t    });\n\t    // handle new objects with values set in the defaults\n\t    var defaults = service.getSchema(selectDisplay.key).default;\n\t    _.each(defaults, function (val, key) {\n\t      if (!selectValue) {\n\t        selectValue = [];\n\t      }\n\t      selectValue.push(key);\n\t      selectModel.set(selectValue);\n\t    });\n\t    // set default values here\n\t    var model = service.parseExpression(selectDisplay.key, service.model);\n\t    if (defaults && !model.get()) {\n\t      model.set(defaults);\n\t    }\n\t  }\n\t\n\t  function setupSchemaRefresh(refresh) {\n\t    var service = this;\n\t    service.refreshSchema = _.debounce(function (updateSchema) {\n\t      var params = _extends({}, cnFlexFormConfig.getStateParams(service.getParamOverrides()), service.params);\n\t      var diff = _.omit(cnUtil.diff(service.schema.params, params, true), 'updates');\n\t      var keys = void 0;\n\t\n\t      if (!_.isEmpty(diff) || updateSchema) {\n\t        if (updateSchema) params.updateSchema = updateSchema;else {\n\t          keys = _.keys(diff);\n\t\n\t          if (keys.length > 1) {\n\t            diff = _.omit(diff, _.isNull);\n\t            keys = _.keys(diff);\n\t          }\n\t\n\t          params.updateSchema = _.first(keys);\n\t        }\n\t\n\t        if (!params.updateSchema) {\n\t          diff = cnUtil.diff(params, _.omit(service.schema.params, ['updateSchema', 'updates']));\n\t          keys = _.keys(diff);\n\t\n\t          params.updateSchema = _.first(keys);\n\t        }\n\t\n\t        refresh(params).then(function (schema) {\n\t          service.incrementUpdates();\n\t          //service.updateSchema(schema);\n\t          service.processUpdatedSchema(schema);\n\t        });\n\t      }\n\t    }, 100);\n\t\n\t    service.refreshData = _.debounce(function () {\n\t      refresh(_.extend(service.schema.params, { updateSchema: 'refreshData' })).then(function (schema) {\n\t        service.processUpdatedSchema(schema);\n\t      });\n\t    }, 100);\n\t\n\t    service.events.push(service.scope.$on('ffRefreshData', service.refreshData));\n\t  }\n\t\n\t  function processUpdatedSchema(schema) {\n\t    var service = this;\n\t    if (schema.diff) {\n\t      service.schema.params = schema.params;\n\t      if (cnFlexFormConfig.onProcessDiff) {\n\t        cnFlexFormConfig.onProcessDiff(schema);\n\t      }\n\t\n\t      if (schema.diff.data) {\n\t        service.scope.$broadcast('cnFlexFormDiff:data', schema.diff.data);\n\t        _.each(schema.diff.data, function (data, prop) {\n\t          if (data && data.data && !_.isEmpty(service.schema.data[prop].data) && !data.reset) {\n\t            data.data = service.schema.data[prop].data.concat(data.data);\n\t          }\n\t          service.schema.data[prop] = data;\n\t          if (service.resolveRegister[prop]) {\n\t            _.each(service.resolveRegister[prop], function (registers) {\n\t              registers.forEach(function (register) {\n\t                service.handleResolve(register.field, register.prop, register.exp);\n\t              });\n\t            });\n\t          }\n\t        });\n\t      }\n\t\n\t      var keys = [];\n\t\n\t      if (schema.diff.schema) {\n\t        service.scope.$broadcast('cnFlexFormDiff:schema', schema.diff.schema);\n\t        _.each(schema.diff.schema, function (schema, key) {\n\t          reprocessSchema(schema, key, keys);\n\t          var curKeys = _.filter(keys, function (k) {\n\t            return _.startsWith(k, key);\n\t          });\n\t          _.each(curKeys, function (key) {\n\t            var forms = _.compact([service.getFromFormCache(key)].concat(_toConsumableArray(service.getArrayCopies(key) || [])));\n\t            _.each(forms, function (form) {\n\t              var prevSchema = form.schema;\n\t              var newSchema = service.getSchema(key, _defineProperty({}, schema.key, schema));\n\t              if (prevSchema.readonly && !newSchema.readonly) form.readonly = false;\n\t            });\n\t          });\n\t          service.schema.schema.properties[key] = schema;\n\t        });\n\t      }\n\t\n\t      if (schema.diff.form) {\n\t        service.scope.$broadcast('cnFlexFormDiff:form', schema.diff.form);\n\t        _.each(schema.diff.form, function (form, key) {\n\t\n\t          if (!keys.includes(key)) {\n\t            keys.push(key);\n\t          }\n\t\n\t          // don't want to override key when extending cached objects\n\t          //var key = form.key;\n\t          //delete form.key;\n\t\n\t          _.each(service.getFormsToProcess(key), function (copy) {\n\t            return copy && service.reprocessField(copy, form);\n\t          });\n\t        });\n\t      }\n\t\n\t      if (keys.length) {\n\t        _.each(keys, function (key) {\n\t          _.each(service.getFormsToProcess(key), function (copy) {\n\t            return copy && service.processField(copy);\n\t          });\n\t        });\n\t      }\n\t\n\t      service.broadcastErrors();\n\t    } else {\n\t      service.updateSchema(schema);\n\t    }\n\t  }\n\t\n\t  function getFormsToProcess(key) {\n\t    var service = this;\n\t\n\t    var _ref20 = key.match(/\\[(\\d)+]/) || [],\n\t        _ref21 = _slicedToArray(_ref20, 2),\n\t        arrayIndex = _ref21[1];\n\t\n\t    var copies = service.getArrayCopies(key.replace(/\\[\\d+]/g, '[]'));\n\t    if (_.isUndefined(arrayIndex)) {\n\t      var cached = service.getFromFormCache(key);\n\t      return [cached].concat(_toConsumableArray(copies));\n\t    }\n\t    return [copies[arrayIndex]];\n\t  }\n\t\n\t  function reprocessField(current, update, isChild) {\n\t    var service = this;\n\t    var key = service.getKey(current.key);\n\t\n\t    // other logic in the service will add conition = 'true' to force\n\t    // condition to eval true, so we set the update condition to 'true'\n\t    // before comparing\n\t    if (!update.condition && current.condition) update.condition = 'true';\n\t    var redraw = !isChild && current.condition !== update.condition;\n\t\n\t    _.extend(current, _.omit(update, 'items', 'key'));\n\t\n\t    current._ogKeys.forEach(function (prop) {\n\t      if (!update[prop]) {\n\t        delete current[prop];\n\t      }\n\t    });\n\t    current._ogKeys = getOgKeys(update);\n\t\n\t    //service.deregisterHandlers(key);\n\t\n\t    service.scope.$broadcast('cnFlexFormReprocessField', key);\n\t\n\t    // why do we redraw? If we're doing it to show error message\n\t    // that has been addressed from the angular-schema-form library\n\t    // if there's another issue, try triggering the specific action required\n\t    // instead of redrawing the whole form\n\t    if (redraw && current.redraw) {\n\t      console.log('TODO: see if this can be removed');\n\t      current.redraw();\n\t    }\n\t  }\n\t\n\t  function reprocessSchema(schema, key, keys) {\n\t    keys.push(key);\n\t    if (schema.properties) {\n\t      _.each(schema.properties, function (schema, subKey) {\n\t        reprocessSchema(schema, key + '.' + subKey, keys);\n\t      });\n\t    }\n\t    if (schema.items && schema.items.properties) {\n\t      _.each(schema.properties, function (schema, subKey) {\n\t        reprocessSchema(schema, key + '[].' + subKey, keys);\n\t      });\n\t    }\n\t  }\n\t\n\t  function getDotKey(key) {\n\t    return (_.isString(key) ? ObjectPath.parse(key) : key).join('.');\n\t  }\n\t\n\t  function buildError(field) {\n\t    return {\n\t      key: getDotKey(field.key),\n\t      message: field.error\n\t    };\n\t  }\n\t\n\t  function broadcastErrors() {\n\t    var service = this;\n\t    $timeout(function () {\n\t      if (_.get(service, 'errors')) {\n\t        service.errors.forEach(function (error) {\n\t          service.scope.$broadcast('schemaForm.error.' + error.key, 'serverValidation', error.message);\n\t        });\n\t      }\n\t    }, 1);\n\t  }\n\t\n\t  function replaceArrayIndex(resolve, key) {\n\t    while (resolve.includes('arrayIndex')) {\n\t      if (_.isNumber(key)) return resolve.replace(/arrayIndex/g, key);\n\t      var arrayIndexKey = /([^.[]*)\\[arrayIndex\\]/.exec(resolve);\n\t      var re = new RegExp(arrayIndexKey[1] + '\\\\[(-?\\\\d+)\\\\]');\n\t      var index = re.exec(key);\n\t      if (!index) return resolve;\n\t      resolve = resolve.replace(new RegExp(arrayIndexKey[0].replace(/(\\[|\\])/g, '\\\\$1'), 'g'), index[0]);\n\t    }\n\t    return resolve;\n\t  }\n\t\n\t  function getArrayIndex(key) {\n\t    if (_.isObject(key)) {\n\t      return _.find(key.key, function (key) {\n\t        return _.isNumber(key);\n\t      });\n\t    }\n\t    return (/\\[(\\d*)\\]/.exec(key)[1]\n\t    );\n\t  }\n\t\n\t  function setArrayIndex(key, index, asArray) {\n\t    var service = this;\n\t    var keyCopy = void 0;\n\t    if (!_.isArray(index)) {\n\t      index = [index];\n\t    }\n\t    if (_.isString(key)) {\n\t      keyCopy = ObjectPath.parse(key);\n\t    } else {\n\t      keyCopy = _.clone(key);\n\t    }\n\t    while (index.length && keyCopy.indexOf('') > -1) {\n\t      var indexOfIndex = keyCopy.indexOf('');\n\t      keyCopy[indexOfIndex] = index.shift();\n\t    }\n\t    if (asArray) {\n\t      return keyCopy;\n\t    } else {\n\t      return service.getKey(keyCopy);\n\t    }\n\t  }\n\t\n\t  function cleanup() {\n\t    var service = this;\n\t    _.each(service.events, function (listener) {\n\t      listener();\n\t    });\n\t  }\n\t\n\t  function incrementUpdates() {\n\t    var service = this;\n\t    ++service.updates;\n\t    service.params.updates = service.updates;\n\t  }\n\t}\n\t\n\t//angular\n\t//.module('cn.flex-form')\n\t//.provider('cnFlexFormService', cnFlexFormServiceProvider);\n\t\n\texports.default = cnFlexFormServiceProvider;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tcnFlexFormModalLoaderService.$inject = [\"$stateParams\", \"$q\"];\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar modalMap = {};\n\tvar promiseMap = {};\n\t\n\tfunction getPromises(state) {\n\t  if (promiseMap[state]) return promiseMap[state];\n\t\n\t  var promise = {};\n\t  promiseMap[state] = promise;\n\t  return promise;\n\t}\n\t\n\tfunction getPromise(state, id, $q) {\n\t  var promises = getPromises(state);\n\t  if (promises[id]) return promises[id];\n\t\n\t  var promise = $q.defer();\n\t  promises[id] = promise;\n\t  return promise;\n\t}\n\t\n\tfunction cnFlexFormModalLoaderServiceProvider() {\n\t\n\t  parent.$inject = [\"$stateParams\", \"$q\"];\n\t  return {\n\t    addMapping: addMapping,\n\t    $get: cnFlexFormModalLoaderService\n\t  };\n\t\n\t  ////////////\n\t\n\t  function addMapping(state, def) {\n\t    def.resolve = { parent: parent };\n\t    modalMap[state] = def;\n\t  }\n\t\n\t  function parent($stateParams, $q) {\n\t    'ngInject';\n\t\n\t    return getPromise($stateParams.modal, $stateParams.modalId, $q).promise.then(function (_ref) {\n\t      var parent = _ref.parent;\n\t      return parent;\n\t    });\n\t  }\n\t}\n\t\n\tfunction cnFlexFormModalLoaderService($stateParams, $q) {\n\t  'ngInject';\n\t\n\t  return {\n\t    getMapping: getMapping,\n\t    resolveMapping: resolveMapping,\n\t    removeMapping: removeMapping\n\t  };\n\t\n\t  /////////////\n\t\n\t  function resolveMapping(state, id, parent) {\n\t    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\t    var scope = options.scope;\n\t\n\t    if (scope) {\n\t      scope.options = scope.options || {};\n\t      scope.options.destroyStrategy = 'retain';\n\t      modalMap[state].scope = scope;\n\t    }\n\t    var d = getPromise(state, id, $q);\n\t    d.resolve({ parent: parent, options: options });\n\t    return d.promise;\n\t  }\n\t\n\t  function getMapping(state) {\n\t    var d = $q.defer();\n\t    getPromise($stateParams.modal, $stateParams.modalId, $q).promise.then(function (_ref2) {\n\t      var parent = _ref2.parent,\n\t          options = _ref2.options;\n\t\n\t      d.resolve({ state: modalMap[state], options: options });\n\t      return parent;\n\t    });\n\t    return d.promise;\n\t  }\n\t\n\t  // Holding on to scope references creates memory leaks\n\t  function removeMapping(state) {\n\t    modalMap[state] = null;\n\t    promiseMap[state] = null;\n\t  }\n\t}\n\t\n\texports.default = cnFlexFormModalLoaderServiceProvider;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tFlexFormModalLoader.$inject = [\"FlexFormModal\", \"$state\", \"$rootScope\", \"$stateParams\", \"$scope\"];\n\tFlexFormModal.$inject = [\"cnFlexFormModalLoaderService\", \"$uibModal\", \"$stateParams\"];\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tfunction FlexFormModalLoader(FlexFormModal, $state, $rootScope, $stateParams, $scope) {\n\t  'ngInject';\n\t\n\t  function FFModalLoaderTag() {}\n\t  $scope.__tag = FFModalLoaderTag();\n\t\n\t  var vm = this;\n\t\n\t  activate();\n\t\n\t  //////////\n\t\n\t  function activate() {\n\t    FlexFormModal.open(vm).then(function (_ref) {\n\t      var modal = _ref.modal,\n\t          _ref$options = _ref.options,\n\t          onDismiss = _ref$options.onDismiss,\n\t          onAfterDismiss = _ref$options.onAfterDismiss;\n\t\n\t      vm.modal = modal;\n\t      vm.modal.result.finally(goBack);\n\t\n\t      if (onDismiss) vm.modal.result.catch(function () {\n\t        return onDismiss($stateParams.restParams);\n\t      });\n\t      vm.dismissEvent = $rootScope.$on('$stateChangeStart', dismissModal);\n\t    });\n\t  }\n\t\n\t  function goBack() {\n\t    if (!$state.transition) {\n\t      $state.go('^');\n\t    }\n\t  }\n\t\n\t  function dismissModal() {\n\t    // unbind event\n\t    vm.dismissEvent();\n\t    vm.modal.opened.then(function () {\n\t      return vm.modal.dismiss();\n\t    });\n\t  }\n\t}\n\t\n\tfunction FlexFormModal(cnFlexFormModalLoaderService, $uibModal, $stateParams) {\n\t  'ngInject';\n\t\n\t  return { open: open };\n\t\n\t  ////////////\n\t\n\t  function open() {\n\t    return cnFlexFormModalLoaderService.getMapping($stateParams.modal).then(function (_ref2) {\n\t      var state = _ref2.state,\n\t          options = _ref2.options;\n\t      return {\n\t        modal: $uibModal.open(state),\n\t        options: options\n\t      };\n\t    });\n\t  }\n\t}\n\t\n\texports.FlexFormModalLoader = FlexFormModalLoader;\n\texports.FlexFormModal = FlexFormModal;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {'use strict';\n\t\n\tFlexForm.$inject = [\"cnFlexFormService\", \"$scope\", \"$location\"];\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tfunction cnFlexForm() {\n\t  return {\n\t    restrict: 'E',\n\t    template: '\\n      <div ng-if=\"vm.showForm()\">\\n        <!-- we process defaults ourselves, hence setSchemaDefaults: false -->\\n        <ng-form\\n          class=\"clearfix\"\\n          name=\"{{vm.formName}}\"\\n          sf-options=\"{ setSchemaDefaults: false }\"\\n          sf-schema=\"vm.config.schema.schema\"\\n          sf-form=\"vm.form\"\\n          sf-model=\"vm.model\">\\n        </ng-form>\\n        <!-- debug panel to display model -->\\n        <section ng-if=\"vm.debug\">\\n          <json-explorer json-data=\"vm.model || \\'...model not loaded yet\\'\"/>\\n        </section>\\n      </div>\\n    ',\n\t    scope: {\n\t      config: '=ffConfig',\n\t      model: '=ffModel',\n\t      formIndex: '=ffFormIndex',\n\t      formName: '=ffFormName',\n\t      delayForm: '=ffDelayForm',\n\t      cleanupEvent: '=ffCleanupEvent'\n\t    },\n\t    controller: FlexForm,\n\t    controllerAs: 'vm',\n\t    bindToController: true\n\t  };\n\t}\n\t\n\tfunction FlexForm(cnFlexFormService, $scope, $location) {\n\t  'ngInject';\n\t\n\t  function cnFlexFormTag() {}\n\t  $scope.__tag = new cnFlexFormTag();\n\t\n\t  var vm = this;\n\t  vm.service = undefined;\n\t  vm.events = [];\n\t\n\t  vm.activate = activate;\n\t  vm.cleanup = cleanup;\n\t  vm.process = process;\n\t  vm.showForm = showForm;\n\t\n\t  vm.events.push($scope.$watch(function () {\n\t    return vm.config.schema;\n\t  }, vm.process));\n\t\n\t  vm.activate();\n\t\n\t  $scope.$on(vm.cleanupEvent || '$destroy', vm.cleanup);\n\t\n\t  //////////\n\t\n\t  function activate() {\n\t    if (angular.isNumber(vm.formIndex)) {\n\t      vm.form = vm.config.schema.forms[vm.formIndex].form;\n\t    } else {\n\t      vm.form = vm.config.schema.form;\n\t    }\n\t\n\t    // debug\n\t    if ($location.search().debug) {\n\t      vm.debug = true;\n\t    }\n\t  }\n\t\n\t  function process(cur, prev) {\n\t    if (vm.form) {\n\t      if (!vm.service) {\n\t        vm.service = cnFlexFormService(vm.config.schema, vm.model, {\n\t          getScope: vm.config.getScope || function () {\n\t            return $scope;\n\t          },\n\t          formCtrl: vm.config.formCtrl,\n\t          getSchema: vm.config.getSchema,\n\t          updateSchema: updateSchema\n\t        });\n\t      } else {\n\t        vm.service.compile(vm.config.schema, vm.model, vm.config);\n\t      }\n\t    }\n\t  }\n\t\n\t  function showForm() {\n\t    return !vm.delayForm && vm.service && vm.service.isCompiled();\n\t  }\n\t\n\t  function updateSchema(schema) {\n\t    vm.config.schema = schema;\n\t    vm.activate();\n\t  }\n\t\n\t  function cleanup() {\n\t    _.each(vm.events, function (listener) {\n\t      listener();\n\t    });\n\t\n\t    cnFlexFormService.destroyService(vm.service);\n\t  }\n\t}\n\t\n\texports.default = cnFlexForm;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\tprocess.prependListener = noop;\n\tprocess.prependOnceListener = noop;\n\t\n\tprocess.listeners = function (name) { return [] }\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tFlexFormHeader.$inject = [\"$scope\"];\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tfunction cnFlexFormHeader() {\n\t  return {\n\t    restrict: 'E',\n\t    scope: {\n\t      config: '=ffHeaderConfig',\n\t      submit: '&ffSubmit',\n\t      loadOffscreen: '&ffLoadOffscreen'\n\t    },\n\t    controller: FlexFormHeader,\n\t    bindToController: true,\n\t    controllerAs: 'vm',\n\t    template: '\\n        <div class=\"col-md-6\">\\n          <h5 ng-if=\"vm.title.lead\">{{::vm.title.lead}}</h5>\\n          <h1>\\n            <i ng-show=\"vm.title.icon\" class=\"{{vm.title.icon}}\"/>\\n            {{vm.title.main}}\\n          </h1>\\n          <h5 ng-if=\"vm.title.sub\">{{::vm.title.sub}}</h5>\\n        </div>\\n        <div class=\"{{vm.buttonContainerClass || \\'page-action-btns\\'}}\">\\n          <div class=\"btn-options\"\\n               ng-mouseover=\"vm.loadOffscreen()\">\\n            <a class=\"btn btn-{{vm.returnStyle ? vm.returnStyle : \\'default-dark\\'\"\\n               ng-if=\"vm.returnState\"\\n               ui-sref=\"{{vm.returnState}}\">\\n              {{vm.returnText || \\'Cancel\\'}}\\n            </a>\\n            <a class=\"btn btn-{{vm.closeButton.style ? vm.closeButton.style : \\'default-dark\\'}}\"\\n               ng-if=\"vm.closeButton\"\\n               ng-click=\"vm.closeButton.handler()\">\\n               Cancel\\n            </a>\\n            <span ng-repeat=\"button in vm.actions\">\\n              <span ng-class=\"{\\'btn-group\\': button.options}\">\\n                <a class=\"btn {{button.style ? \\'btn-\\'+button.style : ($index === vm.actions.length - 1 ? \\'btn-primary\\' : \\'btn-default-dark\\')}}\"\\n                   ng-disabled=\"vm.isDisabled(button)\"\\n                   ng-click=\"vm.submit({handler: button.handler})\"\\n                   uib-tooltip=\"{{button.helptext}}\"\\n                   uib-tooltip-placement=\"bottom\"\\n                   ng-bind-html=\"button.text || \\'Save\\'\">\\n                </a>\\n                <a class=\"btn {{button.style ? \\'btn-\\'+button.style : ($index === vm.actions.length - 1 ? \\'btn-primary\\' : \\'btn-default-dark\\')}} dropdown-toggle\"\\n                        ng-disabled=\"vm.isDisabled(button)\"\\n                        ng-show=\"button.options\"\\n                        data-toggle=\"dropdown\">\\n                  <span class=\"caret\"></span>\\n                </a>\\n                <ul class=\"dropdown-menu\" ng-if=\"button.options\">\\n                  <li ng-repeat=\"option in button.options\"\\n                      ng-disabled=\"vm.isDisabled(option)\">\\n                    <a ng-click=\"vm.submit({handler: option.handler})\"\\n                       ng-bind-html=\"option.text\">\\n                    </a>\\n                  </li>\\n                </ul>\\n              </span>\\n            </span>\\n          </div>\\n          <p class=\"data-updated-at text-right\"\\n             id=\"data-updated-at\"\\n             ng-hide=\"vm.config.noData\">\\n            <a ng-click=\"vm.updateData()\">Update Data</a>\\n          </p>\\n        </div>'\n\t  };\n\t}\n\t\n\tfunction FlexFormHeader($scope) {\n\t  'ngInject';\n\t\n\t  function ffHeaderTag() {}\n\t  $scope.__tag = new ffHeaderTag();\n\t\n\t  var vm = this;\n\t\n\t  vm.updateData = updateData;\n\t  vm.isDisabled = isDisabled;\n\t\n\t  //activate();\n\t  //$scope.$on('$destroy', cleanup);\n\t  $scope.$watch('vm.config.title', initTitle, true);\n\t  $scope.$watch('vm.config.actionConfig', initActionConfig, true);\n\t\n\t  ///////////\n\t\n\t  function initTitle() {\n\t    vm.title = vm.config.title;\n\t  }\n\t\n\t  function initActionConfig() {\n\t    var _ref = vm.config.actionConfig || {};\n\t\n\t    vm.returnState = _ref.returnState;\n\t    vm.returnStyle = _ref.returnStyle;\n\t    vm.returnText = _ref.returnText;\n\t    vm.closeButton = _ref.closeButton;\n\t    vm.actions = _ref.actions;\n\t  }\n\t\n\t  function updateData() {\n\t    // $scope.$emit('ffRefreshData');\n\t    // this component will often be siblings to the flex forms one,\n\t    // so need to broadcast from shared parent...yes it's ugly\n\t    $scope.$parent.$parent.$broadcast('ffRefreshData');\n\t  }\n\t\n\t  function isDisabled(btnConfig) {\n\t    if (vm.config.isDisabled) return vm.config.isDisabled(btnConfig);\n\t    return false;\n\t  }\n\t}\n\t\n\texports.default = cnFlexFormHeader;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tfunction ffValidate() {\n\t  return {\n\t    restrict: 'A',\n\t    scope: { form: '=ffValidate' },\n\t    require: 'ngModel',\n\t    link: link\n\t  };\n\t}\n\t\n\tfunction link($scope, elem, attrs, ngModel) {\n\t  function ffValidateTag() {}\n\t  $scope.__tag = new ffValidateTag();\n\t\n\t  if ($scope.form && $scope.form.required) {\n\t    $scope.$watch(function () {\n\t      return ngModel.$viewValue;\n\t    }, function (value) {\n\t      // override schemaForm validation\n\t      ngModel.$setValidity('schemaForm', true);\n\t      ngModel.$setValidity('tv4-302', value);\n\t    });\n\t  }\n\t}\n\t\n\texports.default = ffValidate;\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// all.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7b21027debe36c2a9b6a","import cnFlexFormConfigProvider from './cn-flex-form-config.service';\nimport cnFlexFormTypesProvider from './cn-flex-form-types.service';\nimport { cnFlexFormRoutesProvider, cnFlexFormRoutes } from './cn-flex-form.routes';\nimport { schemaFormConfig, addTemplates } from './schema-form-extensions';\nimport cnFlexFormServiceProvider from './cn-flex-form.service';\nimport cnFlexFormModalLoaderServiceProvider from './cn-flex-form-modal-loader.service';\nimport { FlexFormModalLoader, FlexFormModal } from './cn-flex-form-modal-loader';\nimport cnFlexForm from './cn-flex-form.directive';\nimport cnFlexFormHeader from './cn-flex-form-header.directive';\nimport ffValidate from './cn-flex-form-validate.directive';\n\nexport default angular\n  .module('cn.flex-form', [\n    'ui.router',\n    'schemaForm',\n    'ui.bootstrap.datetimepicker',\n    'cnTagsInput',\n    'cn.util'\n  ])\n  .provider('cnFlexFormConfig', cnFlexFormConfigProvider)\n  .provider('cnFlexFormTypes', cnFlexFormTypesProvider)\n  .provider('cnFlexFormRoutes', cnFlexFormRoutesProvider)\n  .config(cnFlexFormRoutes)\n  .config(schemaFormConfig)\n  .run(addTemplates)\n  .provider('cnFlexFormService', cnFlexFormServiceProvider)\n  .provider('cnFlexFormModalLoaderService', cnFlexFormModalLoaderServiceProvider)\n  .factory('FlexFormModal', FlexFormModal)\n  .controller('FlexFormModalLoader', FlexFormModalLoader)\n  .directive('cnFlexForm', cnFlexForm)\n  .directive('cnFlexFormHeader', cnFlexFormHeader)\n  .directive('ffValidate', ffValidate)\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./src/_cn-flex-form.module.js","function cnFlexFormConfigProvider() {\n\n  const ignoreParams = ['page', 'debug', 'sandbox', 'modal', 'modalId'];\n\n  return {\n    addIgnoreParam,\n    $get: cnFlexFormConfig\n  };\n\n  ////////\n\n  function addIgnoreParam(param) {\n    ignoreParams.push(param);\n  }\n\n  function cnFlexFormConfig($stateParams) {\n    'ngInject';\n\n    return {\n      getStateParams,\n      ignoreParams\n    };\n\n    ////////\n\n    function getStateParams(overrides = {}) {\n      return (\n        _({ ...$stateParams, ...overrides })\n        .omit(ignoreParams)\n        .omit(v => (_.isUndefined(v) || v === null))\n        .value()\n      );\n    }\n  }\n\n}\n\n//angular\n    //.module('cn.flex-form')\n    //.provider('cnFlexFormConfig', cnFlexFormConfigProvider);\n\nexport default cnFlexFormConfigProvider;\n\n\n\n// WEBPACK FOOTER //\n// ./src/cn-flex-form-config.service.js","function cnFlexFormTypesProvider() {\n\n  var fieldTypeRegister = [{\n    condition: field => field.type === 'hidden',\n    type: 'hidden'\n  }, {\n    condition: field => field.type.includes('radios'),\n    type: 'cn-radios'\n  }, {\n    condition: field => field.type.includes('radiobuttons'),\n    type: 'cn-radiobuttons'\n  }, {\n    condition: field => field.type.includes('autocomplete') || field.titleMap || field.titleMapResolve || field.titleMapQuery,\n    type: 'cn-autocomplete'\n  }, {\n    condition: field => field.type === 'cn-datetimepicker' || field.type === 'datetime-local' || field.type === 'time-minutes',\n    type: 'cn-datetimepicker'\n  }, {\n    condition: field => field.type === 'help',\n    type: 'help'\n  }, {\n    condition: field => field.type.includes('display'),\n    type: 'cn-display'\n  }, {\n    condition: field => field.schema && field.schema.format && field.schema.format.includes('currency'),\n    type: 'cn-currency'\n  }, {\n    condition: field => field.schema && field.schema.format === 'percentage',\n    type: 'cn-percentage'\n  }, {\n    condition: field => field.schema && field.type === 'url',\n    type: 'cn-url'\n  }, {\n    condition: field => field.type === 'toggle' || field.type === 'boolean',\n    type: 'cn-toggle'\n  }, {\n    condition: field => field.type === 'creativeimage',\n    type: 'cn-creativeimage'\n  }, {\n    condition: field => field.type === 'facebookvideo',\n    type: 'cn-facebookvideo'\n  }, {\n    condition: field => field.type === 'mediaupload',\n    type: 'cn-mediaupload'\n  }, {\n    condition: field => field.type === 'csvupload',\n    type: 'cn-csvupload'\n  }, {\n    condition: field => field.type === 'reusable',\n    type: 'cn-reusable'\n  }, {\n    condition: field => field.type === 'table',\n    type: 'cn-table'\n  }, {\n    condition: field => field.type === 'array',\n    type: 'array'\n  }, {\n    condition: field => field.type === 'schedule',\n    type: 'cn-schedule'\n  }];\n\n  return {\n    registerFieldType: registerFieldType,\n    $get: cnFlexFormTypes\n  };\n\n  ////////\n\n  function registerFieldType(fieldType) {\n    fieldTypeRegister.unshift(fieldType);\n  }\n\n  function cnFlexFormTypes() {\n    return {\n      fieldTypeRegister: fieldTypeRegister,\n      getFieldType: getFieldType\n    };\n\n    /////////\n\n    function getFieldType(field) {\n      for(var i = 0, l = fieldTypeRegister.length; i < l; i++) {\n        if(fieldTypeRegister[i].condition(field)) {\n          return fieldTypeRegister[i].type;\n        }\n      }\n      return field.type || field.schema && field.schema.type;\n    }\n  }\n\n}\n\nexport default cnFlexFormTypesProvider;\n\n\n\n// WEBPACK FOOTER //\n// ./src/cn-flex-form-types.service.js","function cnFlexFormRoutesProvider($stateProvider) {\n  'ngInject';\n\n  return {\n    addStates,\n    $get\n  };\n\n  ////////////\n\n  function $get() {\n    // nothing to do here, but required\n  }\n\n  function addStates({ permissions, name }) {\n    const shared = {\n      controller: 'FlexFormModalLoader',\n      controllerAs: 'vm',\n      permissions\n    };\n    $stateProvider\n        .state(`${name}.page.modal`, {\n          url: '/~:modal/:modalId',\n          ...shared\n        })\n        .state(`${name}.page.modalParams`, {\n          url: '/~:modal/:modalId/:restParams',\n          ...shared\n        });\n  }\n}\n\nfunction cnFlexFormRoutes($stateProvider) {\n  'ngInject';\n\n  $stateProvider\n      .state('flex-form-sandbox', {\n        url: '/flex-form/sandbox',\n        controller: 'FlexFormSandbox',\n        controllerAs: 'vm',\n        templateUrl: 'app/components/cn-flex-form/sandbox.html'\n      });\n}\n\nexport { cnFlexFormRoutes, cnFlexFormRoutesProvider };\n\n\n\n// WEBPACK FOOTER //\n// ./src/cn-flex-form.routes.js","function schemaFormConfig(cnFlexFormServiceProvider) {\n  'ngInject';\n\n  tv4.addFormat({\n    'url': data => _.isString(data) && !/^(https?:\\/\\/.{2}|$)/.test(data) && 'invalid url'\n  });\n\n  var extensions = [\n    'cn-fieldset',\n    'cn-toggle',\n    'cn-datetimepicker',\n    'cn-autocomplete',\n    'cn-autocomplete-detailed',\n    'cn-currency',\n    'cn-url',\n    'cn-radios',\n    'cn-radiobuttons',\n    'cn-percentage',\n    'cn-display',\n    'cn-mediaupload',\n    'cn-csvupload',\n    'cn-reusable',\n    'cn-table',\n    'cn-creativeimage',\n    'cn-schedule',\n    'cn-facebookvideo'\n  ];\n\n  _.each(extensions, function(extension) {\n    cnFlexFormServiceProvider.registerField({\n      type: extension,\n      templateUrl: `app/components/cn-flex-form/forms/${extension}.html`\n    });\n  });\n}\n\nfunction addTemplates($templateCache) {\n  'ngInject';\n\n  $templateCache.put(\n      'app/components/cn-flex-form/forms/cn-toggle.html',\n      `\n      <div class=\"form-group {{form.htmlClass}}\"\n           ng-class=\"{'has-error': hasError(), 'has-success': hasSuccess()}\">\n        <label class=\"control-label\" ng-show=\"showTitle()\">{{form.title}}</label>\n        <div class=\"clearfix\">\n          <cn-toggle-switch\n            name=\"{{form.key.join('.')}}\"\n            class=\"pull-left\"\n            ng-show=\"form.key\"\n            ng-model-options=\"form.ngModelOptions\"\n            ng-model=\"$$value$$\"\n            sf-changed=\"form\"\n            schema-validate=\"form\"\n            on-value=\"form.onValue\"\n            off-value=\"form.offValue\"\n            ng-required=\"form.required\"\n            read-only=\"form.readonly\"\n            undefined-class=\"form.undefinedClass\"/>\n          <span ng-show=\"form.onText && form.offText\">\n            {{$$value$$ === form.onValue ? form.onText : form.offText}}\n          </span>\n        </div>\n        <span class=\"help-block\" sf-message=\"form.description\"></span>\n      </div>`\n  );\n\n  $templateCache.put(\n      'app/components/cn-flex-form/forms/cn-datetimepicker.html',\n      `\n      <div class=\"form-group {{form.htmlClass}}\"\n           ng-class=\"{'has-error': hasError(), 'has-success': hasSuccess()}\">\n        <label class=\"control-label\"\n               for=\"{{form.key.join('.')}}\"\n               ng-show=\"showTitle()\">{{form.title}}</label>\n        <cn-datetimepicker\n          ng-show=\"form.key\"\n          ng-model=\"$$value$$\"\n          ng-model-options=\"form.ngModelOptions\"\n          is-disabled=\"form.readonly\"\n          sf-changed=\"form\"\n          schema-validate=\"form\"\n          input-id=\"{{form.key.join('.')}}\"\n          min-date=\"form.minDate\"\n          max-date=\"form.maxDate\"\n          max-view=\"{{form.maxView}}\"\n          cn-date-required=\"form.required\"\n          placeholder=\"{{form.placeholder}}\"\n          model-type=\"{{form.schema.type}}\"\n          model-formatter=\"form.modelFormatter\"\n          model-parser=\"form.modelParser\"\n          view-formatter=\"form.viewFormatter\"\n          view-parser=\"form.viewParser\"\n          format-string={{form.dateFormat}}\n          icon-class={{form.iconClass}}>\n        </cn-datetimepicker>\n        <span class=\"help-block\" sf-message=\"form.description\"></span>\n      </div>`\n  );\n\n  var sharedAutocompleteTpl = `\n        <tags-input\n          ng-show=\"form.key\"\n          ng-model=\"$$value$$\"\n          ng-model-options=\"form.ngModelOptions\"\n          ng-disabled=\"form.readonly\"\n          sf-changed=\"form\"\n          schema-validate=\"form\"\n          input-id=\"{{form.key.join('.')}}\"\n          display-property=\"{{form.displayProperty || 'name'}}\"\n          value-property=\"{{form.valueProperty}}\"\n          placeholder=\"{{form.placeholder || ' '}}\"\n          clear-on-blur=\"true\"\n          add-on-comma=\"false\"\n          add-from-autocomplete-only=\"{{!form.allowNew}}\"\n          on-before-tag-added=\"form.onAdd({value: $tag}, form, $event, $prev)\"\n          on-init=\"form.onInit($tag, form, $event, $setter)\"\n          model-type=\"{{form.getSchemaType()}}\"\n          array-value-type=\"{{form.schema.items.type}}\"\n          hide-tags=\"{{form.detailedList}}\"\n          tags-style=\"{{form.selectionStyle}}\"\n          required=\"{{form.required}}\"\n          min-length=\"{{form.minLength}}\"\n          allowed-tags-pattern=\".*\"\n          dropdown-icon=\"true\"\n          item-formatter=\"form.itemFormatter\"\n          min-tags=\"{{form.schema.minItems}}\"\n          max-tags=\"{{form.schema.maxItems || form.getSchemaType() !== 'array' ? 1 : 0}}\"\n          allow-bulk=\"{{form.bulkAdd}}\"\n          bulk-delimiter=\"{{form.bulkDelimiter}}\"\n          bulk-placeholder=\"{{form.bulkPlaceholder}}\"\n          show-clear-all=\"{{form.showClearAll}}\"\n          show-clear-cache=\"{{form.showClearCache}}\"\n          show-button=\"true\">\n          <auto-complete\n            source=\"form.getTitleMap && form.getTitleMap() || form.titleQuery($query, options)\"\n            skip-filtering=\"{{form.skipFiltering}}\"\n            single-query=\"{{form.singleQuery}}\"\n            min-length=\"{{form.minLookup}}\">\n          </auto-complete>\n        </tags-input>`;\n\n  $templateCache.put(\n      'app/components/cn-flex-form/forms/cn-autocomplete.html',\n      `\n      <div class=\"form-group {{form.htmlClass}}\"\n           ng-class=\"{'has-error': hasError(), 'has-success': hasSuccess()}\">\n        <label class=\"control-label\"\n               for=\"{{form.key.join('.')}}-input\"\n               ng-show=\"showTitle()\">{{form.title}}</label>\n        ${sharedAutocompleteTpl}\n        <span class=\"help-block\" sf-message=\"form.description\"></span>\n      </div>`\n  );\n\n  $templateCache.put(\n      'app/components/cn-flex-form/forms/cn-autocomplete-detailed.html',\n      `\n      <div class=\"form-group {{form.htmlClass}}\"\n           ng-class=\"{'has-error': hasError(), 'has-success': hasSuccess()}\">\n        <label class=\"control-label\"\n               for=\"{{form.key.join('.')}}-input\"\n               ng-show=\"showTitle()\">{{form.title}}</label>\n        <div sf-array=\"form\">\n          <ol class=\"list-group cn-autocomplete-list\"\n              ng-if=\"modelArray.length\"\n              ng-model=\"modelArray\">\n            <li class=\"list-group-item {{form.fieldHtmlClass}}\"\n                ng-repeat=\"item in modelArray track by $index\">\n              <button ng-hide=\"form.readonly || form.remove === null\"\n                      ng-click=\"deleteFromArray($index)\"\n                      type=\"button\" class=\"close pull-right\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n              <sf-decorator form=\"copyWithIndex($index)\"/>\n            </li>\n          </ol>\n        </div>\n        ${sharedAutocompleteTpl}\n        <span class=\"help-block\" sf-message=\"form.description\"></span>\n      </div>`\n  );\n\n  $templateCache.put(\n      'app/components/cn-flex-form/forms/cn-currency.html',\n      `\n      <div class=\"form-group {{form.htmlClass}}\"\n           ng-class=\"{'has-error': hasError(), 'has-success': hasSuccess()}\">\n        <label class=\"control-label\"\n               ng-show=\"showTitle()\"\n               for=\"{{form.key.join('.')}}\">{{form.title}}</label>\n        <div class=\"{{form.fieldClass}} input-group\">\n          <label class=\"input-group-addon\"\n                 ng-disabled=\"form.readonly\"\n                 for=\"{{form.key.join('.')}}\">$</label>\n          <input class=\"form-control\"\n                 cn-currency-format=\"{{form.currencyFormat}}\"\n                 cn-currency-placeholder=\"{{form.placeholder}}\"\n                 ng-show=\"form.key\"\n                 ng-model-options=\"form.ngModelOptions\"\n                 ng-disabled=\"form.readonly\"\n                 sf-changed=\"form\"\n                 schema-validate=\"form\"\n                 type=\"text\"\n                 step=\"any\"\n                 min=\"{{form.min}}\"\n                 max=\"{{form.max}}\"\n                 id=\"{{form.key.join('.')}}\"\n                 name=\"{{form.key.join('.')}}\"\n                 ng-model=\"$$value$$\">\n        </div>\n        <span class=\"help-block\" sf-message=\"form.description\"></span>\n      </div>`\n  );\n\n  $templateCache.put(\n      'app/components/cn-flex-form/forms/cn-url.html',\n      `\n      <div class=\"form-group {{form.htmlClass}}\"\n           ng-class=\"{'has-error': hasError(), 'has-success': hasSuccess()}\">\n        <label class=\"control-label\"\n               ng-show=\"showTitle()\"\n               for=\"{{form.key.join('.')}}\">{{form.title}}</label>\n        <input class=\"form-control\"\n               cn-url-format\n               ng-show=\"form.key\"\n               ng-model-options=\"form.ngModelOptions\"\n               ng-disabled=\"form.readonly\"\n               sf-changed=\"form\"\n               schema-validate=\"form\"\n               type=\"text\"\n               id=\"{{form.key.join('.')}}\"\n               name=\"{{form.key.join('.')}}\"\n               ng-model=\"$$value$$\">\n        <span class=\"help-block\" sf-message=\"form.description\"></span>\n      </div>`\n  );\n\n  $templateCache.put(\n      'app/components/cn-flex-form/forms/cn-radios.html',\n      `<div class=\"form-group {{form.htmlClass}}\"\n            ng-class=\"{'has-error': hasError(), 'has-success': hasSuccess()}\">\n         <label class=\"control-label\" ng-show=\"showTitle()\">{{form.title}}</label>\n         <div class=\"btn-group clearfix\">\n           <label class=\"radio radio-block\"\n                  ng-repeat=\"item in form.titleMap\">\n             <input type=\"radio\"\n                    sf-changed=\"form\"\n                    ng-disabled=\"form.readonly\"\n                    ng-model=\"$$value$$\"\n                    ng-model-options=\"form.ngModelOptions\"\n                    schema-validate=\"form\"\n                    ff-validate=\"form\"\n                    ng-value=\"item.value\"\n                    name=\"{{form.key.join('.')}}\">\n             <span class=\"radio-block-icon\" ng-if=\"item.iconClass\">\n               <i class=\"fa fa-{{item.iconClass}} fa-lg\"></i>\n             </span>\n             <span ng-bind-html=\"item.name\"></span>\n           </label>\n         </div>\n         <span class=\"help-block\" sf-message=\"form.description\"></span>\n       </div>`\n  );\n\n  $templateCache.put(\n      'app/components/cn-flex-form/forms/cn-radiobuttons.html',\n      `\n      <div class=\"form-group schema-form-radiobuttons cn-radiobuttons {{form.htmlClass}}\"\n           ng-class=\"{'has-error': hasError(), 'has-success': hasSuccess()}\">\n        <label class=\"control-label\" ng-show=\"showTitle()\">{{form.title}}</label>\n        <div class=\"btn-group clearfix\">\n          <label class=\"btn btn-{{item.value}} {{form.btnClass}} {{item.value === $$value$$ ? 'active' : ''}}\"\n                 ng-repeat=\"item in form.titleMap\">\n            <input type=\"radio\"\n                   class=\"{{form.fieldHtmlClass}} hide\"\n                   sf-changed=\"form\"\n                   ng-disabled=\"form.readonly\"\n                   ng-model=\"$$value$$\"\n                   ng-model-options=\"form.ngModelOptions\"\n                   schema-validate=\"form\"\n                   ff-validate=\"form\"\n                   ng-value=\"item.value\"\n                   name=\"{{form.key.join('.')}}\">\n            <i class=\"fa fa-{{item.value}} fa-lg\"></i>\n            <span ng-bind-html=\"item.name\"></span>\n          </label>\n        </div>\n        <span class=\"help-block\" sf-message=\"form.description\"></span>\n      </div>`\n  );\n\n  $templateCache.put(\n      'app/components/cn-flex-form/forms/cn-percentage.html',\n      `\n      <div class=\"form-group {{form.htmlClass}}\"\n           ng-class=\"{'has-error': hasError(), 'has-success': hasSuccess()}\">\n        <label class=\"control-label\"\n               ng-show=\"showTitle()\"\n               for=\"{{form.key && form.key[0]}}\">{{form.title}}</label>\n        <div class=\"{{form.fieldClass}} input-group\">\n          <input class=\"form-control\"\n                 cn-percentage-format\n                 ng-show=\"form.key\"\n                 ng-model-options=\"form.ngModelOptions\"\n                 ng-disabled=\"form.readonly\"\n                 sf-changed=\"form\"\n                 schema-validate=\"form\"\n                 type=\"number\"\n                 step=\"any\"\n                 min=\"{{form.min}}\"\n                 max=\"{{form.max}}\"\n                 id=\"{{form.key && form.key[0]}}\"\n                 name=\"{{form.key && form.key[0]}}\"\n                 ng-model=\"$$value$$\">\n           <div class=\"input-group-addon\"\n                  ng-disabled=\"form.readonly\"\n                  for=\"{{form.key && form.key[0]}}\">%</div>\n        </div>\n        <span class=\"help-block\" sf-message=\"form.description\"></span>\n      </div>`\n  );\n\n  $templateCache.put(\n      'app/components/cn-flex-form/forms/cn-display.html',\n      `\n      <div class=\"form-group cn-display{{form.htmlClass}}\">\n        <input ng-show=\"form.key\"\n               class=\"form-control\"\n               id=\"{{form.key.join('.')}}\"\n               name=\"{{form.key.join('.')}}\"\n               ng-disabled=\"true\"\n               value=\"{{form.getDisplay(form.key, form.arrayIndex)}}\">\n      </div>`\n  );\n\n  $templateCache.put(\n      'app/components/cn-flex-form/forms/cn-fieldset.html',\n      `\n      <fieldset\n        ng-disabled=\"form.readonly\"\n        class=\"schema-form-fieldset {{form.htmlClass}}\"\n        ng-class=\"{'borderless': form.pos === 0, 'notitle': form.notitle || !form.title}\">\n        <legend ng-hide=\"form.notitle\"\n                ng-click=\"form.toggleCollapse(form)\"\n                ng-class=\"{'sr-only': !showTitle(), collapsible: form.collapsible}\"\n                ng-mouseenter=\"form.render = true\">\n          <i ng-show=\"form.collapsible\"\n             class=\"fa fa-caret-{{form.collapsed ? 'right' : 'down'}}\"></i>\n          {{ form.title }}\n        </legend>\n        <div class=\"help-block\" ng-show=\"form.description\" ng-bind-html=\"form.description\"></div>\n        <div uib-collapse=\"form.collapsed\">\n          <div ng-if=\"form.render\">\n            <sf-decorator ng-repeat=\"item in form.items\" form=\"item\"/>\n          </div>\n        </div>\n      </fieldset>`\n  );\n\n  $templateCache.put(\n      'app/components/cn-flex-form/forms/cn-mediaupload.html',\n      `\n      <div class=\"form-group {{form.htmlClass}}\"\n           ng-class=\"{'has-error': hasError(), 'has-success': hasSuccess()}\">\n        <label class=\"control-label\"\n               ng-show=\"showTitle()\"\n               for=\"{{form.key && form.key[0]}}\">{{form.title}}</label>\n        <media-upload ng-model=\"$$value$$\"\n                      cn-disabled=\"form.readonly\"\n                      cn-file-type=\"form.fileType\"\n                      cn-upload-path=\"form.uploadPath\"\n                      cn-data=\"form.data\"\n                      cn-preview-path=\"form.previewPath\"\n                      cn-model-value-key=\"form.modelValueKey\"\n                      cn-existing-preview=\"form.existingPreview\"\n                      ng-model-options=\"form.ngModelOptions\"\n                      sf-changed=\"form\"\n                      schema-validate=\"form\"\n                      ff-form=\"form\"\n                      class=\"clearfix\">\n        </media-upload>\n        <span class=\"help-block\" sf-message=\"form.description\"></span>\n     </div>`\n  );\n\n  $templateCache.put(\n      'app/components/cn-flex-form/forms/cn-csvupload.html',\n      `\n      <div class=\"form-group {{form.htmlClass}}\"\n           ng-class=\"{'has-error': hasError(), 'has-success': hasSuccess()}\">\n        <label class=\"control-label\"\n               ng-show=\"showTitle()\"\n               for=\"{{form.key && form.key[0]}}\">{{form.title}}</label>\n        <csv-upload ng-model=\"$$value$$\"\n                      cn-upload-path=\"form.uploadPath\"\n                      ng-model-options=\"form.ngModelOptions\"\n                      sf-changed=\"form\"\n                      schema-validate=\"form\"\n                      ff-form=\"form\"\n                      class=\"clearfix\">\n        </csv-upload>\n        <span class=\"help-block\" sf-message=\"form.description\"></span>\n     </div>`\n  );\n\n  $templateCache.put(\n      'app/components/cn-flex-form/forms/cn-reusable.html',\n      `\n      <div class=\"form-group cn-reusable {{form.htmlClass}}\"\n           ng-class=\"{'has-error': hasError(), 'has-success': hasSuccess()}\">\n        <label class=\"control-label\"\n               ng-show=\"showTitle()\"\n               for=\"{{form.key.join('.')}}\">{{form.title}}</label>\n        <cn-select-or\n          ng-show=\"form.key\"\n          select-from=\"form.library\"\n          ng-model=\"$$value$$\"\n          ng-model-options=\"form.ngModelOptions\"\n          sf-changed=\"form\"\n          schema-validate=\"form\"\n          ff-form=\"form\"\n          directiveId=\"form.directiveId\"\n          item-template=\"form.itemTemplate\"\n          toggle-text=\"form.toggleText\"\n          ng-disabled=\"form.readonly\"\n          view=\"form.view\">\n          <sf-decorator ng-repeat=\"item in form.items\" form=\"item\"/>\n        </cn-select-or>\n        <p ng-if=\"form.loadMore && form.view === 'list'\">\n          <a ng-click=\"form.loadMore()\"\n             class=\"btn btn-default btn-block\">Load More</a>\n        </p>\n        <span class=\"help-block\" sf-message=\"form.description\"></span>\n      </div>`\n  );\n\n  $templateCache.put(\n      'app/components/cn-flex-form/forms/cn-table.html',\n      `\n      <div class=\"form-group cn-ff-table {{form.htmlClass}}\"\n           ng-class=\"{'has-error': hasError(), 'has-success': hasSuccess()}\">\n        <h6>{{form.title}}</h6>\n        <div class=\"row\">\n          <div ng-repeat=\"col in form.columns\" class=\"{{col.columnWidth}}\">\n            <p class=\"column-header\">{{col.columnHeader}}</p>\n          </div>\n        </div>\n        <div class=\"row\" ng-repeat=\"row in form.items\">\n          <div ng-repeat=\"col in row.items\" class=\"{{col.columnWidth}}\">\n            <sf-decorator form=\"col\"></sf-decorator>\n          </div>\n        </div>\n        <span class=\"help-block\" sf-message=\"form.description\"></span>\n      </div>`\n  );\n\n  $templateCache.put(\n      'app/components/cn-flex-form/forms/cn-creativeimage.html',\n      `\n      <div class=\"form-group {{form.htmlClass}}\"\n           ng-class=\"{'has-error': hasError(), 'has-success': hasSuccess()}\">\n        <label class=\"control-label\"\n               ng-show=\"showTitle()\"\n               for=\"{{form.key && form.key[0]}}\">{{form.title}}</label>\n        <cn-creative-image ng-model=\"$$value$$\"\n                      cn-disabled=\"form.readonly\"\n                      cn-upload-path=\"form.uploadPath\"\n                      cn-data=\"form.data\"\n                      cn-preview-path=\"form.previewPath\"\n                      cn-model-value-key=\"form.modelValueKey\"\n                      cn-existing-preview=\"form.existingPreview\"\n                      ng-model-options=\"form.ngModelOptions\"\n                      cn-ng-model-key=\"form.ngModelKey\"\n                      sf-changed=\"form\"\n                      schema-validate=\"form\"\n                      ff-form=\"form\"\n                      class=\"clearfix\">\n        </cn-creative-image>\n        <span class=\"help-block\" sf-message=\"form.description\"></span>\n     </div>`\n  );\n\n  $templateCache.put(\n    'app/components/cn-flex-form/forms/cn-schedule.html',\n    `\n      <div class=\"form-group {{ form.htmlClass }}\"\n           ng-class=\"{ 'has-error': hasError(), 'has-success': hasSuccess() }\">\n        <label class=\"control-label\"\n               ng-show=\"showTitle()\"\n               for=\"{{ form.key.join('.') }}\">\n          {{ form.title }}\n        </label>\n        <cn-schedule form=\"form\"\n                     ng-model=\"$$value$$\">\n        </cn-schedule>\n        <span class=\"help-block\" sf-message=\"form.description\"></span>\n      </div>\n    `\n  );\n\n  $templateCache.put(\n      'app/components/cn-flex-form/forms/cn-facebookvideo.html',\n      `\n      <div class=\"form-group {{form.htmlClass}}\"\n           ng-class=\"{'has-error': hasError(), 'has-success': hasSuccess()}\">\n        <label class=\"control-label\"\n               ng-show=\"showTitle()\"\n               for=\"{{form.key && form.key[0]}}\">{{form.title}}</label>\n        <cn-facebook-video ng-model=\"$$value$$\"\n                      cn-disabled=\"form.readonly\"\n                      cn-upload-path=\"form.uploadPath\"\n                      cn-data=\"form.data\"\n                      cn-preview-path=\"form.previewPath\"\n                      cn-model-value-key=\"form.modelValueKey\"\n                      cn-existing-preview=\"form.existingPreview\"\n                      ng-model-options=\"form.ngModelOptions\"\n                      cn-video-key=\"form.videoKey\"\n                      cn-thumbnail-key=\"form.thumbnailKey\"\n                      sf-changed=\"form\"\n                      schema-validate=\"form\"\n                      ff-form=\"form\"\n                      class=\"clearfix\">\n        </cn-facebook-video>\n        <span class=\"help-block\" sf-message=\"form.description\"></span>\n     </div>`\n  );\n}\n\nexport { schemaFormConfig, addTemplates };\n\n\n\n// WEBPACK FOOTER //\n// ./src/schema-form-extensions.js","// Need these modules for test bundle\nvar _ = typeof window !== 'undefined' && window._ || require('lodash');\nvar ObjectPath = typeof window !== 'undefined' && window.ObjectPath || require('objectpath');\n\nconst fieldTypeHandlers = {\n  'fieldset': 'processFieldset',\n  'cn-radios': 'processRadios',\n  'cn-radiobuttons': 'processRadiobuttons',\n  'cn-autocomplete': 'processSelect',\n  'cn-datetimepicker': 'processDate',\n  'help': 'processHelp',\n  'cn-display': 'processDisplay',\n  'cn-currency': 'processCurrency',\n  'cn-percentage': 'processPercentage',\n  'cn-url': 'processUrl',\n  'cn-mediaupload': 'processMediaUpload',\n  'cn-creativeimage': 'processCreativeImage',\n  'cn-facebookvideo': 'processFacebookVideo',\n  'cn-csvupload': 'processCsvUpload',\n  'cn-reusable': 'processReusable',\n  'cn-toggle': 'processToggle',\n  'cn-table': 'processTable',\n  'component': 'processComponent',\n  'section': 'processSection',\n  'tabarray': 'processSection',\n  'array': 'processArray',\n  'cn-schedule': 'processSchedule'\n};\n\n// handlers that don't run on secondPass are ones that shouldn't ever change\n// and we want to avoid compounding their effects\nconst fieldPropHandlers = [{\n  prop: 'default',\n  handler: (field, service) =>\n    service.processDefault(field)\n}, {\n  prop: 'resolve',\n  handler: (field, service, secondPass) =>\n    !secondPass && service.processResolve(field)\n}, {\n  prop: 'selectDisplay',\n  handler: (field, service) =>\n    service.processSelectDisplay(field)\n}, {\n  prop: 'schema',\n  handler: (field, service) =>\n    _.isUndefined(field.default) && !_.isUndefined(field.schema.default) && service.processDefault(field)\n}, {\n  prop: 'watch',\n  handler: (field, service, secondPass) =>\n    !secondPass &&field.watch && service.processFieldWatch(field)\n}, {\n  prop: 'type',\n  handler: (field, service, secondPass) =>\n    service.processFieldType(field, secondPass)\n}, {\n  prop: 'conditionals',\n  handler: (field, service) => service.processConditional(field)\n}, {\n  prop: 'updateSchema',\n  handler: (field, service, secondPass) =>\n    !secondPass && service.processFieldUpdatedSchema(field)\n}];\n\nfunction cnFlexFormServiceProvider(schemaFormDecoratorsProvider, cnFlexFormTypesProvider) {\n  'ngInject';\n\n  return {\n    registerField,\n    $get: CNFlexFormService\n  };\n\n  //////////\n\n  function registerField(fieldType) {\n    if(fieldType.condition) {\n      cnFlexFormTypesProvider.registerFieldType({\n        condition: fieldType.condition,\n        type: fieldType.type\n      });\n    }\n\n    if(fieldType.handler) {\n      fieldTypeHandlers[fieldType.type] = fieldType.handler;\n    }\n\n    if(fieldType.templateUrl) {\n      schemaFormDecoratorsProvider.addMapping(\n          'bootstrapDecorator',\n          fieldType.type,\n          fieldType.templateUrl\n      );\n      schemaFormDecoratorsProvider.createDirective(\n          fieldType.type,\n          fieldType.templateUrl\n      );\n    }\n  }\n}\n\nfunction CNFlexFormService(\n  Api,\n  $parse,\n  cnFlexFormConfig,\n  cnFlexFormTypes,\n  sfPath,\n  $interpolate,\n  $timeout,\n  cnUtil,\n  $stateParams\n) {\n  'ngInject';\n\n  const services = [];\n  const prototype = {\n    compile,\n    addArrayCopy,\n    addToDataCache,\n    addToFormCache,\n    addToScopeCache,\n    broadcastErrors,\n    buildError,\n    cleanup,\n    deleteArrayCopiesFor,\n    deregisterHandlers,\n    deregisterArrayHandlers,\n    getArrayCopy,\n    getArrayCopies,\n    getArrayCopiesFor,\n    getArrayScopes,\n    getDefault,\n    getFromDataCache,\n    getFromFormCache,\n    getFromScopeCache,\n    getFormsToProcess,\n    getKey,\n    getSchema,\n    getWatchables,\n    handleResolve,\n    incrementUpdates,\n    initArrayCopyWatch,\n    initModelWatch,\n    initSchemaParams,\n    isCompiled,\n    onModelWatch,\n    parseAll,\n    parseAny,\n    parseCondition,\n    parseExpression,\n    processArray,\n    processCreativeImage,\n    processDefault,\n    processDisplay,\n    processFacebookVideo,\n    processField,\n    processFieldset,\n    processFieldProps,\n    processFieldType,\n    processFieldUpdatedSchema,\n    processFieldWatch,\n    processComponent,\n    processConditional,\n    processCurrency,\n    processPercentage,\n    processUrl,\n    processDate,\n    processHelp,\n    processRadios,\n    processRadiobuttons,\n    processReusable,\n    processSchema,\n    processSelectDisplay,\n    processResolve,\n    processSection,\n    processSelect,\n    processSchedule,\n    processTable,\n    processTemplate,\n    processToggle,\n    processUpdatedSchema,\n    processMediaUpload,\n    processCsvUpload,\n    registerArrayHandlers,\n    registerHandler,\n    registerResolve,\n    replaceArrayIndex,\n    reprocessField,\n    resolveNestedExpressions,\n    setArrayIndex,\n    setupConfig,\n    setupArraySelectDisplay,\n    setupSelectDisplay,\n    setupSchemaRefresh,\n    silenceListeners,\n    skipDefaults\n  };\n\n  function getService(fn) {\n    return _.find(services, fn);\n  }\n\n  function destroyService(fn) {\n    const service = getService(fn);\n    if (service) {\n      service.cleanup();\n      _.empty(service);\n      _.remove(services, (s) => s === service);\n    }\n  }\n\n\n  function CNFlexFormConstructor(...args) {\n    if(args.length > 1) {\n      var [ schema, model, config ] = args;\n    }\n    else {\n      var { schema, model, config } = args[0];\n    }\n\n    const curService = getService((service) => service.model === model);\n    if(curService) {\n      if(schema) {\n        curService.compile(schema, model, config);\n      }\n      return curService;\n    }\n\n    const newService = new CNFlexForm(schema, model, config);\n    services.push(newService);\n    return newService;\n  }\n\n  function CNFlexForm(schema, model, config) {\n\n    if($stateParams.debug) {\n      window.services = services;\n    }\n\n    this.arrayCopies = {};\n    this.arrayListeners = {};\n    this.dataCache = {};\n    this.defaults = {};\n    this.errors = [];\n    this.events = [];\n    this.formCache = {};\n    this.scopeCache = {};\n    this.listeners = {};\n    this.resolveRegister = {};\n    this.model = model;\n    this.updates = 0;\n    this.skipDefault = {};\n\n    const overrides = config.getParams ? config.getParams() : {};\n    this.params = cnFlexFormConfig.getStateParams(overrides);\n\n    this._ = _;\n\n    this.compile(schema, model, config);\n  }\n\n  _.extend(CNFlexForm.prototype, prototype);\n  _.extend(CNFlexFormConstructor, prototype, { getService, destroyService });\n\n  return CNFlexFormConstructor;\n\n  //////////////\n\n  function compile(schema, model, config) {\n    var service = this;\n\n    if (config && config.getScope) {\n      service.scope = config.getScope();\n    }\n    service.schema = schema;\n    service.model = model;\n\n    if(!service.isCompiled()) {\n      service.setupConfig(config);\n\n      if(schema.forms) {\n        _.each(schema.forms, function(form) {\n          _.each(form.form, service.processField.bind(service));\n        });\n      }\n      else {\n        _.each(schema.form, service.processField.bind(service));\n      }\n\n      service.initModelWatch();\n      service.initArrayCopyWatch();\n      service.isCompiled(true);\n    }\n\n    service.broadcastErrors();\n  }\n\n  function isCompiled(setValue) {\n    var service = this;\n    if(setValue) {\n      service.schema.compiled = setValue;\n    }\n    return service.schema && service.schema.compiled;\n  }\n\n  function setupConfig(config) {\n    var service = this;\n    if(config) {\n      if(config.formCtrl) service.formCtrl = config.formCtrl;\n      if(config.updateSchema) service.updateSchema = config.updateSchema;\n      if(config.getSchema) service.getSchemaForm = service.setupSchemaRefresh(config.getSchema);\n    }\n    service.getParamOverrides = config.getParams || _.noop;\n  }\n\n  function processSchema(field) {\n    const service = this;\n    const { schema } = field;\n\n    field.getSchemaType = () => _.isArray(schema.type) ? _.first(schema.type) : schema.type;\n    if(!field.type) field.type = field.getSchemaType && field.getSchemaType();\n  }\n\n  function processDefault(field) {\n    const service = this;\n    const { schema } = field;\n    const curDefault = field.default || schema.default;\n    const key = service.getKey(field.key);\n\n    if (service.skipDefault[key]) {\n      delete service.skipDefault[key];\n      return;\n    }\n\n    if(field.condition) {\n      const condition = replaceArrayIndex(field.condition, field.arrayIndex || key);\n      if(!service.parseCondition(condition)) return;\n    }\n\n    // if schemaUpdate hasn't been triggered, let schemaForm directive handle defaults\n    //if(service.updates || field.default) {\n    if(!_.isUndefined(curDefault)) {\n      if(key.includes && key.includes('[]')) return;\n      const model = service.parseExpression(field.key, service.model);\n      const modelValue = model.get();\n      // if there's an existing default and it's the same as the current value\n      // update the current value to the new default\n      if(_.isUndefined(modelValue) || (\n        (_.has(service.defaults, key) ? angular.equals(modelValue, service.defaults[key]) : _.isTrulyEmpty(modelValue)) &&\n        !angular.equals(modelValue, curDefault)\n      )) {\n        model.set(angular.copy(curDefault));\n      }\n    }\n    service.defaults[key] = angular.copy(curDefault);\n\n    if(schema.format === 'url' && !field.validationMessage) {\n      if(!field.type) field.type = 'cn-url';\n      field.validationMessage = 'Must be a valid url (https://...)';\n    }\n  }\n\n  function processFieldset(fieldset) {\n    var service = this;\n\n    fieldset.type = 'cn-fieldset';\n    fieldset.items.forEach(service.processField.bind(service));\n\n    if(_.has(fieldset, 'pos') && fieldset.pos === 0) {\n      fieldset.htmlClass = (fieldset.htmlClass || '') + ' borderless';\n    }\n    if(fieldset.collapsible) {\n      fieldset.toggleCollapse = (fieldset) => {\n        if(fieldset.collapsible) {\n          fieldset.collapsed = !fieldset.collapsed;\n        }\n      };\n\n      fieldset.render = !fieldset.collapsed;\n    }\n    else {\n      fieldset.render = true;\n    }\n  }\n\n  function processFieldType(field, secondPass) {\n    const service = this;\n    const fieldType = cnFlexFormTypes.getFieldType(field);\n    const handler = fieldTypeHandlers[fieldType];\n    if(_.isString(handler)) {\n      service[handler](field, secondPass);\n    }\n    else if(_.isFunction(handler)) {\n      handler.call(service, field, secondPass);\n    }\n  }\n\n  function getOgKeys(field) {\n    return _.reject(\n      _.keys(field),\n      (key) => /^key$|^htmlClass$|^_/.test(key)\n    );\n  }\n\n  function processField(field, pos) {\n    const service = this;\n\n    if(angular.isDefined(pos)) {\n      field.pos = pos;\n    }\n\n    if(!field._ogKeys) {\n      field._ogKeys = getOgKeys(field);\n    }\n\n    const key = service.getKey(field.key);\n\n    if(key) {\n      service.addToFormCache(field, key);\n      const schema = service.getSchema(key);\n\n      if(schema) {\n        field.schema = schema;\n        if(schema.description) field.description = schema.description;\n        if(schema.type === 'array' && !('showClearAll' in field)) field.showClearAll = true;\n      }\n\n      service.processSchema(field);\n    }\n\n    service.processFieldProps(field);\n\n    if(key) {\n      ((key) => {\n        if(_.find(service.errors, { key })) {\n          service.errors = _.reject(service.errors, { key });\n          service.scope.$broadcast('schemaForm.error.' + key, 'serverValidation', true);\n          service.scope.$broadcast('schemaForm.error.' + key, 'schemaForm', true);\n        }\n      })(getDotKey(key));\n\n      if(field.error) {\n        service.errors.push(service.buildError(field));\n        if(_.isEmpty(field.ngModelOptions)) {\n          field.ngModelOptions = {\n            allowInvalid: true\n          };\n        } else {\n          field.ngModelOptions.allowInvalid = true;\n        }\n      }\n    }\n  }\n\n  function processFieldProps(field, secondPass) {\n    const service = this;\n    fieldPropHandlers.forEach(({ prop, handler }) =>\n        _.has(field, prop) && handler(field, service, secondPass)\n    );\n  }\n\n  function getKey(key) {\n    if(_.isArray(key)) {\n      key = _.reduce(key, (total, next) =>\n          /^(-?\\d*)$/.test(next) ? total + '[' + next + ']' : total + '.' + next);\n    }\n    return key;\n  }\n\n  function getSchema(key, depth) {\n    var service = this;\n    if(!key) return;\n\n    key = ObjectPath.parse(service.getKey(key));\n    depth = depth || service.schema.schema.properties;\n\n    let first, next;\n\n    while(key.length > 1) {\n      next = key[1];\n      if(/^-?\\d*$/.test(next)) {\n        if(key.length === 2) {\n          depth = depth[key.shift()];\n        }\n        else {\n          depth = depth[key.shift()].items.properties;\n          key.shift();\n        }\n      }\n      else {\n        depth = depth[key.shift()].properties;\n      }\n    }\n\n    // if array item\n    first = key[0] || 'items';\n\n    return depth[first];\n  }\n\n  function getDefault(field) {\n    const service = this;\n    field = field.key ? field : service.getFromFormCache(field);\n    return field && (angular.isDefined(field.default) ? field.default : field.schema && field.schema.default);\n  }\n\n  function getWatchables(exp) {\n    const watchables = [];\n    let nested = matchNestedExpression(exp);\n    let replaceStr = '';\n\n    while(nested) {\n      if(/^-?\\d+$/.test(nested[1]) || /^(\"|').*(\"|')$/.test(nested[1])) {\n        replaceStr = nested[0];\n        exp = exp.replace(nested[0], 'ff_replace_ff');\n      }\n      else {\n        watchables.push(nested[1].replace(/ff_replace_ff/g, replaceStr));\n        replaceStr = '';\n        exp = exp.replace(nested[0], '');\n      }\n      nested = matchNestedExpression(exp);\n    }\n\n    return [...watchables, exp.replace(/ff_replace_ff/g, replaceStr)];\n  }\n\n  function processResolve(field) {\n    const service = this;\n    const key = service.getKey(field.key);\n\n    _.each(field.resolve, function(dataProp, fieldProp) {\n      dataProp = replaceArrayIndex(dataProp, key || field.arrayIndex);\n      if(dataProp.includes('[arrayIndex]')) return;\n\n      service.handleResolve(field, fieldProp, dataProp, true);\n\n      getWatchables(dataProp).forEach((watchable) => {\n        const [, base, exp] = watchable.match(/(schema\\.data\\.|model\\.)(\\S+)/) || [];\n\n        if(base) {\n          if(base === 'schema.data.') {\n            service.registerResolve(field, fieldProp, exp, dataProp);\n          }\n          else if(base === 'model.') {\n            service.registerHandler(exp, () => {\n              service.handleResolve(field, fieldProp, dataProp);\n            });\n          }\n        }\n      });\n    });\n\n    return field;\n  }\n\n  function parseAny(exp, base) {\n    const service = this;\n    let result;\n    const eithers = exp.split(' || ');\n    const match = _.find(eithers, x => {\n      const v = service.parseExpression(x, base).get();\n      if(!_.isUndefined(v)) {\n        result = v;\n        return true;\n      }\n    });\n    return result;\n  }\n\n  function parseAll(exp, base) {\n    const service = this;\n    const all = exp.split(' && ');\n    const match = _.reduce(all, (acc, x) => {\n      const v = service.parseExpression(x, base).get();\n      if(!_.isUndefined(v)) {\n        acc.push(v);\n      }\n      return acc;\n    }, []);\n    return all.length === match.length ? _.last(match) : undefined;\n  }\n\n  function handleResolve(field, fieldProp, exp, skipPropHandlers) {\n    const service = this;\n    const data = exp.includes(' || ') ?\n      service.parseAny(exp) : exp.includes(' && ') ?\n      service.parseAll(exp) : service.parseExpression(exp).get();\n\n    if(data && data.cursor) {\n      field.loadMore = function() {\n        const dataProp = exp.match(/schema\\.data\\.(.+)/)[1];\n        service.refreshSchema(`data:${dataProp}:${data.cursor}`);\n      };\n    }\n    else {\n      delete field.loadMore;\n    }\n\n    const val = (data && data.data) ? data.data : data;\n    const val1 = fieldProp === 'condition' ? val + '' : val;\n    service.parseExpression(fieldProp, field).set(val1);\n\n    if(!skipPropHandlers) {\n      fieldPropHandlers.forEach(({ prop, handler }) =>\n          prop === fieldProp && handler(field, service)\n      );\n    }\n  }\n\n  function registerResolve(field, fieldProp, dataProp, exp) {\n    var service = this;\n\n    let fieldKey = service.getKey(field.key);\n    service.resolveRegister[dataProp] = service.resolveRegister[dataProp] || {};\n\n    let register = service.resolveRegister[dataProp];\n    register[fieldKey] = register[fieldKey] || [];\n    register[fieldKey].push({ field, prop: fieldProp, exp });\n  }\n\n  function processConditional(field) {\n    const service = this;\n\n    _.each(field.conditionals, (condition, key) => {\n      const handler = (val, prev) => {\n        field[key] = service.parseCondition(condition);\n        const scope = service.getFromScopeCache(service.getKey(field.key));\n        if(key === 'required' && scope) {\n          service.scope.$broadcast('schemaFormValidate');\n        }\n      };\n      field\n          .conditionals[key]\n          .match(/model\\.([^\\s]+)/g)\n          .map(path => path.match(/model\\.([^\\s]+)/)[1])\n          .forEach(key => {\n            service.registerHandler(key, handler);\n          });\n      handler();\n    });\n  }\n\n  function processFieldWatch(field) {\n    const service = this;\n    if(!field.watch) return;\n\n    let schema = field.schema;\n    field.watch = _.isArray(field.watch) ? field.watch : [field.watch];\n\n    _.each(field.watch, function(watch) {\n      if(watch.resolution) {\n        let condition;\n        if(_.isString(field.condition)) {\n          // if the condition isn't already wrapped in parens, wrap it\n          condition = /^\\(.*\\)$/.test(field.condition) ?\n            field.condition :\n            `(${field.condition})`;\n        }\n        if(_.isString(watch.condition)) {\n          condition = condition ?\n            `${condition} && ${watch.condition}` :\n            watch.condition;\n        }\n        let resolution = watch.resolution;\n        let handler;\n\n        if(_.isFunction(resolution)) {\n          handler = function(cur, prev) {\n            if(!condition || service.parseCondition(condition)) {\n              resolution(cur, prev);\n            }\n          };\n        }\n        else {\n          var adjustment = {};\n\n          adjustment.date = resolution.match(/\\+ ?(\\d+) (days|hours)/);\n\n          if(adjustment.date) {\n            adjustment.date = {\n              val: adjustment.date[1],\n              units: adjustment.date[2]\n            };\n            resolution = resolution.replace(adjustment.date.val, '').trim();\n          }\n          else {\n            adjustment.math = resolution.match(/(\\+|\\-|\\/|\\*) ?(\\S+)/);\n\n            if(adjustment.math) {\n              adjustment.operator = {\n                '+': 'add',\n                '-': 'subtract',\n                '*': 'multiply',\n                '/': 'divide'\n              }[adjustment.math[1]];\n\n              adjustment.adjuster = service.parseExpression(adjustment.math[2]);\n            }\n          }\n\n          resolution = resolution.match(/(\\S+) ?= ?(\\S+)/);\n\n          handler = (val, prev, key, trigger) => {\n            let curCondition = condition && replaceArrayIndex(condition, key);\n            if(_.isString(curCondition) && curCondition.includes('[arrayIndex]')) {\n              return console.error(`arrayIndex could not be repalced from expression '${curCondition}'`);\n            }\n            let updatePath = replaceArrayIndex(resolution[1], key);\n            let fromPath = replaceArrayIndex(resolution[2], key);\n\n            let update = service.parseExpression(updatePath);\n\n            // avoid loop where two watches keep triggering each other\n            if(trigger === update.path().key) return;\n            trigger = update.path().key;\n\n            let from = service.parseExpression(fromPath);\n\n            if(!condition || service.parseCondition(curCondition)) {\n              if(adjustment.date) {\n                update.set(moment(from.get())\n                            .add(adjustment.date.val, adjustment.date.units)\n                            .toDate());\n              }\n              else if(adjustment.math) {\n                //var result = _[adjustment.operator](from.get(), adjustment.adjuster.get());\n                //let result = eval(from.get() + adjustment.math[1] + adjustment.adjuster.get());\n                let result = $parse(from.get() + adjustment.math[1] + adjustment.adjuster.get())();\n                schema = schema || field.items && (field.items[0].schema || (field.items[0].items && field.items[0].items[0].schema));\n                if(field.type === 'cn-currency') {\n                  let p = schema && schema.format === 'currency-dollars' ? 2 : 0;\n\n                  if(adjustment.math[1] === '*') {\n                    result = _.floor(result, p);\n                  }\n                  else if(adjustment.math[1] === '/') {\n                    result = _.ceil(result, p);\n                  }\n                  else {\n                    result = _.round(result, p);\n                  }\n                }\n                //service.listeners[update.path().key].prev = result;\n                if(service.listeners[trigger]) {\n                  service.listeners[trigger].trigger = key;\n                }\n                update.set(result || 0);\n              }\n              else {\n                update.set(from.get());\n              }\n            }\n          };\n        }\n\n        service.registerHandler(field, handler, field.updateSchema, watch.initialize);\n      }\n    });\n  }\n\n  function parseCondition(condition) {\n    const service = this;\n    if(condition.startsWith(\"_\")) {\n      let exp = /^_\\.(.*?)\\((.*?),[\\s(]*(.*?)\\)?\\s*=>[{\\s]*(?:return)?(.*?)\\}?\\)$/;\n      let [, fn, list, predicateParams, predicateBody] = condition.match(exp);\n      return _[fn]($parse(list)(service), generatePredicate(predicateParams, predicateBody));\n    } else {\n      return $parse(condition)(service);\n    }\n  }\n\n  function generatePredicate(params, body) {\n    return (...args) =>\n      $parse(body)(params\n              .replace(/\\s/g, '')\n              .split(',')\n              .reduce((acc, cur, i) => { acc[cur] = args[i]; return acc; }, {})\n            );\n  }\n\n  function processFieldUpdatedSchema(field) {\n    const service = this;\n    const key = service.getKey(field.key);\n    if(!service.updates && field.updateSchema && !service.schema.params[key]) {\n      // by this point defaults should be processed so we can get value directly from model\n      const curVal = service.parseExpression(key, service.model).get();\n      if(!_.isUndefined(curVal)) service.schema.params[key] = curVal;\n    }\n    service.registerHandler(field, null, field.updateSchema);\n  }\n\n  function registerHandler(key, handler, updateSchema, runHandler) {\n    var service = this;\n\n    // if field is passed instead of key\n    if(_.isObject(key) && !_.isArray(key)) {\n      if(!key.key && key.items) {\n        _.each(key.items, function(field) {\n          service.registerHandler(field, handler, field.updateSchema);\n        });\n        return;\n      }\n      else {\n        key = key.key;\n      }\n    }\n\n    key = service.getKey(key);\n    var arrMatch = key.match(/(.*)\\[]\\.?(.*)/);\n\n    if(arrMatch) {\n      service.registerArrayHandlers(arrMatch[1], arrMatch[2], handler, updateSchema, runHandler);\n      return;\n    }\n\n    var cur = service.parseExpression(key, service.model).get();\n    let defaultValue = _.get(service.getSchema(key), 'default');\n\n    if(!service.listeners[key]) {\n      var prev = angular.copy(cur);\n      service.listeners[key] = {\n        handlers: [],\n        updateSchema: updateSchema,\n        prev: prev\n      };\n    }\n\n    if(handler) {\n      service.listeners[key].handlers.push(handler);\n      if(runHandler) handler(cur, null, key);\n    }\n  }\n\n  function registerArrayHandlers(arrKey, fieldKey, handler, updateSchema, runHandler) {\n    const service = this;\n    const onArray = (cur, prev, reorder) => {\n\n      if(!prev && prev !== 0 && (cur | 0) < 1) return;\n      var i, l, key;\n\n      if(prev > cur || reorder) {\n        const lastKey = fieldKey ?\n          `${arrKey}[${prev - 1}].${fieldKey}` :\n          `${arrKey}[${prev - 1}]`;\n\n        // only deregister handlers once each time an element is removed\n        if(service.listeners[lastKey]) {\n          for(i = 0, l = prev; i < l; i++) {\n            key = fieldKey ?\n              `${arrKey}[${i}].${fieldKey}` :\n              `${arrKey}[${i}]`;\n\n            service.deregisterHandlers(key);\n          }\n        }\n        for(i = 0, l = cur; i < l; i++) {\n          key = fieldKey ?\n            `${arrKey}[${i}].${fieldKey}` :\n            `${arrKey}[${i}]`;\n\n          service.registerHandler(key, handler, updateSchema);\n          //no need to call if just reregisering handlers\n          //if(runHandler) handler(null, null, key);\n        }\n      }\n      else if(cur > (prev || 0)) {\n        for(i = prev | 0, l = cur; i < l; i++) {\n          key = fieldKey ?\n            `${arrKey}[${i}].${fieldKey}` :\n            `${arrKey}[${i}]`;\n\n          service.registerHandler(key, handler, updateSchema, runHandler);\n          //if(runHandler) handler(null, null, key);\n        }\n      }\n    };\n\n    const arrVal = service.parseExpression(arrKey, service.model).get();\n    _.each(arrVal, (field, i) => {\n      const key = fieldKey ?\n        `${arrKey}[${i}].${fieldKey}` :\n        `${arrKey}[${i}]`;\n\n      service.registerHandler(key, handler, updateSchema);\n      if(runHandler) handler(null, null, key);\n    });\n\n    const listenerKey = `${arrKey}.length`;\n    if(service.arrayListeners[listenerKey]) {\n      service.arrayListeners[listenerKey].handlers.push(onArray);\n    }\n    else {\n      service.arrayListeners[listenerKey] = {\n        handlers: [onArray],\n        prev: arrVal ? arrVal.length : 0\n      };\n    }\n  }\n\n  function deregisterHandlers(key) {\n    var service = this;\n\n    key = service.getKey(key);\n\n    var arrMatch = key.match(/([^[\\]]*)\\[]\\.?(.*)/);\n\n    if(arrMatch) {\n      service.deregisterArrayHandlers(arrMatch[1], arrMatch[2]);\n      return;\n    }\n\n    if(service.listeners[key]) service.listeners[key].handlers = [];\n    //if(service.listeners[key]) delete service.listeners[key];\n  }\n\n  function deregisterArrayHandlers(arrKey, fieldKey) {\n    var service = this;\n\n    service.parseExpression(arrKey, service.model).get().forEach((item, i) => {\n      fieldKey ?\n        service.deregisterHandlers(`${arrKey}[${i}].${fieldKey}`) :\n        service.deregisterHandlers(`${arrKey}[${i}]`);\n    });\n  }\n\n  function initModelWatch() {\n    var service = this;\n    if(service.watching) return;\n    if(service.modelWatch) service.modelWatch();\n\n    service.modelWatch = service.scope.$watch(\n      () => service.model,\n      service.onModelWatch.bind(service),\n      true\n    );\n\n    service.initSchemaParams();\n    service.watching = true;\n    service.firstUpdate = true;\n  }\n\n  function onModelWatch(cur, prev) {\n    var service = this;\n    // we always run through the listeners on the first update because angular seems to mess up\n    // when the defaults are applied and uses the same object for both cur and prev\n    if(service.firstUpdate || !angular.equals(cur, prev)) {\n      service.firstUpdate = false;\n      cnUtil.cleanModel(service.model);\n\n      service.prevParams = angular.copy(service.params);\n\n      _.each(service.arrayListeners, (listener, key) => {\n        let val = service.parseExpression(key, service.model).get();\n        if(!angular.equals(val, listener.prev)) {\n          listener.handlers.forEach(handler => handler(val, listener.prev));\n          listener.prev = angular.copy(val);\n        }\n      });\n\n      _.each(service.listeners, (listener, key) => {\n        if(listener) {\n          let val = service.parseExpression(key, service.model).get();\n          const isInitArray = angular.equals(val, []) && !listener.prev;\n          if(!angular.equals(val, listener.prev) && !isInitArray) {\n            listener.handlers.forEach(handler => {\n              handler(val, listener.prev, key, listener.trigger);\n            });\n            listener.trigger = null;\n            listener.prev = angular.copy(val);\n          }\n          if(listener.updateSchema &&\n            !angular.isUndefined(val) &&\n            !isInitArray &&\n            val !== null/* &&\n            !angular.equals(val, service.getDefault(key))*/) {\n            service.params[key] = val;\n          }\n          else {\n            delete service.params[key];\n          }\n        }\n      });\n\n      if(!angular.equals(service.params, service.prevParams)) {\n        if(service.model.id && !service.updates && _.isEmpty(service.prevParams)) {\n          service.incrementUpdates();\n        }\n        else {\n          if(_.isFunction(service.refreshSchema)) {\n            service.refreshSchema();\n          }\n        }\n      }\n    }\n  }\n\n  function initSchemaParams() {\n    var service = this;\n    _.each(service.listeners, function(listener, key) {\n      if(listener) {\n        var val = service.parseExpression(key, service.model).get();\n        if(listener.updateSchema && !angular.isUndefined(val) && val !== null) {\n          service.params[key] = val;\n        }\n      }\n    });\n  }\n\n  function stripIndexes(key) {\n    return key.replace(/\\[\\d+]/g, '[]');\n  }\n\n  function initArrayCopyWatch() {\n    const service = this;\n\n    service.events.push(service.scope.$on('schemaFormPropagateFormController', (event, scope) => {\n      const { form } = scope;\n      if(!form.key) {\n        form.cacheKey = `${form.type}-${_.uniqueId()}`;\n      }\n      const key = form.cacheKey || service.getKey(form.key);\n\n      if(_.isNumber(scope.arrayIndex)) {\n        const genericKey = stripIndexes(key);\n        const index = scope.arrayIndex;\n        form.arrayIndex = index;\n\n        if(!service.getArrayCopy(genericKey, index)) {\n          service.processFieldProps(form, true);\n        }\n\n        if(!form.condition) form.condition = 'true';\n        // else if (form.condition.includes(\"arrayIndex\")) {\n        //   form.condition = service.replaceArrayIndex(form.condition, key);\n        // }\n\n        service.addArrayCopy(scope, genericKey, index);\n        scope.$emit('flexFormArrayCopyAdded', genericKey);\n      }\n      else {\n        service.addToScopeCache(scope, key);\n      }\n    }));\n\n    service.events.push(service.scope.$on('schemaFormDeleteScope', (event, scope, index) => {\n      const key = service.getKey(scope.form.key);\n      const listener = service.listeners[key];\n      if(listener) listener.handlers = [];\n\n      service.deleteArrayCopiesFor(key, index);\n\n      if(scope.form.link) {\n        const list = service.parseExpression(scope.form.link, service.model).get();\n        list.splice(index, 1);\n        service.deleteArrayCopiesFor(scope.form.link, index);\n      }\n    }));\n  }\n\n  function addArrayCopy(form, key, index) {\n    const service = this;\n    if(!index || index < 0) index = 0;\n    if(!service.arrayCopies[key]) service.arrayCopies[key] = [];\n    service.arrayCopies[key][index] = form;\n    //service.arrayCopies[key].push(form);\n  }\n\n  function getArrayCopy(key, index) {\n    const service = this;\n    const copies = service.arrayCopies[key];\n    return copies && copies[index];\n  }\n\n  function getArrayCopies(key) {\n    const service = this;\n    return _.pluck(service.getArrayScopes(key), 'form');\n  }\n\n  function getArrayCopiesFor(keyStart) {\n    const service = this;\n    keyStart += '[]';\n\n    return _.filter(service.arrayCopies, (copy, key) => key.includes(keyStart));\n  }\n\n  function deleteArrayCopiesFor(key, index) {\n    const service = this;\n    const copies = service.getArrayCopiesFor(key);\n    _.each(copies, list => list && list.splice(index, 1));\n  }\n\n  function getArrayScopes(key) {\n    var service = this;\n    return service.arrayCopies[key];\n  }\n\n  function addToScopeCache(scope, key) {\n    const service = this;\n    if(service.scopeCache[key]) {\n      console.warn('caching duplicate scope for', key);\n    }\n    return service.scopeCache[key] = scope;\n  }\n\n  function getFromScopeCache(key) {\n    const service = this;\n    return service.scopeCache[key];\n  }\n\n  function addToFormCache(field, key) {\n    var service = this;\n    key = key || service.getKey(field.key);\n    if(!service.getFromFormCache(key)) service.formCache[key] = field;\n  }\n\n  function getFromFormCache(key) {\n    var service = this;\n    return service.formCache[key];\n  }\n\n  function addToDataCache(key, modelValue) {\n    var service = this;\n\n    if(key) {\n      service.dataCache[key] = modelValue;\n    }\n  }\n\n  function getFromDataCache(key) {\n    var service = this;\n\n    return service.dataCache[key];\n  }\n\n  function matchIntStrIndex(exp) {\n    return exp.match(/\\[(-?\\d+|\".*\"|'.*')]/);\n  }\n\n  function matchNestedExpression(exp) {\n    let [toReplace] = matchIntStrIndex(exp) || [];\n    const replaced = [];\n\n    while(toReplace) {\n      replaced.push(toReplace);\n      exp = exp.replace(toReplace, `ff_r${replaced.length - 1}_ff`);\n      [toReplace] = matchIntStrIndex(exp) || [];\n    }\n\n    const match = exp.match(/\\[([^[\\]]+)]([^[\\]]*)/);\n\n    return match &&\n      replaced.length ?\n      match.map((exp) => {\n        let [toReplace, index] = exp.match(/ff_r(\\d+)_ff/) || [];\n        while(toReplace) {\n          exp = exp.replace(toReplace, replaced[index]);\n          [toReplace, index] = exp.match(/ff_r(\\d+)_ff/) || [];\n        }\n        return exp;\n      }) :\n      match;\n  }\n\n  function resolveNestedExpressions(exp, depth) {\n    const service = this;\n    let [, nested] = matchNestedExpression(exp) || [];\n\n    while(nested) {\n      const parsed = service.parseExpression(nested, depth).get();\n      const keyVal = _.isUndefined(parsed) ?\n        '' :\n        _.isString(parsed) ?\n          `\"${parsed}\"` :\n          parsed;\n      exp = exp.replace(`[${nested}]`, `[${keyVal}]`);\n      [, nested] = matchNestedExpression(exp) || [];\n    }\n\n    return exp;\n  }\n\n  function parseExpression(exp, depth) {\n    const service = this;\n\n    if(!_.isString(exp) && !_.isArray(exp)) {\n      return { get: () => exp };\n    }\n\n    // if expression is specific value\n    if(/^(null|false|true|undefined|'[^\\']*'|\"[^\\\"]*\"|-?[0-9.]+|\\[]|\\{})$/.test(exp)) {\n      return {\n        \"get\": function() {\n          if(!exp) return exp;\n          const isStr = exp.match(/\"([^\\\"]*)\"/) || exp.match(/'([^\\']*)'/);\n          if(isStr) return isStr[1];\n          switch(exp) {\n            case 'null': return null;\n            case 'false': return false;\n            case 'true': return true;\n            case 'undefined': return;\n            case '[]': return [];\n            case '{}': return {};\n            default: return parseFloat(exp);\n          }\n        }\n      };\n    }\n\n    exp = service.getKey(exp);\n\n    const match = exp.match(/^(model\\.)?(\\S+)$/);\n\n    const modelValue = {\n      get() {\n        let resolved = service.resolveNestedExpressions(exp, depth);\n        let path = ObjectPath.parse(resolved);\n        let start = depth || service;\n\n        while(start && path.length > 1) {\n          start = start[path.shift()];\n        }\n\n        return start && start[path[0]];\n      },\n\n      getAssignable({ noConstruction } = {}) {\n        let resolved = service.resolveNestedExpressions(exp, depth);\n        let path = ObjectPath.parse(resolved);\n        let progress = [];\n        let start = depth || service;\n\n        while(start && path.length > 1) {\n          let key = path.shift();\n          progress.push(key);\n          if(!start[key]) {\n            if(noConstruction) {\n              return null;\n            }\n            if(/^\\d?$/.test(path[0])) {\n              start[key] = [];\n            }\n            else {\n              start[key] = {};\n            }\n          }\n          start = start[key];\n        }\n\n        return {\n          obj: start,\n          key: path[0],\n          path: service.getKey(progress),\n          fullPath: service.getKey(progress.concat(path.slice(0, 1)))\n        };\n      },\n\n      set(val, options = {}) {\n        let resolved = service.resolveNestedExpressions(exp, depth);\n        let path = ObjectPath.parse(resolved);\n        if(val === 'remove') {\n          let { obj, key } = this.getAssignable({ noConstruction: true }) || {};\n          delete service.defaults[resolved.replace('model.', '')];\n          if(obj) {\n            delete obj[key];\n          }\n        }\n        else {\n          let { obj, key } = this.getAssignable();\n          obj[key] = val;\n        }\n        if(options.silent) {\n          service.silenceListeners(resolved, depth);\n          service.skipDefaults(resolved);\n        }\n        return val;\n      },\n\n      path() {\n        return {\n          exp: exp,\n          depth: depth,\n          key: match[2]\n        };\n      }\n    };\n\n    return modelValue;\n  }\n\n  function silenceListeners(keyStart, depth) {\n    const service = this;\n    _.each(service.listeners, (listener, key) => {\n      if(key.indexOf(keyStart) === 0) {\n        listener.prev = angular.copy(service.parseExpression(key, depth).get());\n      }\n    });\n  }\n\n  function skipDefaults(keyStart) {\n    const service = this;\n    const index = keyStart.match(/\\[\\d*\\]/) ? getArrayIndex(keyStart) : null;\n    const ks = stripIndexes(keyStart);\n    const keys = _.filter(_.keys(service.formCache), (k) => k.startsWith(ks));\n    let skipKeys = [];\n    _.each(keys, (key) => {\n      const indexedKey = service.setArrayIndex(key, index);\n      const model = service.parseExpression(indexedKey, service.model).get();\n      if (_.isArray(model)) {\n        const childKeys = _.filter(_.keys(service.formCache), (k) => k.startsWith(key));\n        for (let i = 0; i < model.length; i++) {\n          _.each(childKeys, (k) => {\n            skipKeys.push(k);\n            const indexedChildKey = service.setArrayIndex(k, [index, i]);\n            service.skipDefault[indexedChildKey] = true;\n          });\n        }\n      } else if (!skipKeys.includes(key)) {\n        service.skipDefault[indexedKey] = true;\n      }\n    });\n  }\n\n  function processArray(array) {\n    var service = this;\n    var key = service.getKey(array.key);\n\n    array.sortOptions = {\n      update: function(e, ui) {\n        let listener = service.arrayListeners[`${key}.length`];\n        listener.handlers.forEach(handler => {\n          handler(listener.prev, listener.prev, true);\n        });\n      }\n    };\n\n    service.processSection(array);\n  }\n\n  function processSection(section, secondPass) {\n    var service = this;\n    // if we're here because a parent's scope was emitted,\n    // scope for this section will soon be emitted, so can skip\n    if(secondPass) return;\n    _.each(section.items, service.processField.bind(service));\n  }\n\n  function processComponent(component) {\n    var service = this;\n\n    component.type = 'section';\n    component.htmlClass = 'row';\n\n    var cols = 12 / _.reject(component.items, 'hidden').length;\n\n    _.each(component.items, function(field, i) {\n      service.processField(field);\n      component.items[i] = {\n        type: 'section',\n        htmlClass: 'col-sm-' + cols,\n        items: [field]\n      };\n    });\n  }\n\n  function processCurrency(field) {\n    field.currencyFormat = {\n      'currency-dollars': 'dollars',\n      'currency-microcents': 'microcents',\n      'currency': 'cents'\n    }[field.schema.format];\n\n    field.type = 'cn-currency';\n  }\n\n  function processPercentage(field) {\n    field.type = 'cn-percentage';\n  }\n\n  function processUrl(field) {\n    field.type = 'cn-url';\n  }\n\n  function processReusable(field) {\n    var service = this;\n    field.type = 'cn-reusable';\n    field.view = field.view || 'new';\n    field.items.forEach(service.processField.bind(service));\n    field.items = [{\n      type: 'section',\n      items: field.items,\n      condition: '!model.' + service.getKey(field.key) + '.id'\n    }];\n  }\n\n  function processFacebookVideo(field) {\n    var service = this;\n    field.type = 'cn-facebookvideo';\n    if(!field.resolve) {\n      field.resolve = { };\n      _.each(field.data, (exp, prop) =>\n          field.resolve[`data.${prop}`] = exp\n      );\n    }\n    service.processResolve(field);\n  }\n\n  function processCreativeImage(field) {\n    var service = this;\n    field.type = 'cn-creativeimage';\n    if(!field.resolve) {\n      field.resolve = { };\n      _.each(field.data, (exp, prop) =>\n          field.resolve[`data.${prop}`] = exp\n      );\n    }\n    service.processResolve(field);\n  }\n\n  function processMediaUpload(field) {\n    var service = this;\n    field.type = 'cn-mediaupload';\n    if(!field.resolve) {\n      field.resolve = { };\n      _.each(field.data, (exp, prop) =>\n          field.resolve[`data.${prop}`] = exp\n      );\n    }\n    service.processResolve(field);\n  }\n\n  function processCsvUpload(field) {\n    var service = this;\n    field.type = 'cn-csvupload';\n  }\n\n  function processRadios(field) {\n    field.type = 'cn-radios';\n  }\n\n  function processRadiobuttons(radios) {\n    var service = this;\n    radios.type = 'cn-radiobuttons';\n    if(radios.fullWidth) {\n      radios.btnClass = 'col-sm-' + _.divide(12, radios.titleMap.length);\n    }\n  }\n\n  function processDate(date) {\n    var service = this;\n    date.type = 'cn-datetimepicker';\n\n    if(date.schema.format === 'time-minutes') {\n      date.maxView = 'hour';\n      date.iconClass = 'fa fa-clock-o';\n\n      date.modelFormatter = val => {\n        if(!val) return;\n\n        let m = moment(val);\n\n        return _.add(_.multiply(m.hours(), 60), m.minutes());\n      };\n\n      date.modelParser = val => {\n        if(!val) return;\n\n        let d = parseInt(val);\n        let hours = _.floor(d / 60);\n        let minutes = d % 60;\n\n        return moment().startOf('day').add('hours', hours).add('minutes', minutes);\n      };\n\n      date.viewFormatter = val => {\n        if(!val) return;\n\n        return date.modelParser(val).format(date.dateFormat);\n      };\n\n      date.viewParser = val => {\n        if(!val) return;\n\n        let match = val.match(/^(\\d{1,2}):?(\\d{1,2})? (a|p)/);\n        if(!match) return;\n\n        let hours = _.add(match[1] === '12' ? 0 : match[1], match[3] === 'a' ? 0 : 12);\n        let minutes = match[2] || '00';\n\n        if(minutes.length === 1) minutes += '0';\n\n        return _.add(_.multiply(hours, 60), minutes);\n      };\n    }\n  }\n\n  function getSelectValProp(select) {\n    let isArray = select.getSchemaType() === 'array';\n    return select.valueProperty ||\n      (isArray ? select.schema.items.type : select.schema.type) !== 'object' && 'value';\n  }\n\n  function getAllowedSelectValue(select, val, titleMap) {\n    titleMap = titleMap || select.getTitleMap();\n    let valProp = getSelectValProp(select);\n    let omitHashKey = valProp ?  _.identity : _.partialRight(_.omit, \"$$hashKey\")\n    let findFn = valProp ?\n      _.compose(_.partial(_.find, titleMap), _.partial(_.set, {}, valProp), omitHashKey) :\n      _.compose(_.partial(_.find, titleMap), omitHashKey)\n    if(select.getSchemaType() === 'array') {\n      if(!val || !_.isArray(val)) return;\n      return val.map(findFn).filter(x => x !== undefined);\n    } else {\n      return findFn(val);\n    }\n  }\n\n  function processSchedule(field) {\n      field.startEmpty = true;\n      field.type = 'cn-schedule';\n  }\n\n  function processSelect(select) {\n    const service = this;\n    const schema = select.schema;\n\n    if(select.titleMapResolve || select.titleMap) {\n      select.getTitleMap = () =>\n        select.titleMap || service.schema.data[select.titleMapResolve];\n\n      select.onInit = function(val, form, event, setter) {\n        // make sure we use correct value\n        var modelValue = service.parseExpression(form.key, service.model);\n        if(event === 'tag-init') {\n          let newVal = getAllowedSelectValue(select, modelValue.get());\n          if(newVal !== undefined) setter(newVal);\n        }\n      };\n    }\n\n    if(select.titleMapQuery) {\n      const queryParams = select.titleMapQuery.params;\n      const paramsKeys = _.keys(queryParams);\n      select.showClearAll = true;\n      select.showClearCache = !!select.titleMapQuery.params.refreshData;\n      select.singleQuery = select.minLookup === 0;\n      select.titleQuery = (q, { refreshData }) => {\n        const params =\n          _(paramsKeys)\n          .reduce((acc, key) => {\n            if (key === 'q') {\n              acc[queryParams[key]] = q;\n            }\n            else if (key === 'refreshData') {\n              if (refreshData) acc[queryParams[key]] = true;\n            }\n            else {\n              const exp = service.replaceArrayIndex(queryParams[key], select.arrayIndex);\n              const val = service.parseExpression(exp).get();\n              acc[key] = val;\n            }\n            return acc;\n          }, {});\n        return Api.get({\n          url: select.titleMapQuery.url,\n          params\n        });\n      };\n\n      if(!_.isNumber(select.minLookup)) select.minLookup = paramsKeys.length ? 3 : 0;\n      if(!_.has(select, 'skipFiltering')) select.skipFiltering = !!select.minLookup;\n\n      select.onInit = function(val, form, event, setter) {\n        if(event === 'tag-init') {\n          setter(val);\n        }\n      };\n    }\n\n    if(!_.isNumber(select.minLookup)) select.minLookup = 0;\n\n    if(schema.items) {\n      var defaults = [];\n      _.each(schema.items.properties, function(schema, key) {\n        if(angular.isDefined(schema.default)) {\n          defaults.push({\n            \"key\": key,\n            default: schema.default\n          });\n        }\n      });\n      if(defaults.length) {\n        select.onAdd = function(val, form, event) {\n          if(val.value && event === 'tag-added') {\n            _.each(defaults, function(prop) {\n              if(!val.value[prop.key]) val.value[prop.key] = prop.default;\n            });\n          }\n        };\n      }\n    }\n\n    if(select.displayFormat) {\n      select.itemFormatter = service.processTemplate(select.displayFormat);\n    }\n\n    if(!select.type.includes('cn-autocomplete')) {\n      if(select.items) {\n        select.detailedList = true;\n\n        if(select.items[0].type !== 'component') {\n          if(select.items.length > 1) {\n            _.each(select.items, (i) => i.destroyStrategy = \"retain\");\n            select.items = [{\n              type: \"component\",\n              items: select.items\n            }];\n          }\n\n          service.processFieldset(select);\n        }\n\n        select.type = 'cn-autocomplete-detailed';\n        select.destroyStrategy = 'retain';\n      }\n      else {\n        if(!select.selectionStyle) {\n          select.selectionStyle = select.key === 'tags' ?\n            'tags' : (select.getSchemaType() === 'array' && select.schema.maxItems !== 1) ?\n              'list' : 'select';\n        }\n        select.type = 'cn-autocomplete';\n      }\n\n      if(select.titleMapResolve) {\n        service.scope.$on('cnFlexFormDiff:data', (e, data) => {\n          if(data[select.titleMapResolve]) {\n            let modelValue = service.parseExpression(select.key, service.model);\n            let val = modelValue.get();\n            if(val !== undefined) {\n              let valid = getAllowedSelectValue(select, val, data[select.titleMapResolve]);\n              if(valid === undefined || (_.isArray(valid) && _.isEmpty(valid))) modelValue.set();\n            }\n          }\n        });\n      }\n\n      service.registerHandler(select.key, function(val) {\n        var form = service.formCtrl && service.formCtrl[service.getKey(select.key)];\n        if(form && form.$setDirty) form.$setDirty();\n      }, select.updateSchema);\n    }\n  }\n\n  function processToggle(toggle) {\n    toggle.type = 'cn-toggle';\n  }\n\n  function processHelp(help) {\n    help.htmlClass = 'help-block';\n  }\n\n  function processDisplay(display) {\n    var service = this;\n    display.type = 'cn-display';\n    display.getDisplay = service.processTemplate(display.displayFormat, true);\n  }\n\n  function processTemplate(tpl, parseScope) {\n    var service = this;\n    //var processor = /<(\\S+)[^>]*>.*<\\/\\1>/.test(tpl) ? $compile : $interpolate;\n    var processor = $interpolate;\n    return function(scope, arrayIndex) {\n      if(parseScope) {\n        if(angular.isDefined(arrayIndex)) {\n          scope = _.map(scope, function(key) {\n            return key === 'arrayIndex' ? arrayIndex : key;\n          });\n        }\n        scope = service.parseExpression(scope, service.model).get();\n      }\n      return processor(tpl)(scope);\n    };\n  }\n\n  function processTable(table) {\n    var service = this;\n    table.type = 'cn-table';\n    table.items.forEach(function(row) {\n      for (var i = 0; i < table.columns.length; i++) {\n        _.extend(row.items[i], table.columns[i]);\n        //if(row.columns[i].key) row.columns[i].key = ObjectPath.parse(row.columns[i].key);\n        service.processField(row.items[i]);\n      }\n    });\n  }\n\n  function processSelectDisplay(selectDisplay) {\n    const service = this;\n    const schema = service.getSchema(selectDisplay.key);\n    const selectField = _.find(selectDisplay.items, 'selectField');\n\n    return schema && schema.type === 'array' ?\n      service.setupArraySelectDisplay(selectDisplay, selectField) :\n      service.setupSelectDisplay(selectDisplay, selectField);\n  }\n\n  function setupArraySelectDisplay(selectDisplay, selectField) {\n    const service = this;\n    // band-aid because this is being set as an object instead of array somwhere\n    // deep in the angular or angular-schema-form nether-regions\n    const linkModel = service.parseExpression(selectDisplay.link, service.model);\n    if(!linkModel.get()) linkModel.set([]);\n\n    _.each(selectDisplay.items, item => {\n      if(item.selectField === true) return;\n\n      const key = _.isArray(item.key) ? item.key : ObjectPath.parse(item.key);\n      const featureKey = _.last(key);\n\n      item.showFeature = index => {\n        const features =\n              service\n              .parseExpression(`model.${selectDisplay.link}[${index}].features`)\n              .get();\n        const show =\n              features &&\n              features\n              .includes(featureKey);\n        return show;\n      };\n\n      const condition = `form.showFeature(arrayIndex)`;\n      item.condition = item.condition ?\n        `(${item.condition}) && ${condition}` : condition;\n    });\n    // handle legacy objects that don't have values set in the selectField\n    var model = service.parseExpression(service.getKey(selectDisplay.key), service.model).get();\n    _.each(selectDisplay.items, function(item) {\n      var key = service.getKey(item.key);\n      var selectKey = service.getKey(selectField.key);\n      if(key === selectKey) return;\n      _.each(model, function(elem, i) {\n        var indexedKey = service.setArrayIndex(key, i);\n        var splitIndexedKey = ObjectPath.parse(indexedKey);\n        var indexedSelectKey = service.setArrayIndex(selectKey, i);\n        var selectModel = service.parseExpression(indexedSelectKey, service.model);\n        var selectValue = selectModel.get();\n        var itemValue = service.parseExpression(indexedKey, service.model).get();\n        if(itemValue && !_.includes(selectValue, splitIndexedKey[splitIndexedKey.length - 1])) {\n          if(!selectValue) {\n            selectValue = [];\n          }\n          selectValue.push(splitIndexedKey[splitIndexedKey.length - 1]);\n          selectModel.set(selectValue);\n        }\n      });\n    });\n    // handle new objects with values set in defaults\n    var defaults = service.getSchema(selectDisplay.key).default;\n    _.each(defaults, function(elem, i) {\n      var selectKey = service.getKey(selectField.key);\n      var indexedSelectKey = service.setArrayIndex(selectKey, i);\n      var selectModel = service.parseExpression(indexedSelectKey, service.model);\n      var selectValue = selectModel.get();\n      _.each(elem, function(val, key) {\n        if(!selectValue) {\n          selectValue = [];\n        }\n        selectValue.push(key);\n        selectModel.set(selectValue);\n      });\n    });\n  }\n\n  function setupSelectDisplay(selectDisplay, selectField) {\n    const service = this;\n    const selectFieldKey = service.getKey(selectField.key);\n\n    _.each(selectDisplay.items, item => {\n      if(item.selectField === true) return;\n\n      const key = _.isArray(item.key) ? item.key : ObjectPath.parse(item.key);\n      const featureKey = _.last(key);\n\n      item.showFeature = () => {\n        const features =\n              service\n              .parseExpression(`model.${selectFieldKey}`)\n              .get();\n        const show =\n              features &&\n              features\n              .includes(featureKey);\n        return show;\n      };\n\n      const condition = `form.showFeature()`;\n      item.condition = item.condition ?\n        `(${item.condition}) && ${condition}` : condition;\n    });\n    // handle legacy objects that don't have values set in the selectField\n    var selectKey = service.getKey(selectField.key);\n    var selectModel = service.parseExpression(selectKey, service.model);\n    var selectValue = selectModel.get();\n    _.each(selectDisplay.items, function(item) {\n      var key = service.getKey(item.key);\n      if(selectKey === key) return;\n      var splitKey = ObjectPath.parse(key);\n      var itemValue = service.parseExpression(key, service.model).get();\n      if(itemValue && !_.includes(selectValue, splitKey[splitKey.length - 1])) {\n        if(!selectValue) {\n          selectValue = [];\n        }\n        selectValue.push(splitKey[splitKey.length - 1]);\n        selectModel.set(selectValue);\n      }\n    });\n    // handle new objects with values set in the defaults\n    var defaults = service.getSchema(selectDisplay.key).default;\n    _.each(defaults, function(val, key) {\n      if(!selectValue) {\n        selectValue = [];\n      }\n      selectValue.push(key);\n      selectModel.set(selectValue);\n    });\n    // set default values here\n    var model = service.parseExpression(selectDisplay.key, service.model);\n    if(defaults && !model.get()) {\n      model.set(defaults);\n    }\n  }\n\n  function setupSchemaRefresh(refresh) {\n    const service = this;\n    service.refreshSchema = _.debounce(updateSchema => {\n      const params = {\n        ...cnFlexFormConfig.getStateParams(service.getParamOverrides()),\n        ...service.params\n      };\n      let diff = _.omit(cnUtil.diff(service.schema.params, params, true), 'updates');\n      let keys;\n\n      if(!_.isEmpty(diff) || updateSchema) {\n        if(updateSchema) params.updateSchema = updateSchema;\n        else {\n          keys = _.keys(diff);\n\n          if(keys.length > 1) {\n            diff = _.omit(diff, _.isNull);\n            keys = _.keys(diff);\n          }\n\n          params.updateSchema = _.first(keys);\n        }\n\n        if(!params.updateSchema) {\n          diff = cnUtil.diff(params, _.omit(service.schema.params, ['updateSchema', 'updates']));\n          keys = _.keys(diff);\n\n          params.updateSchema = _.first(keys);\n        }\n\n        refresh(params).then(function(schema) {\n          service.incrementUpdates();\n          //service.updateSchema(schema);\n          service.processUpdatedSchema(schema);\n        });\n      }\n    }, 100);\n\n    service.refreshData = _.debounce(function() {\n      refresh(_.extend(service.schema.params, {updateSchema: 'refreshData'}))\n        .then(function(schema) {\n          service.processUpdatedSchema(schema);\n        });\n    }, 100);\n\n    service.events.push(service.scope.$on('ffRefreshData', service.refreshData));\n  }\n\n  function processUpdatedSchema(schema) {\n    var service = this;\n    if(schema.diff) {\n      service.schema.params = schema.params;\n      if (cnFlexFormConfig.onProcessDiff) {\n        cnFlexFormConfig.onProcessDiff(schema)\n      }\n\n      if(schema.diff.data) {\n        service.scope.$broadcast('cnFlexFormDiff:data', schema.diff.data);\n        _.each(schema.diff.data, (data, prop) => {\n          if(data && data.data && !_.isEmpty(service.schema.data[prop].data) && !data.reset) {\n            data.data = service.schema.data[prop].data.concat(data.data);\n          }\n          service.schema.data[prop] = data;\n          if(service.resolveRegister[prop]) {\n            _.each(service.resolveRegister[prop], (registers) => {\n              registers.forEach(register => {\n                service.handleResolve(register.field, register.prop, register.exp);\n              });\n            });\n          }\n        });\n      }\n\n      const keys = [];\n\n      if(schema.diff.schema) {\n        service.scope.$broadcast('cnFlexFormDiff:schema', schema.diff.schema);\n        _.each(schema.diff.schema, function(schema, key) {\n          reprocessSchema(schema, key, keys);\n          const curKeys = _.filter(keys, k => _.startsWith(k, key));\n          _.each(curKeys, key => {\n            const forms = _.compact([\n              service.getFromFormCache(key),\n              ...(service.getArrayCopies(key) || [])\n            ])\n            _.each(forms, form => {\n              const prevSchema = form.schema;\n              const newSchema  = service.getSchema(key, { [schema.key]: schema });\n              if(prevSchema.readonly && !newSchema.readonly) form.readonly = false;\n            });\n          });\n          service.schema.schema.properties[key] = schema;\n        });\n      }\n\n      if(schema.diff.form) {\n        service.scope.$broadcast('cnFlexFormDiff:form', schema.diff.form);\n        _.each(schema.diff.form, (form, key) => {\n\n          if(!keys.includes(key)) {\n            keys.push(key);\n          }\n\n          // don't want to override key when extending cached objects\n          //var key = form.key;\n          //delete form.key;\n\n          _.each(\n            service.getFormsToProcess(key),\n            (copy) => copy && service.reprocessField(copy, form)\n          );\n        });\n      }\n\n      if(keys.length) {\n        _.each(keys, (key) => {\n          _.each(\n            service.getFormsToProcess(key),\n            (copy) => copy && service.processField(copy)\n          );\n        });\n      }\n\n      service.broadcastErrors();\n    }\n    else {\n      service.updateSchema(schema);\n    }\n  }\n\n  function getFormsToProcess(key) {\n    const service = this;\n    const [ , arrayIndex ] = key.match(/\\[(\\d)+]/) || [];\n    const copies = service.getArrayCopies(key.replace(/\\[\\d+]/g, '[]'));\n    if(_.isUndefined(arrayIndex)) {\n      const cached = service.getFromFormCache(key);\n      return [ cached, ...copies ];\n    }\n    return [ copies[arrayIndex] ];\n  }\n\n  function reprocessField(current, update, isChild) {\n    const service = this;\n    const key = service.getKey(current.key);\n\n    // other logic in the service will add conition = 'true' to force\n    // condition to eval true, so we set the update condition to 'true'\n    // before comparing\n    if(!update.condition && current.condition) update.condition = 'true';\n    let redraw = !isChild && current.condition !== update.condition;\n\n    _.extend(current, _.omit(update, 'items', 'key'));\n\n    current._ogKeys.forEach((prop) => {\n      if(!update[prop]) {\n        delete current[prop];\n      }\n    });\n    current._ogKeys = getOgKeys(update);\n\n    //service.deregisterHandlers(key);\n\n    service.scope.$broadcast('cnFlexFormReprocessField', key);\n\n    // why do we redraw? If we're doing it to show error message\n    // that has been addressed from the angular-schema-form library\n    // if there's another issue, try triggering the specific action required\n    // instead of redrawing the whole form\n    if(redraw && current.redraw) {\n      console.log('TODO: see if this can be removed');\n      current.redraw();\n    }\n  }\n\n  function reprocessSchema(schema, key, keys) {\n    keys.push(key);\n    if(schema.properties) {\n      _.each(schema.properties, function(schema, subKey) {\n        reprocessSchema(schema, key + '.' + subKey, keys);\n      });\n    }\n    if(schema.items && schema.items.properties) {\n      _.each(schema.properties, function(schema, subKey) {\n        reprocessSchema(schema, key + '[].' + subKey, keys);\n      });\n    }\n  }\n\n  function getDotKey(key) {\n    return (_.isString(key) ? ObjectPath.parse(key) : key).join('.');\n  }\n\n  function buildError(field) {\n    return {\n      key: getDotKey(field.key),\n      message: field.error\n    };\n  }\n\n  function broadcastErrors() {\n    var service = this;\n    $timeout(function() {\n      if (_.get(service, 'errors')) {\n        service.errors.forEach(function(error) {\n          service.scope.$broadcast('schemaForm.error.' + error.key, 'serverValidation', error.message);\n        });\n      }\n    }, 1);\n  }\n\n  function replaceArrayIndex(resolve, key) {\n    while(resolve.includes('arrayIndex')) {\n      if(_.isNumber(key)) return resolve.replace(/arrayIndex/g, key);\n      const arrayIndexKey = /([^.[]*)\\[arrayIndex\\]/.exec(resolve);\n      const re = new RegExp(arrayIndexKey[1] + '\\\\[(-?\\\\d+)\\\\]');\n      const index = re.exec(key);\n      if(!index) return resolve;\n      resolve = resolve.replace(new RegExp(arrayIndexKey[0].replace(/(\\[|\\])/g, '\\\\$1'), 'g'), index[0]);\n    }\n    return resolve;\n  }\n\n  function getArrayIndex(key) {\n    if(_.isObject(key)) {\n      return _.find(key.key, function(key) {\n        return _.isNumber(key);\n      });\n    }\n    return /\\[(\\d*)\\]/.exec(key)[1];\n  }\n\n  function setArrayIndex(key, index, asArray) {\n    const service = this;\n    let keyCopy;\n    if (!_.isArray(index)) {\n      index = [index];\n    }\n    if(_.isString(key)) {\n      keyCopy = ObjectPath.parse(key);\n    } else {\n      keyCopy = _.clone(key);\n    }\n    while (index.length && keyCopy.indexOf('') > -1) {\n      let indexOfIndex = keyCopy.indexOf('');\n      keyCopy[indexOfIndex] = index.shift();\n    }\n    if(asArray) {\n      return keyCopy;\n    } else {\n      return service.getKey(keyCopy);\n    }\n  }\n\n  function cleanup() {\n    var service = this;\n    _.each(service.events, function(listener) {\n      listener();\n    });\n  }\n\n  function incrementUpdates() {\n    const service =  this;\n    ++service.updates;\n    service.params.updates = service.updates;\n  }\n}\n\n//angular\n    //.module('cn.flex-form')\n    //.provider('cnFlexFormService', cnFlexFormServiceProvider);\n\nexport default cnFlexFormServiceProvider;\n\n\n\n// WEBPACK FOOTER //\n// ./src/cn-flex-form.service.js","module.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash\"\n// module id = 6\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"objectpath\"\n// module id = 7\n// module chunks = 0","const modalMap = {};\nconst promiseMap = {};\n\nfunction getPromises(state) {\n  if(promiseMap[state]) return promiseMap[state];\n\n  const promise = {};\n  promiseMap[state] = promise;\n  return promise;\n}\n\nfunction getPromise(state, id, $q) {\n  const promises = getPromises(state);\n  if(promises[id]) return promises[id];\n\n  const promise = $q.defer();\n  promises[id] = promise;\n  return promise;\n}\n\nfunction cnFlexFormModalLoaderServiceProvider() {\n\n  return {\n    addMapping,\n    $get: cnFlexFormModalLoaderService\n  };\n\n  ////////////\n\n  function addMapping(state, def) {\n    def.resolve = { parent };\n    modalMap[state] = def;\n  }\n\n  function parent($stateParams, $q) {\n    'ngInject';\n\n    return (\n      getPromise($stateParams.modal, $stateParams.modalId, $q)\n      .promise\n      .then(({ parent }) => parent)\n    );\n  }\n}\n\nfunction cnFlexFormModalLoaderService($stateParams, $q) {\n  'ngInject';\n\n  return {\n    getMapping,\n    resolveMapping,\n    removeMapping\n  };\n\n  /////////////\n\n  function resolveMapping(state, id, parent, options = {}) {\n    const { scope } = options;\n    if(scope) {\n      scope.options = scope.options || {};\n      scope.options.destroyStrategy = 'retain';\n      modalMap[state].scope = scope;\n    }\n    const d = getPromise(state, id, $q);\n    d.resolve({ parent, options });\n    return d.promise;\n  }\n\n  function getMapping(state) {\n    const d = $q.defer();\n    getPromise($stateParams.modal, $stateParams.modalId, $q)\n      .promise\n      .then(({ parent, options }) => {\n        d.resolve({ state: modalMap[state], options });\n        return parent;\n      });\n    return d.promise;\n  }\n\n  // Holding on to scope references creates memory leaks\n  function removeMapping(state) {\n    modalMap[state] = null;\n    promiseMap[state] = null;\n  }\n}\n\nexport default cnFlexFormModalLoaderServiceProvider;\n\n\n\n// WEBPACK FOOTER //\n// ./src/cn-flex-form-modal-loader.service.js","function FlexFormModalLoader(FlexFormModal, $state, $rootScope, $stateParams, $scope) {\n  'ngInject';\n\n  function FFModalLoaderTag() {}\n  $scope.__tag = FFModalLoaderTag();\n\n  const vm = this;\n\n  activate();\n\n  //////////\n\n  function activate() {\n    FlexFormModal\n      .open(vm)\n      .then(({ modal, options: { onDismiss, onAfterDismiss } }) => {\n        vm.modal = modal;\n        vm.modal.result.finally(goBack);\n\n        if(onDismiss) vm.modal.result.catch(() => onDismiss($stateParams.restParams));\n        vm.dismissEvent = $rootScope.$on('$stateChangeStart', dismissModal);\n      });\n  }\n\n  function goBack() {\n    if(!$state.transition) {\n      $state.go('^');\n    }\n  }\n\n  function dismissModal() {\n    // unbind event\n    vm.dismissEvent();\n    vm.modal.opened.then(() =>\n        vm.modal.dismiss()\n    );\n  }\n}\n\nfunction FlexFormModal(cnFlexFormModalLoaderService, $uibModal, $stateParams) {\n  'ngInject';\n\n  return { open };\n\n  ////////////\n\n  function open() {\n    return (\n      cnFlexFormModalLoaderService\n        .getMapping($stateParams.modal)\n        .then(({ state, options }) => ({\n          modal: $uibModal.open(state),\n          options\n        }))\n    );\n  }\n\n}\n\nexport { FlexFormModalLoader, FlexFormModal };\n\n\n\n// WEBPACK FOOTER //\n// ./src/cn-flex-form-modal-loader.js","function cnFlexForm() {\n  return {\n    restrict: 'E',\n    template: `\n      <div ng-if=\"vm.showForm()\">\n        <!-- we process defaults ourselves, hence setSchemaDefaults: false -->\n        <ng-form\n          class=\"clearfix\"\n          name=\"{{vm.formName}}\"\n          sf-options=\"{ setSchemaDefaults: false }\"\n          sf-schema=\"vm.config.schema.schema\"\n          sf-form=\"vm.form\"\n          sf-model=\"vm.model\">\n        </ng-form>\n        <!-- debug panel to display model -->\n        <section ng-if=\"vm.debug\">\n          <json-explorer json-data=\"vm.model || '...model not loaded yet'\"/>\n        </section>\n      </div>\n    `,\n    scope: {\n      config: '=ffConfig',\n      model: '=ffModel',\n      formIndex: '=ffFormIndex',\n      formName: '=ffFormName',\n      delayForm: '=ffDelayForm',\n      cleanupEvent: '=ffCleanupEvent'\n    },\n    controller: FlexForm,\n    controllerAs: 'vm',\n    bindToController: true\n  };\n}\n\nfunction FlexForm(cnFlexFormService, $scope, $location) {\n  'ngInject';\n\n  function cnFlexFormTag() {}\n  $scope.__tag = new cnFlexFormTag();\n\n  var vm = this;\n  vm.service = undefined;\n  vm.events = [];\n\n  vm.activate = activate;\n  vm.cleanup = cleanup;\n  vm.process = process;\n  vm.showForm = showForm;\n\n  vm.events.push($scope.$watch(() => vm.config.schema, vm.process));\n\n  vm.activate();\n\n  $scope.$on(vm.cleanupEvent || '$destroy', vm.cleanup);\n\n  //////////\n\n  function activate() {\n    if(angular.isNumber(vm.formIndex)) {\n      vm.form = vm.config.schema.forms[vm.formIndex].form;\n    }\n    else {\n      vm.form = vm.config.schema.form;\n    }\n\n    // debug\n    if($location.search().debug) {\n      vm.debug = true;\n    }\n  }\n\n  function process(cur, prev) {\n    if(vm.form) {\n      if(!vm.service) {\n        vm.service = cnFlexFormService(vm.config.schema, vm.model, {\n          getScope: vm.config.getScope || (() => $scope),\n          formCtrl: vm.config.formCtrl,\n          getSchema: vm.config.getSchema,\n          updateSchema: updateSchema\n        });\n      }\n      else {\n        vm.service.compile(vm.config.schema, vm.model, vm.config);\n      }\n    }\n  }\n\n  function showForm() {\n    return !vm.delayForm && vm.service && vm.service.isCompiled();\n  }\n\n  function updateSchema(schema) {\n    vm.config.schema = schema;\n    vm.activate();\n  }\n\n  function cleanup() {\n    _.each(vm.events, function(listener) {\n      listener();\n    });\n\n    cnFlexFormService.destroyService(vm.service);\n  }\n\n}\n\nexport default cnFlexForm;\n\n\n\n// WEBPACK FOOTER //\n// ./src/cn-flex-form.directive.js","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 11\n// module chunks = 0","function cnFlexFormHeader() {\n  return {\n    restrict: 'E',\n    scope: {\n      config: '=ffHeaderConfig',\n      submit: '&ffSubmit',\n      loadOffscreen: '&ffLoadOffscreen'\n    },\n    controller: FlexFormHeader,\n    bindToController: true,\n    controllerAs: 'vm',\n    template: `\n        <div class=\"col-md-6\">\n          <h5 ng-if=\"vm.title.lead\">{{::vm.title.lead}}</h5>\n          <h1>\n            <i ng-show=\"vm.title.icon\" class=\"{{vm.title.icon}}\"/>\n            {{vm.title.main}}\n          </h1>\n          <h5 ng-if=\"vm.title.sub\">{{::vm.title.sub}}</h5>\n        </div>\n        <div class=\"{{vm.buttonContainerClass || 'page-action-btns'}}\">\n          <div class=\"btn-options\"\n               ng-mouseover=\"vm.loadOffscreen()\">\n            <a class=\"btn btn-{{vm.returnStyle ? vm.returnStyle : 'default-dark'\"\n               ng-if=\"vm.returnState\"\n               ui-sref=\"{{vm.returnState}}\">\n              {{vm.returnText || 'Cancel'}}\n            </a>\n            <a class=\"btn btn-{{vm.closeButton.style ? vm.closeButton.style : 'default-dark'}}\"\n               ng-if=\"vm.closeButton\"\n               ng-click=\"vm.closeButton.handler()\">\n               Cancel\n            </a>\n            <span ng-repeat=\"button in vm.actions\">\n              <span ng-class=\"{'btn-group': button.options}\">\n                <a class=\"btn {{button.style ? 'btn-'+button.style : ($index === vm.actions.length - 1 ? 'btn-primary' : 'btn-default-dark')}}\"\n                   ng-disabled=\"vm.isDisabled(button)\"\n                   ng-click=\"vm.submit({handler: button.handler})\"\n                   uib-tooltip=\"{{button.helptext}}\"\n                   uib-tooltip-placement=\"bottom\"\n                   ng-bind-html=\"button.text || 'Save'\">\n                </a>\n                <a class=\"btn {{button.style ? 'btn-'+button.style : ($index === vm.actions.length - 1 ? 'btn-primary' : 'btn-default-dark')}} dropdown-toggle\"\n                        ng-disabled=\"vm.isDisabled(button)\"\n                        ng-show=\"button.options\"\n                        data-toggle=\"dropdown\">\n                  <span class=\"caret\"></span>\n                </a>\n                <ul class=\"dropdown-menu\" ng-if=\"button.options\">\n                  <li ng-repeat=\"option in button.options\"\n                      ng-disabled=\"vm.isDisabled(option)\">\n                    <a ng-click=\"vm.submit({handler: option.handler})\"\n                       ng-bind-html=\"option.text\">\n                    </a>\n                  </li>\n                </ul>\n              </span>\n            </span>\n          </div>\n          <p class=\"data-updated-at text-right\"\n             id=\"data-updated-at\"\n             ng-hide=\"vm.config.noData\">\n            <a ng-click=\"vm.updateData()\">Update Data</a>\n          </p>\n        </div>`\n  };\n}\n\nfunction FlexFormHeader($scope) {\n  'ngInject';\n\n  function ffHeaderTag() {}\n  $scope.__tag = new ffHeaderTag();\n\n  const vm = this;\n\n  vm.updateData = updateData;\n  vm.isDisabled = isDisabled;\n\n  //activate();\n  //$scope.$on('$destroy', cleanup);\n  $scope.$watch('vm.config.title', initTitle, true);\n  $scope.$watch('vm.config.actionConfig', initActionConfig, true);\n\n  ///////////\n\n  function initTitle() {\n    ({ title: vm.title } = vm.config);\n  }\n\n  function initActionConfig() {\n    ({\n      returnState: vm.returnState,\n      returnStyle: vm.returnStyle,\n      returnText: vm.returnText,\n      closeButton: vm.closeButton,\n      actions: vm.actions\n    } = vm.config.actionConfig || {});\n  }\n\n  function updateData() {\n    // $scope.$emit('ffRefreshData');\n    // this component will often be siblings to the flex forms one,\n    // so need to broadcast from shared parent...yes it's ugly\n    $scope.$parent.$parent.$broadcast('ffRefreshData');\n  }\n\n  function isDisabled(btnConfig) {\n    if(vm.config.isDisabled) return vm.config.isDisabled(btnConfig);\n    return false;\n  }\n}\n\nexport default cnFlexFormHeader;\n\n\n\n// WEBPACK FOOTER //\n// ./src/cn-flex-form-header.directive.js","function ffValidate() {\n  return {\n    restrict: 'A',\n    scope: { form: '=ffValidate' },\n    require: 'ngModel',\n    link: link\n  };\n}\n\nfunction link($scope, elem, attrs, ngModel) {\n  function ffValidateTag() {}\n  $scope.__tag = new ffValidateTag();\n\n  if($scope.form && $scope.form.required) {\n    $scope.$watch(function() { return ngModel.$viewValue; }, function(value) {\n      // override schemaForm validation\n      ngModel.$setValidity('schemaForm', true);\n      ngModel.$setValidity('tv4-302', value);\n    });\n  }\n}\n\nexport default ffValidate;\n\n\n\n// WEBPACK FOOTER //\n// ./src/cn-flex-form-validate.directive.js"],"sourceRoot":""}