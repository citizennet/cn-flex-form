{"version":3,"sources":["all.min.js","_cn-flex-form.module.js","cn-flex-form-config.service.js","cn-flex-form-header.directive.js","cn-flex-form-modal-loader.js","cn-flex-form-modal-loader.service.js","cn-flex-form-types.service.js","cn-flex-form-validate.directive.js","cn-flex-form.directive.js","cn-flex-form.routes.js","cn-flex-form.service.js","sandbox.js","schema-form-extensions.js"],"names":["angular","module","cnFlexFormConfigProvider","addIgnoreParam","param","ignoreParams","push","cnFlexFormConfig","$stateParams","getStateParams","_","chain","omit","v","isUndefined","isNull","value","$inject","$get","provider","cnFlexFormHeader","restrict","scope","config","submit","loadOffscreen","controller","FlexFormHeader","bindToController","controllerAs","template","$scope","updateData","console","log","$emit","isDisabled","btnConfig","vm","this","directive","FlexFormModalLoader","FlexFormModal","$state","$rootScope","activate","modal","open","result","goBack","dismiss","$on","dismissModal","go","arguments","cnFlexFormModalLoaderService","$modal","openModal","currentModal","getMapping","instance","factory","getPromises","state","promises","promiseMap","getPromise","id","$q","promise","defer","cnFlexFormModalLoaderServiceProvider","addMapping","def","resolve","parent","modalMap","modalId","resolveMapping","d","service","cnFlexFormTypesProvider","registerFieldType","fieldType","fieldTypeRegister","unshift","cnFlexFormTypes","getFieldType","field","i","l","length","condition","type","schema","includes","titleMap","titleMapResolve","titleMapQuery","format","ffValidate","form","require","link","elem","attrs","ngModel","required","$watch","$viewValue","$setValidity","cnFlexForm","model","formIndex","formName","delayForm","cleanupEvent","FlexForm","cnFlexFormService","$location","isNumber","forms","search","debug","process","cur","prev","isCompiled","compile","formCtrl","getSchema","updateSchema","showForm","cleanup","each","events","listener","undefined","cnFlexFormRoutesProvider","$stateProvider","addStates","options","name","url","permissions","cnFlexFormRoutes","templateUrl","cnFlexFormServiceProvider","schemaFormDecoratorsProvider","registerField","handler","fieldTypeHandlers","createDirective","CNFlexFormService","Api","$parse","sfPath","$interpolate","$timeout","cnUtil","CNFlexFormConstructor","services","CNFlexForm","window","arrayCopies","arrayListeners","dataCache","defaults","errors","formCache","listeners","resolveRegister","updates","params","setupConfig","processField","bind","initModelWatch","initArrayCopyWatch","broadcastErrors","setValue","compiled","getSchemaForm","setupSchemaRefresh","processSchema","getSchemaType","isArray","first","processDefault","key","getKey","parseExpression","modelValue","get","equals","set","copy","processFieldset","fieldset","items","collapsible","toggleCollapse","collapsed","render","selectDisplay","processSelectDisplay","_ogKeys","without","keys","addToFormCache","description","readonly","processResolve","watch","processFieldWatch","processSection","processComponent","isString","isFunction","call","registerHandler","error","buildError","isEmpty","ngModelOptions","allowInvalid","find","reject","$broadcast","reduce","total","next","test","depth","parse","properties","matchArray","match","shift","slice","dataProp","fieldProp","handleResolve","resolveType","registerResolve","exp","data","cursor","loadMore","refreshSchema","fieldKey","register","prop","resolution","functionCondition","isConditionFunction","parsedCondition","parseCondition","adjustment","date","replace","trim","math","operator","+","-","*","/","adjuster","updatePath","fromPath","replaceArrayIndex","update","from","moment","add","toDate","eval","p","floor","ceil","round","path","initialize","original","invert","functionName","functionArgument","predicate","arr","comparator","comparisonValue","evaluation","forEach","val","evaluatePredicate","toString","val1","val2","runHandler","isObject","arrMatch","registerArrayHandlers","handlers","arrKey","onArray","lastKey","deregisterHandlers","arrVal","deregisterArrayHandlers","item","watching","modelWatch","onModelWatch","initSchemaParams","firstUpdate","cleanModel","prevParams","event","index","parseInt","addArrayCopy","copies","getArrayCopiesFor","list","splice","getArrayCopies","keyStart","copiesList","getFromFormCache","addToDataCache","getFromDataCache","start","section","component","htmlClass","cols","processCurrency","currencyFormat","currency-dollars","currency-microcents","currency","processPercentage","processReusable","view","processMediaUpload","processCsvUpload","processRadiobuttons","radios","fullWidth","btnClass","divide","processDate","processSelect","select","getTitleMap","onInit","setter","newVal","valueProperty","q","titleQuery","minLookup","isDefined","default","onAdd","detailedList","selectionStyle","maxItems","displayFormat","itemFormatter","processTemplate","$setDirty","processToggle","toggle","processHelp","help","processDisplay","display","getDisplay","tpl","parseScope","processor","arrayIndex","map","selectField","setupArraySelectDisplay","setupSelectDisplay","getArrayIndex","selectKey","splitKey","ObjectPath","indexedSelectKey","setArrayIndex","selectValue","formCopies","indexedKey","splitIndexedKey","selectModel","itemValue","count","keyMap","pluck","once","resetCount","refresh","debounce","extend","diff","then","processUpdatedSchema","refreshData","reset","concat","registers","reprocessSchema","indexOf","cached","reprocessField","current","isChild","redraw","subKey","message","arrayIndexKey","exec","re","RegExp","asArray","keyCopy","clone","indexOfIndex","prototype","cn-radiobuttons","cn-autocomplete","cn-datetimepicker","cn-display","cn-currency","cn-percentage","cn-mediaupload","cn-csvupload","cn-reusable","cn-toggle","FlexFormSandbox","onSchema","schemaStr","fromJson","schemaFormConfig","extensions","extension","addTemplates","$templateCache","put","sharedAutocompleteTpl","run"],"mappings":"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","file":"all.min.js","sourcesContent":["\"use strict\";!function(){angular.module(\"cn.flex-form\",[\"ui.router\",\"schemaForm\",\"ui.bootstrap.datetimepicker\",\"cnTagsInput\",\"cn.util\"])}(),function(){function e(){function e(e){t.push(e)}function r(e){function r(){return _.chain(e).omit(t).omit(function(e){return _.isUndefined(e)||_.isNull(e)}).value()}return{getStateParams:r,ignoreParams:t}}r.$inject=[\"$stateParams\"];var t=[\"page\",\"debug\",\"sandbox\",\"modal\",\"modalId\"];return{addIgnoreParam:e,$get:r}}angular.module(\"cn.flex-form\").provider(\"cnFlexFormConfig\",e)}(),function(){function e(){return{restrict:\"E\",scope:{config:\"=ffHeaderConfig\",submit:\"&ffSubmit\",loadOffscreen:\"&ffLoadOffscreen\"},controller:r,bindToController:!0,controllerAs:\"vm\",template:'          <div class=\"col-md-6\">            <h5 ng-if=\"vm.config.title.lead\">{{::vm.config.title.lead}}</h5>            <h1>{{vm.config.title.main}}</h1>            <h5 ng-if=\"vm.config.title.sub\">{{::vm.config.title.sub}}</h5>          </div>          <div class=\"{{vm.config.buttonContainerClass || \\'page-action-btns\\'}}\">            <div class=\"btn-options\"                 ng-mouseover=\"vm.loadOffscreen()\">              <a class=\"btn\"                 ng-if=\"vm.config.actionConfig.returnState\"                 ui-sref=\"{{vm.config.actionConfig.returnState}}\">                {{vm.config.actionConfig.returnText || \\'Cancel\\'}}              </a>              <span ng-repeat=\"button in vm.config.actionConfig.actions\">                <a class=\"btn {{button.style && \\'btn-\\'+button.style}}\"                   ng-disabled=\"vm.isDisabled(button)\"                   ng-class=\"{\\'btn-primary\\': $index === vm.config.actionConfig.actions.length - 1}\"                   ng-click=\"vm.submit({ handler: button.handler})\"                   tooltip=\"{{button.helptext}}\"                   tooltip-placement=\"bottom\">                  {{button.text || \\'Save\\'}}                </a>              </span>            </div>            <p class=\"data-updated-at text-right\"               id=\"data-updated-at\"               ng-hide=\"vm.config.noData\">              <a ng-click=\"vm.updateData()\">Update Data</a>            </p>          </div>'}}function r(e){function r(){console.log(\"updateData:\",r),e.$emit(\"ffRefreshData\")}function t(e){return o.config.isDisabled?o.config.isDisabled(e):!1}var o=this;o.updateData=r,o.isDisabled=t}angular.module(\"cn.flex-form\").directive(\"cnFlexFormHeader\",e),r.$inject=[\"$scope\"]}(),function(){function e(e,r,t,o){function a(){i.modal=e.open(i),i.modal.result[\"finally\"](s),i.dismiss=t.$on(\"$stateChangeStart\",n)}function s(){r.go(\"^\")}function n(){console.log(\"dismissModal:\",arguments),i.dismiss(),i.modal.dismiss()}var i=this;console.log(\"FlexFormModalLoader:\",o.modal),a()}function r(e,r,t){function o(){var o=e.getMapping(t.modal);return console.log(\"currentModal:\",o),this.modal=r.open(o),this.modal}var a={open:o};return a}angular.module(\"cn.flex-form\").controller(\"FlexFormModalLoader\",e).factory(\"FlexFormModal\",r),e.$inject=[\"FlexFormModal\",\"$state\",\"$rootScope\",\"$stateParams\"],r.$inject=[\"cnFlexFormModalLoaderService\",\"$modal\",\"$stateParams\"]}(),function(){function e(e){var r=s[e];return r||(r={},s[e]=r),r}function r(r,t,o){var a=e(r),s=a[t];return s||(s=o.defer(),a[t]=s),s}function t(){function e(e,r){r.resolve={parent:t},a[e]=r}function t(e,t){return r(e.modal,e.modalId,t).promise}var s={addMapping:e,$get:o};return t.$inject=[\"$stateParams\",\"$q\"],s}function o(e){function t(t,o,a){var s=r(t,o,e);return s.resolve(a),s.promise}function o(e){return a[e]}var s={getMapping:o,resolveMapping:t};return s}angular.module(\"cn.flex-form\").provider(\"cnFlexFormModalLoaderService\",t);var a={},s={};o.$inject=[\"$q\"]}(),function(){function e(){function e(e){t.unshift(e)}function r(){function e(e){for(var r=0,o=t.length;o>r;r++)if(t[r].condition(e))return t[r].type;return e.type||e.schema&&e.schema.type}return{fieldTypeRegister:t,getFieldType:e}}var t=[{condition:function(e){return\"hidden\"===e.type},type:\"hidden\"},{condition:function(e){return e.type.includes(\"radios\")},type:\"cn-radios\"},{condition:function(e){return e.type.includes(\"radiobuttons\")},type:\"cn-radiobuttons\"},{condition:function(e){return e.type.includes(\"autocomplete\")||e.titleMap||e.titleMapResolve||e.titleMapQuery},type:\"cn-autocomplete\"},{condition:function(e){return\"cn-datetimepicker\"===e.type||\"datetime-local\"===e.type},type:\"cn-datetimepicker\"},{condition:function(e){return\"help\"===e.type},type:\"help\"},{condition:function(e){return e.type.includes(\"display\")},type:\"cn-display\"},{condition:function(e){return e.schema&&e.schema.format&&e.schema.format.includes(\"currency\")},type:\"cn-currency\"},{condition:function(e){return e.schema&&\"percentage\"===e.schema.format},type:\"cn-percentage\"},{condition:function(e){return\"toggle\"===e.type||\"boolean\"===e.type},type:\"cn-toggle\"},{condition:function(e){return\"mediaupload\"===e.type},type:\"cn-mediaupload\"},{condition:function(e){return\"csvupload\"===e.type},type:\"cn-csvupload\"},{condition:function(e){return\"reusable\"===e.type},type:\"cn-reusable\"},{condition:function(e){return\"array\"===e.type},type:\"section\"}];return{registerFieldType:e,$get:r}}angular.module(\"cn.flex-form\").provider(\"cnFlexFormTypes\",e)}(),function(){function e(){return{restrict:\"A\",scope:{form:\"=ffValidate\"},require:\"ngModel\",link:r}}function r(e,r,t,o){e.form&&e.form.required&&e.$watch(function(){return o.$viewValue},function(e){o.$setValidity(\"schemaForm\",!0),o.$setValidity(\"tv4-302\",e)})}angular.module(\"cn.flex-form\").directive(\"ffValidate\",e)}(),function(){function e(){return{restrict:\"E\",template:'        <div ng-if=\"vm.showForm()\">          <ng-form name=\"{{vm.formName}}\"                sf-schema=\"vm.config.schema.schema\"                sf-form=\"vm.form\"                sf-model=\"vm.model\"></ng-form>          <!-- debug panel to display model -->          <pre ng-if=\"vm.debug\">{{vm.model|json}}</pre>        </div>      ',scope:{config:\"=ffConfig\",model:\"=ffModel\",formIndex:\"=ffFormIndex\",formName:\"=ffFormName\",delayForm:\"=ffDelayForm\",cleanupEvent:\"=ffCleanupEvent\"},controller:r,controllerAs:\"vm\",bindToController:!0}}function r(e,r,t){function o(){angular.isNumber(c.formIndex)?c.form=c.config.schema.forms[c.formIndex].form:c.form=c.config.schema.form,t.search().debug&&(c.debug=!0)}function a(r,t){c.form&&(c.service?(console.log(\"vm.service.isCompiled():\",c.service.isCompiled()),c.service.compile(c.config.schema,c.model)):c.service=e(c.config.schema,c.model,{formCtrl:c.config.formCtrl,getSchema:c.config.getSchema,updateSchema:n}))}function s(){return!c.delayForm&&c.service&&c.service.isCompiled()}function n(e){c.config.schema=e,c.activate()}function i(){_.each(c.events,function(e){e()}),c.service.cleanup()}var c=this;c.service=void 0,c.events=[],c.activate=o,c.cleanup=i,c.process=a,c.showForm=s,c.events.push(r.$watch(function(){return c.config.schema},c.process)),c.activate(),r.$on(c.cleanupEvent||\"$destroy\",c.cleanup)}angular.module(\"cn.flex-form\").directive(\"cnFlexForm\",e),r.$inject=[\"cnFlexFormService\",\"$scope\",\"$location\"]}(),function(){function e(e){function r(){}function t(r){e.state(r.name+\".page.modal\",{url:\"/~:modal/:modalId\",controller:\"FlexFormModalLoader\",controllerAs:\"vm\",permissions:r.permissions})}var o={addStates:t,$get:r};return o}function r(e){e.state(\"flex-form-sandbox\",{url:\"/flex-form/sandbox\",controller:\"FlexFormSandbox\",controllerAs:\"vm\",templateUrl:\"app/components/cn-flex-form/sandbox.html\"})}angular.module(\"cn.flex-form\").provider(\"cnFlexFormRoutes\",e).config(r),e.$inject=[\"$stateProvider\"],r.$inject=[\"$stateProvider\"]}(),function(){function cnFlexFormServiceProvider(e,r){function t(t){t.condition&&r.registerFieldType({condition:t.condition,type:t.type}),t.handler&&(fieldTypeHandlers[t.type]=t.handler),t.templateUrl&&(e.addMapping(\"bootstrapDecorator\",t.type,t.templateUrl),e.createDirective(t.type,t.templateUrl))}return{registerField:t,$get:CNFlexFormService}}function CNFlexFormService(Api,$parse,cnFlexFormConfig,cnFlexFormTypes,sfPath,$interpolate,$rootScope,$timeout,cnUtil,$stateParams){function CNFlexFormConstructor(e,r,t){var o;if(services.length)for(var a=0,s=services.length;s>a;a++)if(services[a].model===r){o=services[a],o.compile(e,r,t);break}return o||(o=new CNFlexForm(e,r,t),services.push(o)),o||new CNFlexForm(e,r,t)}function CNFlexForm(e,r,t){$stateParams.debug&&(window.services=services),this.arrayCopies={},this.arrayListeners={},this.dataCache={},this.defaults={},this.errors=[],this.events=[],this.formCache={},this.listeners={},this.resolveRegister={},this.model=r,this.updates=0,this.params=cnFlexFormConfig.getStateParams(),this._=_,this.compile(e,r,t)}function compile(e,r,t){var o=this;o.schema=e,o.model=r,o.isCompiled()||(o.setupConfig(t),e.forms?_.each(e.forms,function(e){_.each(e.form,o.processField.bind(o))}):_.each(e.form,o.processField.bind(o)),o.initModelWatch(),o.initArrayCopyWatch(),o.isCompiled(!0)),o.broadcastErrors()}function isCompiled(e){var r=this;return e&&(r.schema.compiled=e),r.schema&&r.schema.compiled}function setupConfig(e){var r=this;e&&(e.formCtrl&&(r.formCtrl=e.formCtrl),e.updateSchema&&(r.updateSchema=e.updateSchema),e.getSchema&&(r.getSchemaForm=r.setupSchemaRefresh(e.getSchema)))}function processSchema(e){var r=this,t=e.schema;t&&(e.getSchemaType=function(){return _.isArray(t.type)?_.first(t.type):t.type},r.processDefault(e))}function processDefault(e){var r=this,t=e.schema;if(t[\"default\"]){var o=r.getKey(e.key);if(r.updates){if(o.includes&&o.includes(\"[]\"))return;var a=r.parseExpression(e.key,r.model),s=a.get();(!r.defaults[o]||_.isUndefined(s)||angular.equals(s,r.defaults[o]))&&a.set(t[\"default\"])}r.defaults[o]=angular.copy(t[\"default\"])}}function processFieldset(e){var r=this;e.type=\"cn-fieldset\",_.each(e.items,r.processField.bind(r)),e.collapsible?(e.toggleCollapse=function(){e.collapsible&&(e.collapsed=!e.collapsed)},e.render=!e.collapsed):e.render=!0}function processField(e){var r=this;if(e.selectDisplay&&r.processSelectDisplay(e,r.getSchema(e.key)),\"fieldset\"===e.type)r.processFieldset(e);else{e._ogKeys||(e._ogKeys=_.without(_.keys(e),\"key\",\"htmlClass\"),console.log(\"field._ogKeys:\",e._ogKeys));var t=r.getKey(e.key);if(e.key&&(r.addToFormCache(e,t),e.schema=r.getSchema(t),e.schema&&(e.schema.description&&(e.description=e.schema.description),e.readonly&&!e.schema.readonly&&(e.readonly=!1))),r.processSchema(e),e.type||(e.type=e.getSchemaType&&e.getSchemaType()),e.resolve&&r.processResolve(e),e.watch&&r.processFieldWatch(e),\"section\"===e.type||\"tabarray\"===e.type)r.processSection(e);else if(\"component\"===e.type)r.processComponent(e);else{var o=cnFlexFormTypes.getFieldType(e),a=fieldTypeHandlers[o];_.isString(a)?r[a](e):_.isFunction(a)&&a.call(r,e),e.updateSchema&&r.registerHandler(e,null,e.updateSchema),e.error?(r.errors.push(r.buildError(e)),_.isEmpty(e.ngModelOptions)?e.ngModelOptions={allowInvalid:!0}:e.ngModelOptions.allowInvalid=!0):_.find(r.errors,{key:t})&&(r.errors=_.reject(r.errors,{key:t}),$rootScope.$broadcast(\"schemaForm.error.\"+t,\"schemaForm\",!0),$rootScope.$broadcast(\"schemaForm.error.\"+t,\"serverValidation\",!0))}}}function getKey(e){return _.isArray(e)&&(e=_.reduce(e,function(e,r){return/^(\\d*)$/.test(r)?e+\"[\"+r+\"]\":e+\".\"+r})),e}function getSchema(e,r){var t=this;if(e){e=t.getKey(e),e=sfPath.parse(e),r=r||t.schema.schema.properties;for(var o,a;e.length>1;)o=e[0],a=o.match(/\\[\\d*]$/),r=a?r[e.shift().slice(0,o.length-a[0].length)].items.properties:r[e.shift()].properties;return o=e[0],a=o.match(/\\[\\d*]$/),a?r[o.slice(0,o.length-a[0].length)].items:r[o]}}function processResolve(e){var r=this;return _.each(e.resolve,function(t,o){r.handleResolve(e,o,t);var a=t.match(/^(schema\\.data\\.|model\\.)(\\w+)/);a&&(\"schema.data.\"===a[1]?r.registerResolve(e,o,a[2]):\"model.\"===a[1]&&r.registerHandler(a[2],function(){r.handleResolve(e,o,t)}))}),e}function handleResolve(e,r,t){var o=this,a=o.parseExpression(t).get();a&&a.cursor?e.loadMore=function(){var e=t.match(/schema\\.data\\.(.+)/)[1];o.refreshSchema(\"data:\"+e+\":\"+a.cursor)}:delete e.loadMore,e[r]=a&&a.data?a.data:a}function registerResolve(e,r,t){var o=this,a=o.getKey(e.key);o.resolveRegister[t]=o.resolveRegister[t]||{};var s=o.resolveRegister[t];s[a]=s[a]||[],s[a].push({field:e,prop:r})}function processFieldWatch(field){var service=this,schema=field.schema;field.watch=_.isArray(field.watch)?field.watch:[field.watch],_.each(field.watch,function(watch){if(watch.resolution){var condition=watch.condition,functionCondition=service.isConditionFunction(condition),resolution=watch.resolution,handler;if(_.isFunction(resolution))handler=function(e,r){var t=functionCondition?service.parseCondition(functionCondition):condition;(!t||$parse(t)(service))&&resolution(e,r)};else{var adjustment={};adjustment.date=resolution.match(/\\+ ?(\\d+) days/),adjustment.date?(adjustment.date=adjustment.date[1],resolution=resolution.replace(adjustment.date,\"\").trim()):(adjustment.math=resolution.match(/(\\+|\\-|\\/|\\*) ?(\\S+)/),adjustment.math&&(adjustment.operator={\"+\":\"add\",\"-\":\"subtract\",\"*\":\"multiply\",\"/\":\"divide\"}[adjustment.math[1]],adjustment.adjuster=service.parseExpression(adjustment.math[2]))),resolution=resolution.match(/(\\S+) ?= ?(\\S+)/),handler=function handler(){var updatePath,fromPath;resolution[1].includes(\"arrayIndex\")&&(updatePath=replaceArrayIndex(resolution[1],arguments[2])),resolution[2].includes(\"arrayIndex\")&&(fromPath=replaceArrayIndex(resolution[2],arguments[2]));var update=service.parseExpression(updatePath||resolution[1]),from=service.parseExpression(fromPath||resolution[2]),parsedCondition=functionCondition?service.parseCondition(functionCondition,condition):condition;if(!parsedCondition||$parse(parsedCondition)(service))if(adjustment.date)update.set(moment(from.get()).add(adjustment.date,\"days\").toDate());else if(adjustment.math){var result=eval(from.get()+adjustment.math[1]+adjustment.adjuster.get());if(schema=schema||field.items&&(field.items[0].schema||field.items[0].items&&field.items[0].items[0].schema),\"cn-currency\"===field.type){var p=schema&&\"currency-dollars\"===schema.format?2:0;result=\"*\"===adjustment.math[1]?_.floor(result,p):\"/\"===adjustment.math[1]?_.ceil(result,p):_.round(result,p)}service.listeners[update.path().key].prev=result,update.set(result||0)}else update.set(from.get())}}service.registerHandler(field,handler,field.updateSchema,watch.initialize)}})}function isConditionFunction(e){return e&&e.match(/(\\!?)(.+)\\((.+)\\)/)}function parseCondition(condition,original){var service=this,invert=condition[1],functionName=condition[2],functionArgument=condition[3];if(\"any\"===functionName){var predicate=functionArgument.match(/(.+)\\[\\]\\.*(.*)(===|>|<|>=|<=)(.+)/),arr=service.parseExpression(predicate[1]).get(),comparator=predicate[3],comparisonValue=predicate[4].trim().replace(/'/g,\"\"),key=predicate[2].trim(),evaluation=!1;return arr.forEach(function(e){var r=key?e[key]:e;evaluatePredicate(r,comparator,comparisonValue)&&(evaluation=!0)}),invert?(!evaluation).toString():evaluation.toString()}return condition=original.replace(/model\\./g,\"service.model.\"),!!eval(condition)+\"\"}function evaluatePredicate(e,r,t){switch(r){case\"===\":return e===t;case\">=\":return e>=t;case\"<=\":return t>=e;case\">\":return e>t;case\"<\":return t>e}}function registerHandler(e,r,t,o){var a=this;if(_.isObject(e)&&!_.isArray(e)){if(!e.key&&e.items)return void _.each(e.items,function(e){a.registerHandler(e,r,e.updateSchema)});e=e.key}e=a.getKey(e);var s=e.match(/([^[\\]]*)\\[]\\.?(.+)/);if(s)return void a.registerArrayHandlers(s[1],s[2],r,t,o);var n=a.parseExpression(e,a.model).get();if(!a.listeners[e]){var i=angular.copy(n);a.listeners[e]={handlers:[],updateSchema:t,prev:i}}r&&(a.listeners[e].handlers.push(r),o&&r(n,null,e))}function registerArrayHandlers(e,r,t,o,a){var s=this,n=function(n,i){var c,l,m;if(i&&i>n){var d=e+\"[\"+(i-1)+\"].\"+r;if(s.listeners[d])for(c=0,l=i;l>c;c++)m=e+\"[\"+c+\"].\"+r,s.deregisterHandlers(m);for(c=0,l=n;l>c;c++)m=e+\"[\"+c+\"].\"+r,s.registerHandler(m,t,o)}else if(n>(i||0))for(c=i,l=n;l>c;c++)m=e+\"[\"+c+\"].\"+r,s.registerHandler(m,t,o,a)},i=s.parseExpression(e,s.model).get();_.each(i,function(n,i){var c=e+\"[\"+i+\"].\"+r;s.registerHandler(c,t,o),a&&t(null,null,c)}),s.arrayListeners[e+\".length\"]?s.arrayListeners[e+\".length\"].handlers.push(n):s.arrayListeners[e+\".length\"]={handlers:[n],prev:i?i.length:0}}function deregisterHandlers(e){var r=this;e=r.getKey(e);var t=e.match(/([^[\\]]*)\\[]\\.?(.+)/);return t?void r.deregisterArrayHandlers(t[1],t[2]):void(r.listeners[e]&&(r.listeners[e].handlers=[]))}function deregisterArrayHandlers(e,r){var t=this;t.parseExpression(e,t.model).get().forEach(function(o,a){t.deregisterHandlers(e+\"[\"+a+\"].\"+r)})}function initModelWatch(){var e=this;e.watching||(e.modelWatch&&e.modelWatch(),e.modelWatch=$rootScope.$watch(function(){return e.model},e.onModelWatch.bind(e),!0),e.initSchemaParams(),e.watching=!0,e.firstUpdate=!0)}function onModelWatch(e,r){var t=this;(t.firstUpdate||!angular.equals(e,r))&&(t.firstUpdate=!1,cnUtil.cleanModel(t.model),t.prevParams=angular.copy(t.params),t.params={},_.each(t.arrayListeners,function(e,r){var o=t.parseExpression(r,t.model).get();angular.equals(o,e.prev)||(_.each(e.handlers,function(r){r(o,e.prev)}),e.prev=angular.copy(o))}),_.each(t.listeners,function(e,r){if(e){var o=t.parseExpression(r,t.model).get();angular.equals(o,e.prev)||(_.each(e.handlers,function(t){t(o,e.prev,r)}),e.prev=angular.copy(o)),e.updateSchema&&!angular.isUndefined(o)&&null!==o&&(t.params[r]=o)}}),angular.equals(t.params,t.prevParams)||(t.model.id&&!t.updates&&_.isEmpty(t.prevParams)?++t.updates:t.refreshSchema()))}function initSchemaParams(){var e=this;_.each(e.listeners,function(r,t){if(r){var o=e.parseExpression(t,e.model).get();r.updateSchema&&!angular.isUndefined(o)&&null!==o&&(e.params[t]=o)}})}function initArrayCopyWatch(){console.log(\"initArrayCopyWatch: how many times does this event get registered?\");var e=this;e.events.push($rootScope.$on(\"schemaFormPropagateScope\",function(r,t){var o=e.getKey(t.form.key),a=o.match(/^.*\\[(\\d+)].*$/);o=o.replace(/\\[\\d+]/g,\"[]\"),a=a&&parseInt(a[1]),t.form.condition||(t.form.condition=\"true\"),e.addArrayCopy(t.form,o,a),t.$emit(\"flexFormArrayCopyAdded\",o)})),e.events.push($rootScope.$on(\"schemaFormDeleteScope\",function(r,t,o){console.log(\"schemaFormDeleteScope:\",o,t.form,t);var a=e.getKey(t.form.key).replace(/\\[\\d+]/g,\"[]\"),s=e.getArrayCopiesFor(a);if(s.forEach(function(e){e.splice(o,1)}),t.form.link){var n=e.parseExpression(t.form.link,e.model).get();n.splice(o,1)}}))}function addArrayCopy(e,r,t){var o=this;(!t||0>t)&&(t=0),o.arrayCopies[r]||(o.arrayCopies[r]=[]),o.arrayCopies[r][t]=e}function getArrayCopies(e){var r=this;return r.arrayCopies[e]}function getArrayCopiesFor(e){var r=this,t=[];return e+=\"[]\",_.each(r.arrayCopies,function(r,o){o.includes(e)&&t.push(r)}),t}function addToFormCache(e,r){var t=this;r=r||t.getKey(e.key),t.getFromFormCache(r)||(t.formCache[r]=e)}function getFromFormCache(e){var r=this;return r.formCache[e]}function addToDataCache(e,r){var t=this;e&&(t.dataCache[e]=r)}function getFromDataCache(e){var r=this;return r.dataCache[e]}function parseExpression(exp,depth){var service=this;if(!exp||/^(null|false|true|undefined|''|[0-9.]+|\\[]|\\{})$/.test(exp))return{get:function get(){return eval(exp)}};exp=service.getKey(exp);var match=exp.match(/^(model\\.)?(\\S+)$/),modelValue={get:function(){for(var e=sfPath.parse(exp),r=depth||service;r&&e.length>1;)r=r[e.shift()];return r&&r[e[0]]},set:function(e){for(var r=sfPath.parse(exp),t=depth||service;t&&r.length>1;){var o=r.shift();t[o]||(/^\\d?$/.test(r[0])?t[o]=[]:t[o]={}),t=t[o]}return t[r[0]]=e,e},path:function(){return{exp:exp,depth:depth,key:match[2]}}};return modelValue}function processSection(e){var r=this;_.each(e.items,r.processField.bind(r))}function processComponent(e){var r=this;e.type=\"section\",e.htmlClass=\"row\";var t=12/_.reject(e.items,\"hidden\").length;_.each(e.items,function(o,a){r.processField(o),e.items[a]={type:\"section\",htmlClass:\"col-sm-\"+t,items:[o]}})}function processCurrency(e){e.currencyFormat={\"currency-dollars\":\"dollars\",\"currency-microcents\":\"microcents\",currency:\"cents\"}[e.schema.format],e.type=\"cn-currency\"}function processPercentage(e){e.type=\"cn-percentage\"}function processReusable(e){var r=this;e.type=\"cn-reusable\",e.view=e.view||\"new\",e.items.forEach(r.processField.bind(r)),e.items=[{type:\"section\",items:e.items,condition:\"!model.\"+r.getKey(e.key)+\".id\"}]}function processMediaUpload(e){var r=this;e.type=\"cn-mediaupload\",_.each(e.data,function(t,o){e.data[o]=r.parseExpression(t).get()})}function processCsvUpload(e){e.type=\"cn-csvupload\"}function processRadiobuttons(e){e.type=\"cn-radiobuttons\",e.fullWidth&&(e.btnClass=\"col-sm-\"+_.divide(12,e.titleMap.length))}function processDate(e){e.type=\"cn-datetimepicker\"}function processSelect(e){var r=this,t=e.schema;if((e.titleMapResolve||e.titleMap)&&(e.getTitleMap=function(){return e.titleMap||r.schema.data[e.titleMapResolve]},e.onInit=function(t,o,a,s){var n=r.parseExpression(o.key,r.model);if(t=n.get(),\"tag-init\"===a){var i;if(\"array\"===o.schema.type)\"object\"!==o.schema.items.type&&(i=[],_.each(t,function(r){var t={};t[e.valueProperty||\"value\"]=r,i.push(_.find(e.getTitleMap(),t))}));else{var c={};c[e.valueProperty||\"value\"]=t,i=_.find(e.getTitleMap(),c)}i&&s(i)}}),e.titleMapQuery){var o=e.titleMapQuery.params.q;e.titleQuery=function(r){console.log(\"titleMap:\",r);var t={};return o&&(t[o]=r),Api.get({url:e.titleMapQuery.url,params:t})},o||(e.minLookup=\"0\"),e.onInit=function(e,r,t,o){\"tag-init\"===t&&o(e)}}if(t.items){var a=[];_.each(t.items.properties,function(e,r){angular.isDefined(e[\"default\"])&&a.push({key:r,\"default\":e[\"default\"]})}),a.length&&(e.onAdd=function(e,r,t){e.value&&\"tag-added\"===t&&_.each(a,function(r){e.value[r.key]||(e.value[r.key]=r[\"default\"])})})}e.type.includes(\"cn-autocomplete\")||(e.items?(e.detailedList=!0,\"component\"!==e.items[0].type&&(e.items.length>1&&(e.items=[{type:\"component\",items:e.items}]),r.processFieldset(e)),e.type=\"cn-autocomplete-detailed\"):(e.selectionStyle||(\"tags\"===e.key?e.selectionStyle=\"tags\":\"array\"===e.getSchemaType()&&1!==e.schema.maxItems?e.selectionStyle=\"list\":e.selectionStyle=\"select\"),e.type=\"cn-autocomplete\")),e.displayFormat&&(e.itemFormatter=r.processTemplate(e.displayFormat)),r.registerHandler(e.key,function(t){var o=r.formCtrl&&r.formCtrl[r.getKey(e.key)];o&&o.$setDirty&&o.$setDirty()},e.updateSchema)}function processToggle(e){e.type=\"cn-toggle\"}function processHelp(e){e.htmlClass=\"help-block\"}function processDisplay(e){var r=this;e.type=\"cn-display\",e.getDisplay=r.processTemplate(e.displayFormat,!0)}function processTemplate(e,r){var t=this,o=$interpolate;return function(a,s){return r&&(angular.isDefined(s)&&(a=_.map(a,function(e){return\"arrayIndex\"===e?s:e})),a=t.parseExpression(a,t.model).get()),o(e)(a)}}function processSelectDisplay(e,r){var t,o=this,a=_.find(e.items,\"selectField\");t=r&&\"array\"===r.type?setupArraySelectDisplay(e,a,o):setupSelectDisplay(e,a,o),e.selectDisplay=!1,o.registerHandler(a.key,t,a.updateSchema,!0),o.processField(e)}function setupArraySelectDisplay(e,r,t){_.each(e.items,function(e){\"false\"!==e.condition&&(e.condition=\"true\")});var o=function(){var o=getArrayIndex(arguments[2]);_.each(e.items,function(e){var a=t.getKey(r.key),s=t.getKey(e.key),n=ObjectPath.parse(s);if(a!==s){var i=t.setArrayIndex(a,o),c=t.parseExpression(i,t.model).get(),l=t.getArrayCopies(s);_.includes(c,n[n.length-1])?_.each(l,function(e){getArrayIndex(e)==o&&(e.condition=\"true\")}):_.each(l,function(e){getArrayIndex(e)==o&&(e.condition=\"false\",t.parseExpression(t.getKey(e.key),t.model).set())})}})},a=t.parseExpression(t.getKey(e.key),t.model).get();_.each(e.items,function(e){var o=t.getKey(e.key),s=t.getKey(r.key);o!==s&&_.each(a,function(e,r){var a=t.setArrayIndex(o,r),n=ObjectPath.parse(a),i=t.setArrayIndex(s,r),c=t.parseExpression(i,t.model),l=c.get(),m=t.parseExpression(a,t.model).get();m&&!_.includes(l,n[n.length-1])&&(l||(l=[]),l.push(n[n.length-1]),c.set(l))})});var s=t.getSchema(e.key)[\"default\"];_.each(s,function(e,o){var a=t.getKey(r.key),s=t.setArrayIndex(a,o),n=t.parseExpression(s,t.model),i=n.get();_.each(e,function(e,r){i||(i=[]),i.push(r),n.set(i)})});var n=0,i=_.pluck(_.reject(e.items,{condition:\"false\"}),\"key\"),c=$rootScope.$on(\"flexFormArrayCopyAdded\",function(r,a){var s=t.parseExpression(t.getKey(e.key),t.model).get();if(s){var c=s.length*i.length;if(_.includes(i,a)&&n++,n===c){for(var l=0;l<s.length;l++)o(null,null,\"[\"+l+\"]\");n=0}}}),l=$rootScope.$on(\"flexForm.updatePage\",function(){n=0});return t.events.push(c),t.events.push(l),o}function setupSelectDisplay(e,r,t){var o=function(){var o=t.getKey(r.key);_.each(e.items,function(e){var r=t.getKey(e.key),a=ObjectPath.parse(r);if(o!==r){var s=t.parseExpression(o,t.model).get();_.includes(s,a[a.length-1])?e.condition=\"true\":(e.condition=\"false\",t.parseExpression(r,t.model).set())}})},a=t.getKey(r.key),s=t.parseExpression(a,t.model),n=s.get();_.each(e.items,function(e){var r=t.getKey(e.key);if(a!==r){var o=ObjectPath.parse(r),i=t.parseExpression(r,t.model).get();i&&!_.includes(n,o[o.length-1])&&(n||(n=[]),n.push(o[o.length-1]),s.set(n))}});var i=t.getSchema(e.key)[\"default\"];_.each(i,function(e,r){n||(n=[]),n.push(r),s.set(n)});var c=t.parseExpression(e.key,t.model);return i&&!c.get()&&c.set(i),o}function setupSchemaRefresh(e){var r=this;r.refreshSchema=_.debounce(function(t){var o=_.extend(cnFlexFormConfig.getStateParams(),r.params);console.log(\"service.schema.params, params:\",r.schema.params,o);var a,s=cnUtil.diff(r.schema.params,o,!0);(s||t)&&(t?o.updateSchema=t:(a=_.keys(s),a.length>1&&(s=_.omit(s,_.isNull),a=_.keys(s)),o.updateSchema=_.first(a)),o.updateSchema||(s=cnUtil.diff(o,_.omit(r.schema.params,\"updateSchema\")),a=_.keys(s),o.updateSchema=_.first(a)),e(o).then(function(e){++r.updates,r.processUpdatedSchema(e)}))},100),r.refreshData=_.debounce(function(){e(_.extend(r.schema.params,{updateSchema:\"refreshData\"})).then(function(e){r.processUpdatedSchema(e),console.log(\"service.schema.params:\",r.schema.params)})},100),r.events.push($rootScope.$on(\"ffRefreshData\",r.refreshData))}function processUpdatedSchema(e){var r=this;if(e.diff){r.schema.params=e.params,e.diff.data&&_.each(e.diff.data,function(e,t){e&&e.data&&!_.isEmpty(r.schema.data[t].data)&&!e.reset&&(e.data=r.schema.data[t].data.concat(e.data)),r.schema.data[t]=e,r.resolveRegister[t]&&_.each(r.resolveRegister[t],function(e){e.forEach(function(e){r.handleResolve(e.field,e.prop,\"schema.data.\"+t)})})});var t=[];e.diff.schema&&_.each(e.diff.schema,function(e,o){r.schema.schema.properties[o]=e,reprocessSchema(e,o,t)}),e.diff.form&&_.each(e.diff.form,function(e){-1===t.indexOf(e.key)&&t.push(e.key);var o=r.getFromFormCache(e.key);o&&r.reprocessField(o,e);var a=r.getArrayCopies(e.key);a&&_.each(a,function(t){r.reprocessField(t,e)})}),t.length&&_.each(t,function(e){var t=r.getFromFormCache(e);if(t&&r.processField(t),e.includes(\"[]\")){var o=r.getArrayCopies(e);_.each(o,function(e){e&&r.processField(e)})}}),r.broadcastErrors()}else r.updateSchema(e)}function reprocessField(e,r,t){var o=this;_.extend(e,_.omit(r,\"items\",\"key\")),e._ogKeys.forEach(function(t){r[t]||delete e[t]}),e._ogKeys=_.keys(r),o.deregisterHandlers(r.key),!t&&e.redraw&&e.redraw()}function reprocessSchema(e,r,t){t.push(r),e.properties&&_.each(e.properties,function(e,o){reprocessSchema(e,r+\".\"+o,t)}),e.items&&e.items.properties&&_.each(e.properties,function(e,o){reprocessSchema(e,r+\"[].\"+o,t)})}function buildError(e){var r=this,t=r.getKey(e.key);return{key:t,message:e.error}}function broadcastErrors(){var e=this;$timeout(function(){e.errors.forEach(function(e){$rootScope.$broadcast(\"schemaForm.error.\"+e.key,\"serverValidation\",e.message)})},1)}function replaceArrayIndex(e,r){var t=/([^.]*)\\[arrayIndex\\]/.exec(e),o=new RegExp(t[1]+\"\\\\[(\\\\d+)\\\\]\"),a=o.exec(r);return e.replace(t[0],a[0])}function getArrayIndex(e){return _.isObject(e)?_.find(e.key,function(e){return _.isNumber(e)}):/\\[(\\d+)\\]/.exec(e)[1]}function setArrayIndex(e,r,t){var o,a=this;o=_.isString(e)?ObjectPath.parse(e):_.clone(e);var s=o.indexOf(\"\");return o[s]=r,t?o:a.getKey(o)}function cleanup(){var e=this;_.each(e.events,function(e){e()})}var services=[],prototype={compile:compile,addArrayCopy:addArrayCopy,addToDataCache:addToDataCache,addToFormCache:addToFormCache,broadcastErrors:broadcastErrors,buildError:buildError,cleanup:cleanup,deregisterHandlers:deregisterHandlers,deregisterArrayHandlers:deregisterArrayHandlers,getArrayCopies:getArrayCopies,getArrayCopiesFor:getArrayCopiesFor,getFromDataCache:getFromDataCache,getFromFormCache:getFromFormCache,getKey:getKey,getSchema:getSchema,handleResolve:handleResolve,initArrayCopyWatch:initArrayCopyWatch,initModelWatch:initModelWatch,initSchemaParams:initSchemaParams,isCompiled:isCompiled,isConditionFunction:isConditionFunction,onModelWatch:onModelWatch,parseCondition:parseCondition,parseExpression:parseExpression,processDefault:processDefault,processDisplay:processDisplay,processField:processField,processFieldset:processFieldset,processFieldWatch:processFieldWatch,processComponent:processComponent,processCurrency:processCurrency,processPercentage:processPercentage,processDate:processDate,processHelp:processHelp,processRadiobuttons:processRadiobuttons,processReusable:processReusable,processSchema:processSchema,processSelectDisplay:processSelectDisplay,processResolve:processResolve,processSection:processSection,processSelect:processSelect,processTemplate:processTemplate,processToggle:processToggle,processUpdatedSchema:processUpdatedSchema,processMediaUpload:processMediaUpload,processCsvUpload:processCsvUpload,registerArrayHandlers:registerArrayHandlers,registerHandler:registerHandler,registerResolve:registerResolve,reprocessField:reprocessField,setArrayIndex:setArrayIndex,setupConfig:setupConfig,setupSchemaRefresh:setupSchemaRefresh};return _.extend(CNFlexForm.prototype,prototype),_.extend(CNFlexFormConstructor,prototype),CNFlexFormConstructor}angular.module(\"cn.flex-form\").provider(\"cnFlexFormService\",cnFlexFormServiceProvider);var fieldTypeHandlers={\"cn-radiobuttons\":\"processRadiobuttons\",\"cn-autocomplete\":\"processSelect\",\"cn-datetimepicker\":\"processDate\",help:\"processHelp\",\"cn-display\":\"processDisplay\",\"cn-currency\":\"processCurrency\",\"cn-percentage\":\"processPercentage\",\"cn-mediaupload\":\"processMediaUpload\",\"cn-csvupload\":\"processCsvUpload\",\"cn-reusable\":\"processReusable\",\"cn-toggle\":\"processToggle\",section:\"processSection\"};cnFlexFormServiceProvider.$inject=[\"schemaFormDecoratorsProvider\",\"cnFlexFormTypesProvider\"],CNFlexFormService.$inject=[\"Api\",\"$parse\",\"cnFlexFormConfig\",\"cnFlexFormTypes\",\"sfPath\",\"$interpolate\",\"$rootScope\",\"$timeout\",\"cnUtil\",\"$stateParams\"]}(),function(){function e(){function e(){console.log(\"FlexFormSandbox\")}function r(){if(t.schemaStr){var e=angular.fromJson(t.schemaStr);console.log(\"schema:\",e),!e.form&&e.forms&&(e.form=e.forms[0].form),t.config.schema=e.form&&e}}var t=this;t.activate=e,t.onSchema=r,t.model={},t.config={},t.schemaStr=\"\",e()}angular.module(\"cn.flex-form\").controller(\"FlexFormSandbox\",e)}(),function(){function e(e){var r=[\"cn-fieldset\",\"cn-toggle\",\"cn-datetimepicker\",\"cn-autocomplete\",\"cn-autocomplete-detailed\",\"cn-currency\",\"cn-radiobuttons\",\"cn-percentage\",\"cn-display\",\"cn-mediaupload\",\"cn-csvupload\",\"cn-reusable\"];_.each(r,function(r){e.registerField({type:r,templateUrl:\"app/components/cn-flex-form/forms/\"+r+\".html\"})})}function r(e){e.put(\"app/components/cn-flex-form/forms/cn-toggle.html\",'        <div class=\"form-group {{form.htmlClass}}\"              ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">          <label class=\"control-label\" ng-show=\"showTitle()\">{{form.title}}</label>          <div class=\"clearfix\">            <cn-toggle-switch              class=\"pull-left\"              ng-show=\"form.key\"              ng-model-options=\"form.ngModelOptions\"              ng-model=\"$$value$$\"              enabled=\"$$value$$\"              sf-changed=\"form\"              schema-validate=\"form\"              on-value=\"form.onValue\"              off-value=\"form.offValue\"              undefined-class=\"form.undefinedClass\"/>            <span ng-show=\"form.onText && form.offText\">              {{$$value$$ === form.onValue ? form.onText : form.offText}}            </span>          </div>          <span class=\"help-block\" sf-message=\"form.description\"></span>        </div>        '),\ne.put(\"app/components/cn-flex-form/forms/cn-datetimepicker.html\",'        <div class=\"form-group {{form.htmlClass}}\"             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">          <label class=\"control-label\"                 for=\"{{form.key.join(\\'.\\')}}\"                 ng-show=\"showTitle()\">{{form.title}}</label>          <cn-datetimepicker            ng-show=\"form.key\"            ng-model=\"$$value$$\"            ng-model-options=\"form.ngModelOptions\"            is-disabled=\"form.readonly\"            sf-changed=\"form\"            schema-validate=\"form\"            input-id=\"{{form.key.join(\\'.\\')}}\"            min-date=\"form.minDate\"            cn-date-required=\"form.required\"            placeholder=\"{{form.placeholder}}\"            model-type=\"{{form.schema.type}}\">          </cn-datetimepicker>          <span class=\"help-block\" sf-message=\"form.description\"></span>        </div>        ');var r='          <tags-input            ng-show=\"form.key\"            ng-model=\"$$value$$\"            ng-model-options=\"form.ngModelOptions\"            ng-disabled=\"form.readonly\"            sf-changed=\"form\"            schema-validate=\"form\"            input-id=\"{{form.key.join(\\'.\\')}}\"            display-property=\"{{form.displayProperty || \\'name\\'}}\"            value-property=\"{{form.valueProperty || \\'value\\'}}\"            placeholder=\"{{form.placeholder || \\' \\'}}\"            add-on-blur=\"true\"            add-on-comma=\"false\"            add-from-autocomplete-only=\"{{!form.allowNew}}\"            on-before-tag-added=\"form.onAdd({value: $tag}, form, $event, $prev)\"            on-init=\"form.onInit($tag, form, $event, $setter)\"            model-type=\"{{form.getSchemaType()}}\"            array-value-type=\"{{form.schema.items.type}}\"            hide-tags=\"{{form.detailedList}}\"            tags-style=\"{{form.selectionStyle}}\"            required=\"{{form.required}}\"            min-length=\"{{form.minLength}}\"            allowed-tags-pattern=\".*\"            dropdown=\"true\"            item-formatter=\"form.itemFormatter\"            min-tags=\"{{form.schema.minItems}}\"            max-tags=\"{{form.schema.maxItems || form.getSchemaType() !== \\'array\\' ? 1 : 0}}\"            allow-bulk=\"{{form.bulkAdd}}\"            bulk-delimiter=\"{{form.bulkDelimiter}}\"            bulk-placeholder=\"{{form.bulkPlaceholder}}\"            show-button=\"true\">            <auto-complete              source=\"form.getTitleMap && form.getTitleMap() || form.titleQuery($query)\"              skip-filtering=\"{{form.titleQuery ? true : false}}\"              min-length=\"{{form.minLookup || (form.titleQuery && 3 || 0)}}\">            </auto-complete>          </tags-input>          ';e.put(\"app/components/cn-flex-form/forms/cn-autocomplete.html\",'        <div class=\"form-group {{form.htmlClass}}\"             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">          <label class=\"control-label\"                 for=\"{{form.key.join(\\'.\\')}}-input\"                 ng-show=\"showTitle()\">{{form.title}}</label>          '+r+'          <span class=\"help-block\" sf-message=\"form.description\"></span>        </div>        '),e.put(\"app/components/cn-flex-form/forms/cn-autocomplete-detailed.html\",'        <div sf-array=\"form\"             class=\"form-group {{form.htmlClass}}\"             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">          <label class=\"control-label\"                 for=\"{{form.key.join(\\'.\\')}}-input\"                 ng-show=\"showTitle()\">{{form.title}}</label>          <ol class=\"list-group cn-autocomplete-list\"              ng-show=\"modelArray.length\"              ng-model=\"modelArray\">            <li class=\"list-group-item {{form.fieldHtmlClass}}\"                ng-repeat=\"item in modelArray track by $index\">              <button ng-hide=\"form.readonly || form.remove === null\"                      ng-click=\"deleteFromArray($index)\"                      type=\"button\" class=\"close pull-right\">                <span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span>              </button>              <sf-decorator ng-init=\"arrayIndex = $index\" form=\"copyWithIndex($index)\"></sf-decorator>            </li>          </ol>          '+r+'          <span class=\"help-block\" sf-message=\"form.description\"></span>        </div>        '),e.put(\"app/components/cn-flex-form/forms/cn-currency.html\",'        <div class=\"form-group {{form.htmlClass}}\"             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">          <label class=\"control-label\"                 ng-show=\"showTitle()\"                 for=\"{{form.key.join(\\'.\\')}}\">{{form.title}}</label>          <div class=\"{{form.fieldClass}} input-group\">            <label class=\"input-group-addon\"                   ng-disabled=\"form.readonly\"                   for=\"{{form.key.join(\\'.\\')}}\">$</label>            <input class=\"form-control\"                   cn-currency-format=\"{{form.currencyFormat}}\"                   ng-show=\"form.key\"                   ng-model-options=\"form.ngModelOptions\"                   ng-disabled=\"form.readonly\"                   sf-changed=\"form\"                   schema-validate=\"form\"                   ff-validate=\"form\"                   type=\"text\"                   step=\"any\"                   min=\"{{form.min}}\"                   max=\"{{form.max}}\"                   id=\"{{form.key.join(\\'.\\')}}\"                   name=\"{{form.key.join(\\'.\\')}}\"                   ng-model=\"$$value$$\">          </div>          <span class=\"help-block\" sf-message=\"form.description\"></span>        </div>        '),e.put(\"app/components/cn-flex-form/forms/cn-radiobuttons.html\",'        <div class=\"form-group schema-form-radiobuttons cn-radiobuttons {{form.htmlClass}}\"             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">          <label class=\"control-label\" ng-show=\"showTitle()\">{{form.title}}</label>          <div class=\"btn-group clearfix\">            <label class=\"btn btn-{{item.value}} {{form.btnClass}} {{item.value === $$value$$ ? \\'active\\' : \\'\\'}}\"                   ng-repeat=\"item in form.titleMap\">              <input type=\"radio\"                     class=\"{{form.fieldHtmlClass}} hide\"                     sf-changed=\"form\"                     ng-disabled=\"form.readonly\"                     ng-model=\"$$value$$\"                     ng-model-options=\"form.ngModelOptions\"                     schema-validate=\"form\"                     ff-validate=\"form\"                     ng-value=\"item.value\"                     name=\"{{form.key.join(\\'.\\')}}\">              <i class=\"fa fa-{{item.value}} fa-lg\"></i>              <span ng-bind-html=\"item.name\"></span>            </label>          </div>          <span class=\"help-block\" sf-message=\"form.description\"></span>        </div>        '),e.put(\"app/components/cn-flex-form/forms/cn-percentage.html\",'        <div class=\"form-group {{form.htmlClass}}\"             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">          <label class=\"control-label\"                 ng-show=\"showTitle()\"                 for=\"{{form.key && form.key[0]}}\">{{form.title}}</label>          <div class=\"{{form.fieldClass}} input-group\">            <input class=\"form-control\"                   cn-percentage-format                   ng-show=\"form.key\"                   ng-model-options=\"form.ngModelOptions\"                   ng-disabled=\"form.readonly\"                   sf-changed=\"form\"                   schema-validate=\"form\"                   type=\"number\"                   step=\"any\"                   min=\"{{form.min}}\"                   max=\"{{form.max}}\"                   id=\"{{form.key && form.key[0]}}\"                   name=\"{{form.key && form.key[0]}}\"                   ng-model=\"$$value$$\">             <div class=\"input-group-addon\"                    ng-disabled=\"form.readonly\"                    for=\"{{form.key && form.key[0]}}\">%</div>          </div>          <span class=\"help-block\" sf-message=\"form.description\"></span>        </div>        '),e.put(\"app/components/cn-flex-form/forms/cn-display.html\",'        <div class=\"form-group cn-display{{form.htmlClass}}\">          <input ng-show=\"form.key\"                 class=\"form-control\"                 id=\"{{form.key.join(\\'.\\')}}\"                 name=\"{{form.key.join(\\'.\\')}}\"                 ng-disabled=\"true\"                 value=\"{{form.getDisplay(form.key, form.arrayIndex)}}\">        </div>        '),e.put(\"app/components/cn-flex-form/forms/cn-fieldset.html\",'        <fieldset ng-disabled=\"form.readonly\" class=\"schema-form-fieldset {{form.htmlClass}}\">          <legend ng-click=\"form.toggleCollapse()\"                  ng-class=\"{\\'sr-only\\': !showTitle(), collapsible: form.collapsible}\"                  ng-mouseenter=\"form.render = true\">            <i ng-show=\"form.collapsible\"               class=\"fa fa-caret-{{form.collapsed ? \\'right\\' : \\'down\\'}}\"></i>            {{ form.title }}          </legend>          <div class=\"help-block\" ng-show=\"form.description\" ng-bind-html=\"form.description\"></div>          <div collapse=\"form.collapsed\">            <div ng-if=\"form.render\">              <sf-decorator ng-repeat=\"item in form.items\" form=\"item\"></sf-decorator>            </div>          </div>        </fieldset>        '),e.put(\"app/components/cn-flex-form/forms/cn-mediaupload.html\",'        <div class=\"form-group {{form.htmlClass}}\"             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">          <label class=\"control-label\"                 ng-show=\"showTitle()\"                 for=\"{{form.key && form.key[0]}}\">{{form.title}}</label>          <media-upload ng-model=\"$$value$$\"                        cn-file-type=\"form.fileType\"                        cn-upload-path=\"form.uploadPath\"                        cn-data=\"form.data\"                        cn-preview-path=\"form.previewPath\"                        cn-model-value-key=\"form.modelValueKey\"                        ng-model-options=\"form.ngModelOptions\"                        sf-changed=\"form\"                        schema-validate=\"form\"                        ff-form=\"form\"                        class=\"clearfix\">          </media-upload>          <span class=\"help-block\" sf-message=\"form.description\"></span>       </div>        '),e.put(\"app/components/cn-flex-form/forms/cn-csvupload.html\",'        <div class=\"form-group {{form.htmlClass}}\"             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">          <label class=\"control-label\"                 ng-show=\"showTitle()\"                 for=\"{{form.key && form.key[0]}}\">{{form.title}}</label>          <csv-upload ng-model=\"$$value$$\"                        cn-upload-path=\"form.uploadPath\"                        ng-model-options=\"form.ngModelOptions\"                        sf-changed=\"form\"                        schema-validate=\"form\"                        ff-form=\"form\"                        class=\"clearfix\">          </csv-upload>          <span class=\"help-block\" sf-message=\"form.description\"></span>       </div>        '),e.put(\"app/components/cn-flex-form/forms/cn-reusable.html\",'        <div class=\"form-group cn-reusable {{form.htmlClass}}\"             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">          <label class=\"control-label\"                 ng-show=\"showTitle()\"                 for=\"{{form.key.join(\\'.\\')}}\">{{form.title}}</label>          <cn-select-or            ng-show=\"form.key\"            select-from=\"form.library\"            ng-model=\"$$value$$\"            ng-model-options=\"form.ngModelOptions\"            sf-changed=\"form\"            schema-validate=\"form\"            ff-form=\"form\"            directiveId=\"form.directiveId\"            item-template=\"form.itemTemplate\"            toggle-text=\"form.toggleText\"            disabled=\"form.readonly\"            view=\"form.view\">            <sf-decorator ng-repeat=\"item in form.items\" form=\"item\"/>          </cn-select-or>          <p ng-if=\"form.loadMore && form.view === \\'list\\'\">            <a ng-click=\"form.loadMore()\"               class=\"btn btn-default btn-block\">Load More</a>          </p>          <span class=\"help-block\" sf-message=\"form.description\"></span>        </div>        ')}angular.module(\"cn.flex-form\").config(e).run(r),e.$inject=[\"cnFlexFormServiceProvider\"],r.$inject=[\"$templateCache\"]}();\n//# sourceMappingURL=all.min.js.map\n","(function() {\n  'use strict';\n  angular.module('cn.flex-form', [\n    'ui.router',\n    'schemaForm',\n    'ui.bootstrap.datetimepicker',\n    'cnTagsInput',\n    'cn.util'\n  ]);\n})();","(function() {\n  'use strict';\n  angular\n      .module('cn.flex-form')\n      .provider('cnFlexFormConfig', cnFlexFormConfigProvider);\n\n  function cnFlexFormConfigProvider() {\n\n    cnFlexFormConfig.$inject = ['$stateParams'];\n\n    var ignoreParams = ['page', 'debug', 'sandbox', 'modal', 'modalId'];\n\n    return {\n      addIgnoreParam: addIgnoreParam,\n      $get: cnFlexFormConfig\n    };\n\n    ////////\n\n    function addIgnoreParam(param) {\n      ignoreParams.push(param);\n    }\n\n    function cnFlexFormConfig($stateParams) {\n      return {\n        getStateParams: getStateParams,\n        ignoreParams: ignoreParams\n      };\n\n      ////////\n\n      function getStateParams() {\n        return _\n            .chain($stateParams)\n            .omit(ignoreParams)\n            .omit(function(v) {\n              return _.isUndefined(v) || _.isNull(v);\n            })\n            .value();\n      }\n    }\n\n  }\n\n})();","(function () {\n  'use strict';\n\n  angular\n    .module('cn.flex-form')\n    .directive('cnFlexFormHeader', cnFlexFormHeader);\n\n  function cnFlexFormHeader() {\n    return {\n      restrict: 'E',\n      scope: {\n        config: '=ffHeaderConfig',\n        submit: '&ffSubmit',\n        loadOffscreen: '&ffLoadOffscreen'\n      },\n      controller: FlexFormHeader,\n      bindToController: true,\n      controllerAs: 'vm',\n      template: '\\\n          <div class=\"col-md-6\">\\\n            <h5 ng-if=\"vm.config.title.lead\">{{::vm.config.title.lead}}</h5>\\\n            <h1>{{vm.config.title.main}}</h1>\\\n            <h5 ng-if=\"vm.config.title.sub\">{{::vm.config.title.sub}}</h5>\\\n          </div>\\\n          <div class=\"{{vm.config.buttonContainerClass || \\'page-action-btns\\'}}\">\\\n            <div class=\"btn-options\"\\\n                 ng-mouseover=\"vm.loadOffscreen()\">\\\n              <a class=\"btn\"\\\n                 ng-if=\"vm.config.actionConfig.returnState\"\\\n                 ui-sref=\"{{vm.config.actionConfig.returnState}}\">\\\n                {{vm.config.actionConfig.returnText || \\'Cancel\\'}}\\\n              </a>\\\n              <span ng-repeat=\"button in vm.config.actionConfig.actions\">\\\n                <a class=\"btn {{button.style && \\'btn-\\'+button.style}}\"\\\n                   ng-disabled=\"vm.isDisabled(button)\"\\\n                   ng-class=\"{\\'btn-primary\\': $index === vm.config.actionConfig.actions.length - 1}\"\\\n                   ng-click=\"vm.submit({ handler: button.handler})\"\\\n                   tooltip=\"{{button.helptext}}\"\\\n                   tooltip-placement=\"bottom\">\\\n                  {{button.text || \\'Save\\'}}\\\n                </a>\\\n              </span>\\\n            </div>\\\n            <p class=\"data-updated-at text-right\"\\\n               id=\"data-updated-at\"\\\n               ng-hide=\"vm.config.noData\">\\\n              <a ng-click=\"vm.updateData()\">Update Data</a>\\\n            </p>\\\n          </div>'\n    };\n  }\n\n  FlexFormHeader.$inject = ['$scope'];\n  function FlexFormHeader($scope) {\n    var vm = this;\n\n    vm.updateData = updateData;\n    vm.isDisabled = isDisabled;\n\n    ///////////\n\n    function updateData() {\n      console.log('updateData:', updateData);\n      $scope.$emit('ffRefreshData');\n    }\n\n    function isDisabled(btnConfig) {\n      if(vm.config.isDisabled) return vm.config.isDisabled(btnConfig);\n      return false;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n      .module('cn.flex-form')\n      .controller('FlexFormModalLoader', FlexFormModalLoader)\n      .factory('FlexFormModal', FlexFormModal);\n\n  FlexFormModalLoader.$inject = [\n    'FlexFormModal', '$state', '$rootScope', '$stateParams'\n  ];\n  function FlexFormModalLoader(FlexFormModal, $state, $rootScope, $stateParams) {\n\n    var vm = this;\n    console.log('FlexFormModalLoader:', $stateParams.modal);\n\n    activate();\n\n    //////////\n\n    function activate() {\n      vm.modal = FlexFormModal.open(vm);\n      vm.modal.result.finally(goBack);\n\n      vm.dismiss = $rootScope.$on('$stateChangeStart', dismissModal);\n    }\n\n    function goBack() {\n      $state.go('^');\n    }\n\n    function dismissModal() {\n      console.log('dismissModal:', arguments);\n      vm.dismiss();\n      vm.modal.dismiss();\n    }\n  }\n\n  FlexFormModal.$inject = ['cnFlexFormModalLoaderService', '$modal', '$stateParams'];\n  function FlexFormModal(cnFlexFormModalLoaderService, $modal, $stateParams) {\n\n    var instance = {\n      open: openModal\n    };\n\n    return instance;\n\n    function openModal() {\n      var currentModal = cnFlexFormModalLoaderService.getMapping($stateParams.modal);\n      console.log('currentModal:', currentModal);\n\n      this.modal = $modal.open(currentModal);\n      return this.modal;\n    }\n\n  }\n\n})();\n","(function() {\n  'use strict';\n\n  angular\n      .module('cn.flex-form')\n      .provider('cnFlexFormModalLoaderService', cnFlexFormModalLoaderServiceProvider);\n\n  var modalMap = {};\n  var promiseMap = {};\n\n  function getPromises(state) {\n    var promises = promiseMap[state];\n    if(!promises) {\n      promises = {};\n      promiseMap[state] = promises;\n    }\n    return promises;\n  }\n\n  function getPromise(state, id, $q) {\n    var promises = getPromises(state);\n    var promise = promises[id];\n    if(!promise) {\n      promise = $q.defer();\n      promises[id] = promise;\n    }\n    return promise;\n  }\n\n  function cnFlexFormModalLoaderServiceProvider() {\n\n    var provider = {\n      addMapping: addMapping,\n      $get: cnFlexFormModalLoaderService\n    };\n\n    parent.$inject = ['$stateParams', '$q'];\n\n    return provider;\n\n    ////////////\n\n    function addMapping(state, def) {\n      def.resolve = {\n        parent: parent\n      };\n      modalMap[state] = def;\n    }\n\n    function parent($stateParams, $q) {\n      return getPromise($stateParams.modal, $stateParams.modalId, $q).promise;\n    }\n  }\n\n  cnFlexFormModalLoaderService.$inject = ['$q'];\n\n  function cnFlexFormModalLoaderService($q) {\n    var service = {\n      getMapping: getMapping,\n      resolveMapping: resolveMapping\n    };\n\n    return service;\n\n    /////////////\n\n    function resolveMapping(state, id, parent) {\n      var d = getPromise(state, id, $q);\n      d.resolve(parent);\n      return d.promise;\n    }\n\n    function getMapping(state) {\n      return modalMap[state];\n    }\n  }\n\n})();","(function() {\n  'use strict';\n  angular\n      .module('cn.flex-form')\n      .provider('cnFlexFormTypes', cnFlexFormTypesProvider);\n\n  function cnFlexFormTypesProvider() {\n\n    var fieldTypeRegister = [{\n      condition: field => field.type === 'hidden',\n      type: 'hidden'\n    }, {\n      condition: field => field.type.includes('radios'),\n      type: 'cn-radios'\n    }, {\n      condition: field => field.type.includes('radiobuttons'),\n      type: 'cn-radiobuttons'\n    }, {\n      condition: field => field.type.includes('autocomplete') || field.titleMap || field.titleMapResolve || field.titleMapQuery,\n      type: 'cn-autocomplete'\n    }, {\n      condition: field => field.type === 'cn-datetimepicker' || field.type === 'datetime-local',\n      type: 'cn-datetimepicker'\n    }, {\n      condition: field => field.type === 'help',\n      type: 'help'\n    }, {\n      condition: field => field.type.includes('display'),\n      type: 'cn-display'\n    }, {\n      condition: field => field.schema && field.schema.format && field.schema.format.includes('currency'),\n      type: 'cn-currency'\n    }, {\n      condition: field => field.schema && field.schema.format === 'percentage',\n      type: 'cn-percentage'\n    }, {\n      condition: field => field.type === 'toggle' || field.type === 'boolean',\n      type: 'cn-toggle'\n    }, {\n      condition: field => field.type === 'mediaupload',\n      type: 'cn-mediaupload'\n    }, {\n      condition: field => field.type === 'csvupload',\n      type: 'cn-csvupload'\n    }, {\n      condition: field => field.type === 'reusable',\n      type: 'cn-reusable'\n    }, {\n      condition: field => field.type === 'array',\n      type: 'section'\n    }];\n\n    return {\n      registerFieldType: registerFieldType,\n      $get: cnFlexFormTypes\n    };\n\n    ////////\n\n    function registerFieldType(fieldType) {\n      fieldTypeRegister.unshift(fieldType);\n    }\n\n    function cnFlexFormTypes() {\n      return {\n        fieldTypeRegister: fieldTypeRegister,\n        getFieldType: getFieldType\n      };\n\n      /////////\n\n      function getFieldType(field) {\n        for(var i = 0, l = fieldTypeRegister.length; i < l; i++) {\n          if(fieldTypeRegister[i].condition(field)) {\n            return fieldTypeRegister[i].type;\n          }\n        }\n        return field.type || field.schema && field.schema.type;\n      }\n    }\n\n  }\n\n})();","(function() {\n  'use strict';\n  angular\n      .module('cn.flex-form')\n      .directive('ffValidate', ffValidate);\n\n  function ffValidate() {\n    return {\n      restrict: 'A',\n      scope: { form: '=ffValidate' },\n      require: 'ngModel',\n      link: link\n    };\n  }\n\n  function link($scope, elem, attrs, ngModel) {\n    //console.log('$scope, ngModel:', $scope.form, ngModel);\n    if($scope.form && $scope.form.required) {\n      $scope.$watch(function() { return ngModel.$viewValue; }, function(value) {\n        // override schemaForm validation\n        ngModel.$setValidity('schemaForm', true);\n        ngModel.$setValidity('tv4-302', value);\n      });\n    }\n  }\n})();","(function() {\n  'use strict';\n  angular\n      .module('cn.flex-form')\n      .directive('cnFlexForm', cnFlexForm);\n\n  function cnFlexForm() {\n    return {\n      restrict: 'E',\n      template: '\\\n        <div ng-if=\"vm.showForm()\">\\\n          <ng-form name=\"{{vm.formName}}\"\\\n                sf-schema=\"vm.config.schema.schema\"\\\n                sf-form=\"vm.form\"\\\n                sf-model=\"vm.model\"></ng-form>\\\n          <!-- debug panel to display model -->\\\n          <pre ng-if=\"vm.debug\">{{vm.model|json}}</pre>\\\n        </div>\\\n      ',\n      scope: {\n        config: '=ffConfig',\n        model: '=ffModel',\n        formIndex: '=ffFormIndex',\n        formName: '=ffFormName',\n        delayForm: '=ffDelayForm',\n        cleanupEvent: '=ffCleanupEvent'\n      },\n      controller: FlexForm,\n      controllerAs: 'vm',\n      bindToController: true\n    };\n  }\n\n  FlexForm.$inject = ['cnFlexFormService', '$scope', '$location'];\n  function FlexForm(cnFlexFormService, $scope, $location) {\n    var vm = this;\n    vm.service = undefined;\n    vm.events = [];\n\n    vm.activate = activate;\n    vm.cleanup = cleanup;\n    vm.process = process;\n    vm.showForm = showForm;\n\n    vm.events.push($scope.$watch(function() { return vm.config.schema; }, vm.process));\n\n    vm.activate();\n\n    $scope.$on(vm.cleanupEvent || '$destroy', vm.cleanup);\n\n    //////////\n\n    function activate() {\n      //console.log('vm.formName:', vm.formName);\n      if(angular.isNumber(vm.formIndex)) {\n        vm.form = vm.config.schema.forms[vm.formIndex].form;\n      }\n      else {\n        vm.form = vm.config.schema.form;\n      }\n\n      // debug\n      if($location.search().debug) {\n        vm.debug = true;\n      }\n    }\n\n    function process(cur, prev) {\n      //console.log('process:', cur, prev);\n      if(vm.form) {\n        if(!vm.service) {\n          vm.service = cnFlexFormService(vm.config.schema, vm.model, {\n            formCtrl: vm.config.formCtrl,\n            getSchema: vm.config.getSchema,\n            updateSchema: updateSchema\n          });\n        }\n        else {\n          console.log('vm.service.isCompiled():', vm.service.isCompiled());\n          vm.service.compile(vm.config.schema, vm.model);\n        }\n        //$scope.$broadcast('schemaFormRedraw');\n      }\n    }\n\n    function showForm() {\n      //console.log('showForm:', vm.delayForm, vm.formName);\n      return !vm.delayForm && vm.service && vm.service.isCompiled();\n    }\n\n    function updateSchema(schema) {\n      vm.config.schema = schema;\n      vm.activate();\n    }\n\n    function cleanup() {\n      _.each(vm.events, function(listener) {\n        listener();\n      });\n      vm.service.cleanup();\n    }\n\n  }\n})();","(function() {\n  angular\n      .module('cn.flex-form')\n      .provider('cnFlexFormRoutes', cnFlexFormRoutesProvider)\n      .config(cnFlexFormRoutes);\n\n  cnFlexFormRoutesProvider.$inject = ['$stateProvider'];\n  function cnFlexFormRoutesProvider($stateProvider) {\n    var provider = {\n      addStates: addStates,\n      $get: $get\n    };\n\n    return provider;\n\n    ////////////\n\n    function $get() {\n      // nothing to do here, but required\n    }\n\n    function addStates(options) {\n      $stateProvider\n          .state(options.name + '.page.modal', {\n            url: '/~:modal/:modalId',\n            controller: 'FlexFormModalLoader',\n            controllerAs: 'vm',\n            permissions: options.permissions\n          });\n    }\n  }\n\n  cnFlexFormRoutes.$inject = ['$stateProvider'];\n  function cnFlexFormRoutes($stateProvider) {\n\n    $stateProvider\n        .state('flex-form-sandbox', {\n          url: '/flex-form/sandbox',\n          controller: 'FlexFormSandbox',\n          controllerAs: 'vm',\n          templateUrl: 'app/components/cn-flex-form/sandbox.html'\n        });\n  }\n\n})();","(function() {\n  'use strict';\n  angular\n      .module('cn.flex-form')\n      .provider('cnFlexFormService', cnFlexFormServiceProvider);\n\n  var fieldTypeHandlers = {\n    //'cn-radios': 'processRadios',\n    'cn-radiobuttons': 'processRadiobuttons',\n    'cn-autocomplete': 'processSelect',\n    'cn-datetimepicker': 'processDate',\n    'help': 'processHelp',\n    'cn-display': 'processDisplay',\n    'cn-currency': 'processCurrency',\n    'cn-percentage': 'processPercentage',\n    'cn-mediaupload': 'processMediaUpload',\n    'cn-csvupload': 'processCsvUpload',\n    'cn-reusable': 'processReusable',\n    'cn-toggle': 'processToggle',\n    'section': 'processSection'\n  };\n\n  cnFlexFormServiceProvider.$inject = [\n    'schemaFormDecoratorsProvider',\n    'cnFlexFormTypesProvider'\n  ];\n\n  function cnFlexFormServiceProvider(schemaFormDecoratorsProvider,\n                                     cnFlexFormTypesProvider) {\n    return {\n      registerField: registerField,\n      $get: CNFlexFormService\n    };\n\n    //////////\n\n    function registerField(fieldType) {\n      if(fieldType.condition) {\n        cnFlexFormTypesProvider.registerFieldType({\n          condition: fieldType.condition,\n          type: fieldType.type\n        });\n      }\n\n      if(fieldType.handler) {\n        fieldTypeHandlers[fieldType.type] = fieldType.handler;\n      }\n\n      if(fieldType.templateUrl) {\n        schemaFormDecoratorsProvider.addMapping(\n            'bootstrapDecorator',\n            fieldType.type,\n            fieldType.templateUrl\n        );\n        schemaFormDecoratorsProvider.createDirective(\n            fieldType.type,\n            fieldType.templateUrl\n        );\n      }\n    }\n  }\n\n  CNFlexFormService.$inject = [\n    'Api', '$parse', 'cnFlexFormConfig', 'cnFlexFormTypes', 'sfPath',\n    '$interpolate', '$rootScope', '$timeout', 'cnUtil', '$stateParams'\n  ];\n\n  function CNFlexFormService(Api, $parse, cnFlexFormConfig, cnFlexFormTypes, sfPath,\n                             $interpolate, $rootScope, $timeout, cnUtil, $stateParams) {\n\n    var services = [];\n    var prototype = {\n      compile,\n      addArrayCopy,\n      addToDataCache,\n      addToFormCache,\n      broadcastErrors,\n      buildError,\n      cleanup,\n      deregisterHandlers,\n      deregisterArrayHandlers,\n      getArrayCopies,\n      getArrayCopiesFor,\n      getFromDataCache,\n      getFromFormCache,\n      getKey,\n      getSchema,\n      handleResolve,\n      initArrayCopyWatch,\n      initModelWatch,\n      initSchemaParams,\n      isCompiled,\n      isConditionFunction,\n      onModelWatch,\n      parseCondition,\n      parseExpression,\n      processDefault,\n      processDisplay,\n      processField,\n      processFieldset,\n      processFieldWatch,\n      processComponent,\n      processCurrency,\n      processPercentage,\n      processDate,\n      processHelp,\n      //processRadios,\n      processRadiobuttons,\n      processReusable,\n      processSchema,\n      processSelectDisplay,\n      processResolve,\n      processSection,\n      processSelect,\n      processTemplate,\n      processToggle,\n      processUpdatedSchema,\n      processMediaUpload,\n      processCsvUpload,\n      registerArrayHandlers,\n      registerHandler,\n      registerResolve,\n      reprocessField,\n      setArrayIndex,\n      setupConfig,\n      setupSchemaRefresh\n    };\n\n    function CNFlexFormConstructor(schema, model, config) {\n      var service;\n      if(services.length) {\n        for(var i = 0, l = services.length; i < l; i++) {\n          if(services[i].model === model) {\n            service = services[i];\n            //console.log('service.compile:', service.compile);\n            service.compile(schema, model, config);\n            break;\n          }\n        }\n        //console.log('services1:', services, service);\n      }\n      if(!service) {\n        service = new CNFlexForm(schema, model, config);\n        services.push(service);\n        //console.log('services2:', services, service);\n      }\n      return service || new CNFlexForm(schema, model, config);\n    }\n\n    function CNFlexForm(schema, model, config) {\n\n      if($stateParams.debug) {\n        window.services = services;\n      }\n\n      this.arrayCopies = {};\n      this.arrayListeners = {};\n      this.dataCache = {};\n      this.defaults = {};\n      this.errors = [];\n      this.events = [];\n      this.formCache = {};\n      this.listeners = {};\n      this.resolveRegister = {};\n      this.model = model;\n      this.updates = 0;\n\n      this.params = cnFlexFormConfig.getStateParams();\n\n      this._ = _;\n\n      this.compile(schema, model, config);\n    }\n\n    _.extend(CNFlexForm.prototype, prototype);\n    _.extend(CNFlexFormConstructor, prototype);\n\n    return CNFlexFormConstructor;\n\n    //////////////\n\n    function compile(schema, model, config) {\n      var service = this;\n\n      service.schema = schema;\n      service.model = model;\n\n      //console.log('compile:schema, model:', schema.compiled, service.isCompiled(), schema, model);\n      if(!service.isCompiled()) {\n        service.setupConfig(config);\n\n        if(schema.forms) {\n          _.each(schema.forms, function(form) {\n            _.each(form.form, service.processField.bind(service));\n          });\n        }\n        else {\n          _.each(schema.form, service.processField.bind(service));\n        }\n\n        service.initModelWatch();\n        service.initArrayCopyWatch();\n        service.isCompiled(true);\n      }\n\n      service.broadcastErrors();\n    }\n\n    function isCompiled(setValue) {\n      var service = this;\n      if(setValue) {\n        service.schema.compiled = setValue;\n      }\n      return service.schema && service.schema.compiled;\n    }\n\n    function setupConfig(config) {\n      var service = this;\n      if(config) {\n        if(config.formCtrl) service.formCtrl = config.formCtrl;\n        if(config.updateSchema) service.updateSchema = config.updateSchema;\n        if(config.getSchema) service.getSchemaForm = service.setupSchemaRefresh(config.getSchema);\n      }\n    }\n\n    function processSchema(field) {\n      var service = this,\n          schema = field.schema;\n\n      if(schema) {\n\n        field.getSchemaType = function() {\n          return _.isArray(schema.type) ? _.first(schema.type) : schema.type;\n        };\n\n        service.processDefault(field);\n      }\n    }\n\n    function processDefault(field) {\n      var service = this,\n          schema = field.schema;\n      //console.log('processDefault:', field.key, schema, service.updates);\n      if(schema.default) {\n        var key = service.getKey(field.key);\n        // if schemaUpdate hasn't been triggered, let schemaForm directive handle defaults\n        if(service.updates) {\n          if(key.includes && key.includes('[]')) return;\n          var model = service.parseExpression(field.key, service.model);\n          var modelValue = model.get();\n          // if there's an existing default and it's the same as the current value\n          // update the current value to the new default\n          //console.error('default:', key, modelValue, service.defaults[key], angular.equals(modelValue, service.defaults[key]));\n          if(!service.defaults[key] || _.isUndefined(modelValue) || angular.equals(modelValue, service.defaults[key])) {\n            model.set(schema.default);\n          }\n        }\n        service.defaults[key] = angular.copy(schema.default);\n      }\n    }\n\n    function processFieldset(fieldset) {\n      var service = this;\n\n      fieldset.type = 'cn-fieldset';\n      _.each(fieldset.items, service.processField.bind(service));\n\n      if(fieldset.collapsible) {\n        fieldset.toggleCollapse = function() {\n          if(fieldset.collapsible) {\n            fieldset.collapsed = !fieldset.collapsed;\n          }\n        };\n\n        fieldset.render = !fieldset.collapsed;\n      }\n      else {\n        fieldset.render = true;\n      }\n    }\n\n    function processField(field) {\n      var service = this;\n\n      if (field.selectDisplay) {\n        service.processSelectDisplay(field, service.getSchema(field.key));\n      }\n\n      if(field.type === 'fieldset') {\n        service.processFieldset(field);\n      }\n      else {\n        if(!field._ogKeys) {\n          field._ogKeys = _.without(_.keys(field), 'key', 'htmlClass');\n        }\n\n        var key = service.getKey(field.key);\n\n        if(field.key) {\n          service.addToFormCache(field, key);\n          field.schema = service.getSchema(key);\n\n          if(/*!field.immutable && */field.schema) {\n            if(field.schema.description) field.description = field.schema.description;\n            if(field.readonly && !field.schema.readonly) field.readonly = false;\n          }\n        }\n\n        service.processSchema(field);\n\n        if(!field.type) field.type = field.getSchemaType && field.getSchemaType();\n\n        if(field.resolve) service.processResolve(field);\n\n        if(field.watch) service.processFieldWatch(field);\n\n        if(field.type === 'section' || field.type === 'tabarray') {\n          service.processSection(field);\n        }\n        else if(field.type === 'component') {\n          service.processComponent(field);\n        }\n        else {\n\n          var fieldType = cnFlexFormTypes.getFieldType(field);\n          var handler = fieldTypeHandlers[fieldType];\n          if(_.isString(handler)) {\n            service[handler](field);\n          }\n          else if(_.isFunction(handler)) {\n            handler.call(service, field);\n          }\n\n          if(field.updateSchema) {\n            service.registerHandler(field, null, field.updateSchema);\n          }\n          if(field.error) {\n            service.errors.push(service.buildError(field));\n            if (_.isEmpty(field.ngModelOptions)) {\n              field.ngModelOptions = {\n                allowInvalid: true\n              };\n            } else {\n              field.ngModelOptions.allowInvalid = true;\n            }\n          }\n          else if(_.find(service.errors, {key: key})) {\n            service.errors = _.reject(service.errors, {key: key});\n            $rootScope.$broadcast('schemaForm.error.' + key, 'schemaForm', true);\n            $rootScope.$broadcast('schemaForm.error.' + key, 'serverValidation', true);\n          }\n        }\n      }\n    }\n\n    function getKey(key) {\n      if(_.isArray(key)) {\n        key = _.reduce(key, function(total, next) {\n          if(/^(\\d*)$/.test(next)) {\n            return total + '[' + next + ']';\n          }\n          return total + '.' + next;\n        });\n      }\n      return key;\n    }\n\n    function getSchema(key, depth) {\n      var service = this;\n      if(!key) return;\n\n      key = service.getKey(key);\n\n      //console.log('getSchema:', key, depth, service);\n      //key = key.split('.');\n      //key = key\n      //    .replace(/arrayIndex/g, '')\n      //    .replace(/(\\[')([^.]+)\\.([^.]+)('])/g, '.$2%ff_dt%$3')\n      //    .replace(/\\./g, '%ff_sp%')\n      //    .replace(/%ff_dt%/g, '.')\n      //    .split('%ff_sp%');\n      key = sfPath.parse(key);\n      depth = depth || service.schema.schema.properties;\n\n      //console.log('key:', key);\n\n      var first, matchArray;\n\n      while(key.length > 1) {\n        first = key[0];\n        matchArray = first.match(/\\[\\d*]$/);\n        //if(first.slice(first.length - 2) === '[]') {\n        if(matchArray) {\n          depth = depth[key.shift().slice(0, first.length - matchArray[0].length)].items.properties;\n        }\n        else {\n          depth = depth[key.shift()].properties;\n        }\n      }\n\n      first = key[0];\n      matchArray = first.match(/\\[\\d*]$/);\n\n      if(matchArray) {\n        return depth[first.slice(0, first.length - matchArray[0].length)].items;\n      }\n\n      return depth[first];\n    }\n\n    function processResolve(field) {\n      var service = this;\n\n      _.each(field.resolve, function(dataProp, fieldProp) {\n        service.handleResolve(field, fieldProp, dataProp);\n\n        var resolveType = dataProp.match(/^(schema\\.data\\.|model\\.)(\\w+)/);\n\n        if(resolveType) {\n          if(resolveType[1] === 'schema.data.') {\n            service.registerResolve(field, fieldProp, resolveType[2]);\n          }\n          else if(resolveType[1] === 'model.') {\n            service.registerHandler(resolveType[2], function() {\n              service.handleResolve(field, fieldProp, dataProp);\n            });\n          }\n        }\n      });\n\n      return field;\n    }\n\n    function handleResolve(field, fieldProp, exp) {\n      var service = this;\n      var data = service.parseExpression(exp).get();\n      if (data && data.cursor) {\n        field.loadMore = function() {\n          var dataProp = exp.match(/schema\\.data\\.(.+)/)[1];\n          service.refreshSchema(`data:${dataProp}:${data.cursor}`);\n        };\n      } else {\n        delete field.loadMore;\n      }\n      field[fieldProp] = (data && data.data) ? data.data : data;\n    }\n\n    function registerResolve(field, fieldProp, dataProp) {\n      var service = this;\n\n      let fieldKey = service.getKey(field.key);\n      service.resolveRegister[dataProp] = service.resolveRegister[dataProp] || {};\n\n      let register = service.resolveRegister[dataProp];\n      register[fieldKey] = register[fieldKey] || [];\n      register[fieldKey].push({\n        field: field,\n        prop: fieldProp\n      });\n    }\n\n    function processFieldWatch(field) {\n      var service = this,\n          schema = field.schema;\n\n      field.watch = _.isArray(field.watch) ? field.watch : [field.watch];\n\n      _.each(field.watch, function(watch) {\n        if(watch.resolution) {\n          var condition = watch.condition;\n          var functionCondition = service.isConditionFunction(condition);\n\n          var resolution = watch.resolution;\n          var handler;\n\n          //console.log('resolution:', resolution);\n          if(_.isFunction(resolution)) {\n            handler = function(cur, prev) {\n              var parsedCondition = functionCondition ? service.parseCondition(functionCondition) : condition;\n              if(!parsedCondition || $parse(parsedCondition)(service)) {\n                resolution(cur, prev);\n              }\n            };\n          }\n          else {\n            var adjustment = {};\n\n            adjustment.date = resolution.match(/\\+ ?(\\d+) days/);\n\n            if(adjustment.date) {\n              adjustment.date = adjustment.date[1];\n              resolution = resolution.replace(adjustment.date, '').trim();\n            }\n            else {\n              adjustment.math = resolution.match(/(\\+|\\-|\\/|\\*) ?(\\S+)/);\n\n              if(adjustment.math) {\n                adjustment.operator = {\n                  '+': 'add',\n                  '-': 'subtract',\n                  '*': 'multiply',\n                  '/': 'divide'\n                }[adjustment.math[1]];\n\n                //console.log('adjustment:', adjustment);\n                adjustment.adjuster = service.parseExpression(adjustment.math[2]);\n              }\n            }\n\n            resolution = resolution.match(/(\\S+) ?= ?(\\S+)/);\n            //console.log('resolution:', resolution);\n\n            handler = function() {\n              var updatePath, fromPath;\n              if(resolution[1].includes('arrayIndex')) {\n                updatePath = replaceArrayIndex(resolution[1], arguments[2]);\n              }\n              if (resolution[2].includes('arrayIndex')) {\n                fromPath = replaceArrayIndex(resolution[2], arguments[2]);\n              }\n              var update = service.parseExpression(updatePath || resolution[1]);\n              var from = service.parseExpression(fromPath || resolution[2]);\n\n              //console.log('handler:resolution:', field.key, condition, condition && $parse(condition)(service));\n              var parsedCondition = functionCondition ? service.parseCondition(functionCondition, condition) : condition;\n              //if(functionCondition) {\n              //  console.log('parsedCondition:', parsedCondition, $parse(parsedCondition)(service));\n              //}\n              if(!parsedCondition || $parse(parsedCondition)(service)) {\n                //console.log('update:', update.get(), from.get());\n                if(adjustment.date) {\n                  update.set(moment(from.get()).add(adjustment.date, 'days').toDate());\n                }\n                else if(adjustment.math) {\n                  //var result = _[adjustment.operator](from.get(), adjustment.adjuster.get());\n                  //console.log('_.%s(%s, %s):', adjustment.operator, from.get(), adjustment.adjuster.get(), result);\n                  var result = eval(from.get() + adjustment.math[1] + adjustment.adjuster.get());\n                  //console.log('eval(%s %s %s):', from.get(), adjustment.math[1], adjustment.adjuster.get(), result);\n                  //console.log('result:', result);\n                  //console.log('adjustment.math:', adjustment, from.get(), adjustment.adjuster.get(), result);\n                  //console.log('schema.format:', schema.format);\n                  schema = schema || field.items && (field.items[0].schema || (field.items[0].items && field.items[0].items[0].schema));\n                  if(field.type === 'cn-currency') {\n                    //console.log('schema.format:', schema.format, result);\n                    var p = schema && schema.format === 'currency-dollars' ? 2 : 0;\n\n                    if(adjustment.math[1] === '*') {\n                      result = _.floor(result, p);\n                    }\n                    else if(adjustment.math[1] === '/') {\n                      result = _.ceil(result, p);\n                    }\n                    else {\n                      result = _.round(result, p);\n                    }\n                  }\n                  service.listeners[update.path().key].prev = result;\n                  update.set(result || 0);\n                }\n                else {\n                  update.set(from.get());\n                }\n              }\n            };\n          }\n\n          service.registerHandler(field, handler, field.updateSchema, watch.initialize);\n        }\n      });\n    }\n\n    function isConditionFunction(condition) {\n      return condition && condition.match(/(\\!?)(.+)\\((.+)\\)/);\n    }\n\n    function parseCondition(condition, original) {\n      var service = this,\n          invert = condition[1],\n          functionName = condition[2],\n          functionArgument = condition[3];\n\n      if(functionName === 'any') {\n        var predicate = functionArgument.match(/(.+)\\[\\]\\.*(.*)(===|>|<|>=|<=)(.+)/),\n            arr = service.parseExpression(predicate[1]).get(),\n            comparator = predicate[3],\n            comparisonValue = predicate[4].trim().replace(/'/g, ''),\n            key = predicate[2].trim(),\n            evaluation = false;\n\n        arr.forEach(function(value) {\n          var val = key ? value[key] : value;\n          if(evaluatePredicate(val, comparator, comparisonValue)) {\n            evaluation = true;\n          }\n        });\n\n        return invert ? (!evaluation).toString() : evaluation.toString();\n      }\n      else {\n        condition = original.replace(/model\\./g, 'service.model.');\n        //console.log('eval:', condition, eval(condition));\n        // stupid hack so we can evaluate the evaluated results\n        return !!eval(condition) + '';\n      }\n    }\n\n    function evaluatePredicate(val1, comparator, val2) {\n      switch(comparator) {\n        case '===': return val1 === val2;\n        case '>=': return val1 >= val2;\n        case '<=': return val1 <= val2;\n        case '>': return val1 > val2;\n        case '<': return val1 < val2;\n      }\n    }\n\n    function registerHandler(key, handler, updateSchema, runHandler) {\n      var service = this;\n\n      // if field is passed instead of key\n      if(_.isObject(key) && !_.isArray(key)) {\n        if(!key.key && key.items) {\n          _.each(key.items, function(field) {\n            service.registerHandler(field, handler, field.updateSchema);\n          });\n          return;\n        }\n        else {\n          key = key.key;\n        }\n      }\n\n      key = service.getKey(key);\n      var arrMatch = key.match(/([^[\\]]*)\\[]\\.?(.+)/);\n\n      if(arrMatch) {\n        service.registerArrayHandlers(arrMatch[1], arrMatch[2], handler, updateSchema, runHandler);\n        return;\n      }\n\n      var cur = service.parseExpression(key, service.model).get();\n\n      if(!service.listeners[key]) {\n        var prev = angular.copy(cur);\n        //console.log('prev:', key, prev, angular.equals(prev, service.parseExpression(key, service.model).get()));\n        service.listeners[key] = {\n          handlers: [],\n          updateSchema: updateSchema,\n          prev: prev\n        };\n      }\n\n      if(handler) {\n        service.listeners[key].handlers.push(handler);\n        if(runHandler) handler(cur, null, key);\n      }\n    }\n\n    function registerArrayHandlers(arrKey, fieldKey, handler, updateSchema, runHandler) {\n      //console.log('registerArrayHandlers:', arrKey, fieldKey);\n      var service = this;\n      var onArray = function(cur, prev) {\n        var i, l, key;\n\n        if(prev && prev > cur) {\n          var lastKey = arrKey + '[' + (prev - 1) + ']' + '.' + fieldKey;\n          // only deregister handlers once each time an element is removed\n          if (service.listeners[lastKey]) {\n            for(i = 0, l = prev; i < l; i++) {\n              key = arrKey + '[' + i + ']' + '.' + fieldKey;\n              service.deregisterHandlers(key);\n            }\n          }\n          for(i = 0, l = cur; i < l; i++) {\n            key = arrKey + '[' + i + ']' + '.' + fieldKey;\n            service.registerHandler(key, handler, updateSchema);\n            //no need to call if just reregisering handlers\n            //if(runHandler) handler(null, null, key);\n          }\n        }\n        else if(cur > (prev || 0)) {\n          for(i = prev, l = cur; i < l; i++) {\n            key = arrKey + '[' + i + ']' + '.' + fieldKey;\n            service.registerHandler(key, handler, updateSchema, runHandler);\n            //if(runHandler) handler(null, null, key);\n          }\n        }\n      };\n\n      var arrVal = service.parseExpression(arrKey, service.model).get();\n      _.each(arrVal, function(field, i) {\n        var key = arrKey + '[' + i + ']' + '.' + fieldKey;\n        service.registerHandler(key, handler, updateSchema);\n        if(runHandler) handler(null, null, key);\n      });\n\n      if(service.arrayListeners[arrKey + '.length']) {\n        service.arrayListeners[arrKey + '.length'].handlers.push(onArray);\n      } else {\n        service.arrayListeners[arrKey + '.length'] = {\n          handlers: [onArray],\n          prev: arrVal ? arrVal.length : 0\n        };\n      }\n    }\n\n    function deregisterHandlers(key) {\n      var service = this;\n\n      key = service.getKey(key);\n      var arrMatch = key.match(/([^[\\]]*)\\[]\\.?(.+)/);\n\n      if(arrMatch) {\n        service.deregisterArrayHandlers(arrMatch[1], arrMatch[2]);\n        return;\n      }\n\n      //console.log('deregisterHandlers:', key);\n      if(service.listeners[key]) service.listeners[key].handlers = [];\n    }\n\n    function deregisterArrayHandlers(arrKey, fieldKey) {\n      var service = this;\n\n      //console.log('deregisterArrayHandlers:', arrKey, fieldKey);\n\n      service.parseExpression(arrKey, service.model).get().forEach((item, i) => {\n        service.deregisterHandlers(`${arrKey}[${i}].${fieldKey}`);\n      });\n    }\n\n    function initModelWatch() {\n      //console.log('initModelWatch:', initModelWatch);\n      var service = this;\n      if(service.watching) return;\n      if(service.modelWatch) service.modelWatch();\n\n      service.modelWatch = $rootScope.$watch(\n          function() { return service.model; },\n          service.onModelWatch.bind(service),\n          true\n      );\n\n      service.initSchemaParams();\n      service.watching = true;\n      service.firstUpdate = true;\n    }\n\n    function onModelWatch(cur, prev) {\n      var service = this;\n      // we always run through the listeners on the first update because angular seems to mess up\n      // when the defaults are applied and uses the same object for both cur and prev\n      if(service.firstUpdate || !angular.equals(cur, prev)) {\n        service.firstUpdate = false;\n        cnUtil.cleanModel(service.model);\n\n        service.prevParams = angular.copy(service.params);\n        service.params = {};\n\n        _.each(service.arrayListeners, function(listener, key) {\n          var val = service.parseExpression(key, service.model).get();\n          if(!angular.equals(val, listener.prev)) {\n            _.each(listener.handlers, function(handler) {\n              handler(val, listener.prev);\n            });\n            listener.prev = angular.copy(val);\n          }\n        });\n\n        _.each(service.listeners, function(listener, key) {\n          if(listener) {\n            var val = service.parseExpression(key, service.model).get();\n            //console.log('listener:', key, val, listener.prev, angular.equals(val, listener.prev));\n            if(!angular.equals(val, listener.prev)) {\n              _.each(listener.handlers, function(handler) {\n                handler(val, listener.prev, key);\n              });\n              listener.prev = angular.copy(val);\n            }\n            if(listener.updateSchema && !angular.isUndefined(val) && val !== null) {\n              service.params[key] = val;\n            }\n          }\n        });\n\n        //console.log('service.params, service.prevParams:', service.params, service.prevParams, !angular.equals(service.params, service.prevParams), service.updates);\n        if(!angular.equals(service.params, service.prevParams)) {\n          if(service.model.id && !service.updates && _.isEmpty(service.prevParams)) {\n            ++service.updates;\n          }\n          else {\n            service.refreshSchema();\n          }\n        }\n      }\n    }\n\n    function initSchemaParams() {\n      var service = this;\n      _.each(service.listeners, function(listener, key) {\n        if(listener) {\n          var val = service.parseExpression(key, service.model).get();\n          if(listener.updateSchema && !angular.isUndefined(val) && val !== null) {\n            service.params[key] = val;\n          }\n        }\n      });\n    }\n\n    function initArrayCopyWatch() {\n      console.log('initArrayCopyWatch: how many times does this event get registered?');\n      var service = this;\n\n      //TODO: refactor this, only register event once\n      service.events.push($rootScope.$on('schemaFormPropagateScope', function(event, scope) {\n        var key = service.getKey(scope.form.key);\n        var index = key.match(/^.*\\[(\\d+)].*$/);\n\n        key = key.replace(/\\[\\d+]/g, '[]');\n        index = index && parseInt(index[1]);\n        //console.log('key, index, scope.form.key, scope.form:', key, index, scope.form.key, scope.form);\n\n        if(!scope.form.condition) scope.form.condition = 'true';\n\n        service.addArrayCopy(scope.form, key, index);\n        //console.log('service.arrayCopies:', service.arrayCopies);\n        scope.$emit('flexFormArrayCopyAdded', key);\n      }));\n\n      service.events.push($rootScope.$on('schemaFormDeleteScope', function(event, scope, index) {\n        console.log('schemaFormDeleteScope:', index, scope.form, scope);\n        var key = service.getKey(scope.form.key).replace(/\\[\\d+]/g, '[]');\n        var copies = service.getArrayCopiesFor(key);\n\n        copies.forEach((list) => {\n          list.splice(index, 1);\n        });\n\n        if(scope.form.link) {\n          var list = service.parseExpression(scope.form.link, service.model).get();\n          list.splice(index, 1);\n        }\n      }));\n    }\n\n    function addArrayCopy(form, key, index) {\n      var service = this;\n      if(!index || index < 0) index = 0;\n      if(!service.arrayCopies[key]) service.arrayCopies[key] = [];\n      service.arrayCopies[key][index] = form;\n      //service.arrayCopies[key].push(form);\n    }\n\n    function getArrayCopies(key) {\n      var service = this;\n      return service.arrayCopies[key];\n    }\n\n    function getArrayCopiesFor(keyStart) {\n      var service = this;\n      var copiesList = [];\n      keyStart += '[]';\n\n      _.each(service.arrayCopies, (copies, key) => {\n        if(key.includes(keyStart)) copiesList.push(copies);\n      });\n\n      return copiesList;\n    }\n\n    function addToFormCache(field, key) {\n      var service = this;\n      key = key || service.getKey(field.key);\n      if(!service.getFromFormCache(key)) service.formCache[key] = field;\n    }\n\n    function getFromFormCache(key) {\n      var service = this;\n      return service.formCache[key];\n    }\n\n    function addToDataCache(key, modelValue) {\n      var service = this;\n\n      if(key) {\n        service.dataCache[key] = modelValue;\n      }\n    }\n\n    function getFromDataCache(key) {\n      var service = this;\n\n      return service.dataCache[key];\n    }\n\n    function parseExpression(exp, depth) {\n      var service = this;\n      // if expression is specific value\n      if(!exp || /^(null|false|true|undefined|''|[0-9.]+|\\[]|\\{})$/.test(exp)) {\n        return {\n          \"get\": function() {\n            return eval(exp);\n          }\n        };\n      }\n\n      exp = service.getKey(exp);\n\n      //var key;\n      var match = exp.match(/^(model\\.)?(\\S+)$/);\n\n      // cache fucks shit up if the model changes so disabling\n      //var cached;\n\n      // return from cache if possible\n      //if(!/\\[]/.test(exp) && match && match[2]) {\n      //  if(!depth || depth === service.model) {\n      //    key = match[2];\n      //\n      //    cached = service.getFromDataCache(key);\n      //    if(cached) {\n      //      return cached;\n      //    }\n      //  }\n      //}\n\n      var modelValue = {\n        \"get\": function() {\n          //var path = exp.replace(/\\[]/g, '').replace(/\\[(\\d+)]/g, '.$1').split('.');\n          var path = sfPath.parse(exp);\n          var start = depth || service;\n\n          while(start && path.length > 1) {\n            start = start[path.shift()];\n          }\n\n          //if(/\\[]/g.test(exp)) {\n          //  console.log('exp:', exp, start, start && start[path[0]]);\n          //}\n          return start && start[path[0]];\n        },\n        \"set\": function(val) {\n          //var path = exp.replace(/\\[]/g, '').replace(/\\[(\\d+)]/g, '.$1').split('.');\n          var path = sfPath.parse(exp);\n          var start = depth || service;\n\n          while(start && path.length > 1) {\n            var key = path.shift();\n            if(!start[key]) {\n              if(/^\\d?$/.test(path[0])) {\n                start[key] = [];\n              }\n              else {\n                start[key] = {};\n              }\n            }\n            start = start[key];\n          }\n\n          start[path[0]] = val;\n\n          return val;\n        },\n        \"path\": function() {\n          return {\n            exp: exp,\n            depth: depth,\n            key: match[2]\n          };\n        }\n      };\n\n      //if(key) {\n      //  service.addToDataCache(key, modelValue);\n      //}\n\n      return modelValue;\n    }\n\n    function processSection(section) {\n      var service = this;\n\n      _.each(section.items, service.processField.bind(service));\n    }\n\n    function processComponent(component) {\n      var service = this;\n\n      component.type = 'section';\n      component.htmlClass = 'row';\n\n      var cols = 12 / _.reject(component.items, 'hidden').length;\n\n      _.each(component.items, function(field, i) {\n        service.processField(field);\n        component.items[i] = {\n          type: 'section',\n          htmlClass: 'col-sm-' + cols,\n          items: [field]\n        };\n      });\n    }\n\n    function processCurrency(field) {\n      //console.log('processCurrency:', field);\n      field.currencyFormat = {\n        'currency-dollars': 'dollars',\n        'currency-microcents': 'microcents',\n        'currency': 'cents'\n      }[field.schema.format];\n\n      field.type = 'cn-currency';\n    }\n\n    function processPercentage(field) {\n      field.type = 'cn-percentage';\n    }\n\n    function processReusable(field) {\n      var service = this;\n      field.type = 'cn-reusable';\n      field.view = field.view || 'new';\n      field.items.forEach(service.processField.bind(service));\n      field.items = [{\n        type: 'section',\n        items: field.items,\n        condition: '!model.' + service.getKey(field.key) + '.id'\n      }];\n    }\n\n    function processMediaUpload(field) {\n      var service = this;\n      field.type = 'cn-mediaupload';\n      _.each(field.data, function(dataProp, key) {\n        field.data[key] = service.parseExpression(dataProp).get();\n      });\n    }\n\n    function processCsvUpload(field) {\n      var service = this;\n      field.type = 'cn-csvupload';\n      // _.each(field.data, function(dataProp, key) {\n      //   field.data[key] = service.parseExpression(dataProp).get();\n      // });\n    }\n\n    function processRadiobuttons(radios) {\n      var service = this;\n      radios.type = 'cn-radiobuttons';\n      if(radios.fullWidth) {\n        radios.btnClass = 'col-sm-' + _.divide(12, radios.titleMap.length);\n      }\n    }\n\n    function processDate(date) {\n      date.type = 'cn-datetimepicker';\n    }\n\n    function processSelect(select) {\n      var service = this,\n          schema = select.schema;\n\n      if(select.titleMapResolve || select.titleMap) {\n        select.getTitleMap = function() {\n          return select.titleMap || service.schema.data[select.titleMapResolve];\n        };\n\n        select.onInit = function(val, form, event, setter) {\n          var modelValue = service.parseExpression(form.key, service.model);\n          // make sure we have correct value\n          // console.log('init:', form.key, val, event);\n          val = modelValue.get();\n          if(event === 'tag-init') {\n            var newVal;\n            if(form.schema.type === 'array') {\n              if(form.schema.items.type !== 'object') {\n                newVal = [];\n                _.each(val, function(val) {\n                  var match = {};\n                  match[select.valueProperty || 'value'] = val;\n                  newVal.push(_.find(select.getTitleMap(), match));\n                });\n              }\n            }\n            else {\n              var match = {};\n              match[select.valueProperty || 'value'] = val;\n              newVal = _.find(select.getTitleMap(), match);\n            }\n            //console.log('newVal:', newVal);\n            if(newVal) setter(newVal);\n          }\n        };\n      }\n\n      if(select.titleMapQuery) {\n        var key = select.titleMapQuery.params.q;\n        select.titleQuery = function(q) {\n          console.log('titleMap:', q);\n          var params = {};\n          if(key) {\n            params[key] = q;\n          }\n          return Api.get({\n            url: select.titleMapQuery.url,\n            params: params\n          });\n        };\n\n        // wrap in string so returns truthy when compiled, but converted to number within directive\n        if(!key) select.minLookup = '0';\n\n        select.onInit = function(val, form, event, setter) {\n          //console.log('titleQuery:onInit:', val, form, event, setter);\n          if(event === 'tag-init') {\n            setter(val);\n          }\n        };\n      }\n\n      if(schema.items) {\n        var defaults = [];\n        _.each(schema.items.properties, function(schema, key) {\n          if(angular.isDefined(schema.default)) {\n            defaults.push({\n              \"key\": key,\n              default: schema.default\n            });\n          }\n        });\n        if(defaults.length) {\n          select.onAdd = function(val, form, event) {\n            if(val.value && event === 'tag-added') {\n              _.each(defaults, function(prop) {\n                //console.log('prop:', prop, val);\n                if(!val.value[prop.key]) val.value[prop.key] = prop.default;\n              });\n            }\n          };\n        }\n      }\n\n      if(!select.type.includes('cn-autocomplete')) {\n        if(select.items) {\n          select.detailedList = true;\n\n          if(select.items[0].type !== 'component') {\n            if(select.items.length > 1) {\n              select.items = [{\n                type: \"component\",\n                items: select.items\n              }];\n            }\n\n            service.processFieldset(select);\n          }\n\n          select.type = 'cn-autocomplete-detailed';\n        }\n        else {\n          if(!select.selectionStyle) {\n            if(select.key === 'tags') {\n              select.selectionStyle = 'tags';\n            }\n            else if(select.getSchemaType() === 'array' && select.schema.maxItems !== 1) {\n              select.selectionStyle = 'list';\n            }\n            else {\n              select.selectionStyle = 'select';\n            }\n          }\n          select.type = 'cn-autocomplete';\n        }\n      }\n\n      if(select.displayFormat) {\n        select.itemFormatter = service.processTemplate(select.displayFormat);\n      }\n\n      service.registerHandler(select.key, function(val) {\n        var form = service.formCtrl && service.formCtrl[service.getKey(select.key)];\n        if(form && form.$setDirty) form.$setDirty();\n      }, select.updateSchema);\n    }\n\n    function processToggle(toggle) {\n      toggle.type = 'cn-toggle';\n    }\n\n    function processHelp(help) {\n      help.htmlClass = 'help-block';\n    }\n\n    function processDisplay(display) {\n      var service = this;\n      display.type = 'cn-display';\n      display.getDisplay = service.processTemplate(display.displayFormat, true);\n    }\n\n    function processTemplate(tpl, parseScope) {\n      var service = this;\n      //console.log('tpl:', tpl);\n      //var processor = /<(\\S+)[^>]*>.*<\\/\\1>/.test(tpl) ? $compile : $interpolate;\n      var processor = $interpolate;\n      return function(scope, arrayIndex) {\n        //console.log('tpl, scope, processor:', tpl, scope, processor);\n        //console.log('processor(tpl)(scope):', processor(tpl)(scope));\n        if(parseScope) {\n          if(angular.isDefined(arrayIndex)) {\n            scope = _.map(scope, function(key) {\n              return key === 'arrayIndex' ? arrayIndex : key;\n            });\n          }\n          scope = service.parseExpression(scope, service.model).get();\n        }\n        return processor(tpl)(scope);\n      };\n    }\n\n    function processSelectDisplay(selectDisplay, schema) {\n      var service = this,\n          selectField = _.find(selectDisplay.items, 'selectField'),\n          handler;\n\n      if (schema && schema.type === 'array') {\n        handler = setupArraySelectDisplay(selectDisplay, selectField, service);\n      } else {\n        handler = setupSelectDisplay(selectDisplay, selectField, service);\n      }\n\n      selectDisplay.selectDisplay = false;\n      service.registerHandler(selectField.key, handler, selectField.updateSchema, true);\n      service.processField(selectDisplay);\n    }\n\n    function setupArraySelectDisplay(selectDisplay, selectField, service) {\n      _.each(selectDisplay.items, function(item) {\n        if(item.condition !== 'false') {\n          item.condition = 'true';\n        }\n      });\n      var handler = function() {\n        var index = getArrayIndex(arguments[2]);\n        _.each(selectDisplay.items, function(item) {\n          var selectKey = service.getKey(selectField.key);\n          var key = service.getKey(item.key);\n          var splitKey = ObjectPath.parse(key);\n          if (selectKey === key) return;\n          var indexedSelectKey = service.setArrayIndex(selectKey, index);\n          var selectValue = service.parseExpression(indexedSelectKey, service.model).get();\n          var formCopies = service.getArrayCopies(key);\n          if (_.includes(selectValue, splitKey[splitKey.length - 1])) {\n            _.each(formCopies, function(copy) {\n              if (getArrayIndex(copy) == index) {\n                copy.condition = 'true';\n              }\n            });\n          } else {\n            _.each(formCopies, function(copy) {\n              if (getArrayIndex(copy) == index) {\n                copy.condition = 'false';\n                service.parseExpression(service.getKey(copy.key), service.model).set();\n              }\n            });\n          }\n        });\n      };\n      // handle legacy objects that don't have values set in the selectField\n      var model = service.parseExpression(service.getKey(selectDisplay.key), service.model).get();\n      _.each(selectDisplay.items, function(item) {\n        var key = service.getKey(item.key);\n        var selectKey = service.getKey(selectField.key);\n        if (key === selectKey) return;\n        _.each(model, function(elem, i) {\n          var indexedKey = service.setArrayIndex(key, i);\n          var splitIndexedKey = ObjectPath.parse(indexedKey);\n          var indexedSelectKey = service.setArrayIndex(selectKey, i);\n          var selectModel = service.parseExpression(indexedSelectKey, service.model);\n          var selectValue = selectModel.get();\n          var itemValue = service.parseExpression(indexedKey, service.model).get();\n          if (itemValue && !_.includes(selectValue, splitIndexedKey[splitIndexedKey.length - 1])) {\n            if (!selectValue) {\n              selectValue = [];\n            }\n            selectValue.push(splitIndexedKey[splitIndexedKey.length - 1]);\n            selectModel.set(selectValue);\n          }\n        });\n      });\n      // handle new objects with values set in defaults\n      var defaults = service.getSchema(selectDisplay.key).default;\n      _.each(defaults, function(elem, i) {\n        var selectKey = service.getKey(selectField.key);\n        var indexedSelectKey = service.setArrayIndex(selectKey, i);\n        var selectModel = service.parseExpression(indexedSelectKey, service.model);\n        var selectValue = selectModel.get();\n        _.each(elem, function(val, key) {\n          if (!selectValue) {\n            selectValue = [];\n          }\n          selectValue.push(key);\n          selectModel.set(selectValue);\n        });\n      });\n      // run handler once all arrayCopies have been instantiated\n      var count = 0;\n      var keyMap = _.pluck(_.reject(selectDisplay.items, {\"condition\":\"false\"}), 'key');\n      var once = $rootScope.$on('flexFormArrayCopyAdded', function(event, key) {\n        var model = service.parseExpression(service.getKey(selectDisplay.key), service.model).get();\n        if (model) {\n          var total = model.length * (keyMap.length);\n          if (_.includes(keyMap, key)) {\n            count++;\n          }\n          if (count === total) {\n            for (var i = 0; i < model.length; i++) {\n              handler(null, null, '[' + i + ']');\n            }\n            count = 0;\n          }\n        }\n      });\n      var resetCount = $rootScope.$on('flexForm.updatePage', function() {\n        count = 0;\n      });\n      service.events.push(once);\n      service.events.push(resetCount);\n      return handler;\n    }\n\n    function setupSelectDisplay(selectDisplay, selectField, service) {\n      var handler = function() {\n        var selectKey = service.getKey(selectField.key);\n        _.each(selectDisplay.items, function(item) {\n          var key = service.getKey(item.key);\n          var splitKey = ObjectPath.parse(key);\n          if (selectKey === key) return;\n          var selectValue = service.parseExpression(selectKey, service.model).get();\n          if (_.includes(selectValue, splitKey[splitKey.length - 1])) {\n            item.condition = 'true';\n          } else {\n            item.condition = 'false';\n            service.parseExpression(key, service.model).set();\n          }\n        });\n      };\n      // handle legacy objects that don't have values set in the selectField\n      var selectKey = service.getKey(selectField.key);\n      var selectModel = service.parseExpression(selectKey, service.model);\n      var selectValue = selectModel.get();\n      _.each(selectDisplay.items, function(item) {\n        var key = service.getKey(item.key);\n        if (selectKey === key) return;\n        var splitKey = ObjectPath.parse(key);\n        var itemValue = service.parseExpression(key, service.model).get();\n        if (itemValue && !_.includes(selectValue, splitKey[splitKey.length - 1])) {\n          if (!selectValue) {\n            selectValue = [];\n          }\n          selectValue.push(splitKey[splitKey.length - 1]);\n          selectModel.set(selectValue);\n        }\n      });\n      // handle new objects with values set in the defaults\n      var defaults = service.getSchema(selectDisplay.key).default;\n      _.each(defaults, function(val, key) {\n        if (!selectValue) {\n          selectValue = [];\n        }\n        selectValue.push(key);\n        selectModel.set(selectValue);\n      });\n      // set default values here\n      var model = service.parseExpression(selectDisplay.key, service.model);\n      if (defaults && !model.get()) {\n        model.set(defaults);\n      }\n\n      return handler;\n    }\n\n    function setupSchemaRefresh(refresh) {\n      var service = this;\n      service.refreshSchema = _.debounce(function(updateSchema) {\n        var params = _.extend(cnFlexFormConfig.getStateParams(), service.params);\n        console.log('service.schema.params, params:', service.schema.params, params);\n        var diff = cnUtil.diff(service.schema.params, params, true);\n        var keys;\n\n        if(diff || updateSchema) {\n          if (updateSchema) params.updateSchema = updateSchema;\n          else {\n            keys = _.keys(diff);\n\n            if(keys.length > 1) {\n              diff = _.omit(diff, _.isNull);\n              keys = _.keys(diff);\n            }\n            //console.log('keys, diff:', keys, diff, {\n            //  cur: _.clone(params),\n            //  prev: _.clone(service.schema.params)\n            //});\n\n            params.updateSchema = _.first(keys);\n          }\n\n          if(!params.updateSchema) {\n            diff = cnUtil.diff(params, _.omit(service.schema.params, 'updateSchema'));\n            keys = _.keys(diff);\n\n            //console.log('keys, diff:', keys, diff);\n            params.updateSchema = _.first(keys);\n          }\n\n          refresh(params).then(function(schema) {\n            ++service.updates;\n            //service.updateSchema(schema);\n            service.processUpdatedSchema(schema);\n          });\n        }\n      }, 100);\n\n      service.refreshData = _.debounce(function() {\n        refresh(_.extend(service.schema.params, {updateSchema: 'refreshData'})).then(function(schema) {\n          service.processUpdatedSchema(schema);\n          console.log('service.schema.params:', service.schema.params);\n        });\n      }, 100);\n\n      service.events.push($rootScope.$on('ffRefreshData', service.refreshData));\n    }\n\n    function processUpdatedSchema(schema) {\n      var service = this;\n      if(schema.diff) {\n        service.schema.params = schema.params;\n\n        if(schema.diff.data) {\n          _.each(schema.diff.data, (data, prop) => {\n            if(data && data.data && !_.isEmpty(service.schema.data[prop].data) && !data.reset) {\n              data.data = service.schema.data[prop].data.concat(data.data);\n            }\n            service.schema.data[prop] = data;\n            if(service.resolveRegister[prop]) {\n              _.each(service.resolveRegister[prop], (registers) => {\n                registers.forEach(register => {\n                  service.handleResolve(register.field, register.prop, `schema.data.${prop}`);\n                });\n              });\n            }\n          });\n        }\n\n        var keys = [];\n\n        if(schema.diff.schema) {\n          _.each(schema.diff.schema, function(schema, key) {\n            service.schema.schema.properties[key] = schema;\n            reprocessSchema(schema, key, keys);\n          });\n        }\n\n        if(schema.diff.form) {\n          _.each(schema.diff.form, function(form) {\n\n            if(keys.indexOf(form.key) === -1) {\n              keys.push(form.key);\n            }\n\n            // don't want to override key when extending cached objects\n            //var key = form.key;\n            //delete form.key;\n\n            var cached = service.getFromFormCache(form.key);\n            if(cached) {\n              service.reprocessField(cached, form);\n            }\n            var copies = service.getArrayCopies(form.key);\n            if(copies) {\n              _.each(copies, function(copy) {\n                service.reprocessField(copy, form);\n              });\n            }\n          });\n        }\n\n        if(keys.length) {\n          _.each(keys, function(key) {\n            var form = service.getFromFormCache(key);\n            if(form) service.processField(form);\n            if(key.includes('[]')) {\n              var copies = service.getArrayCopies(key);\n              _.each(copies, function(copy) {\n                if(copy) service.processField(copy);\n              });\n            }\n          });\n        }\n\n        service.broadcastErrors();\n      }\n      else {\n        service.updateSchema(schema);\n      }\n    }\n\n    function reprocessField(current, update, isChild) {\n      var service = this;\n\n      _.extend(current, _.omit(update, 'items', 'key'));\n\n      current._ogKeys.forEach(key => {\n        if(!update[key]) delete current[key];\n      });\n      current._ogKeys = _.keys(update);\n\n      //console.log('update.key:', update.key);\n      service.deregisterHandlers(update.key);\n\n      if(!isChild && current.redraw) current.redraw();\n    }\n\n    function reprocessSchema(schema, key, keys) {\n      keys.push(key);\n      if(schema.properties) {\n        _.each(schema.properties, function(schema, subKey) {\n          reprocessSchema(schema, key + '.' + subKey, keys);\n        });\n      }\n      if(schema.items && schema.items.properties) {\n        _.each(schema.properties, function(schema, subKey) {\n          reprocessSchema(schema, key + '[].' + subKey, keys);\n        });\n      }\n    }\n\n    function buildError(field) {\n      var service = this;\n      var key = service.getKey(field.key);\n      return {\n        key: key,\n        message: field.error\n      };\n    }\n\n    function broadcastErrors() {\n      var service = this;\n      $timeout(function() {\n        service.errors.forEach(function(error) {\n          $rootScope.$broadcast('schemaForm.error.' + error.key, 'serverValidation', error.message);\n        });\n      }, 1);\n    }\n\n    function replaceArrayIndex(resolve, key) {\n      var arrayIndexKey = /([^.]*)\\[arrayIndex\\]/.exec(resolve);\n      var re = new RegExp(arrayIndexKey[1] + '\\\\[(\\\\d+)\\\\]');\n      var index = re.exec(key);\n      return resolve.replace(arrayIndexKey[0], index[0]);\n    }\n\n    function getArrayIndex(key) {\n      if (_.isObject(key)) {\n        return _.find(key.key, function(key) {\n          return _.isNumber(key);\n        });\n      } else {\n        return /\\[(\\d+)\\]/.exec(key)[1];\n      }\n    }\n\n    function setArrayIndex(key, index, asArray) {\n      var service = this;\n      var keyCopy;\n      if (_.isString(key)) {\n        keyCopy = ObjectPath.parse(key);\n      } else {\n        keyCopy = _.clone(key);\n      }\n      var indexOfIndex = keyCopy.indexOf('');\n      keyCopy[indexOfIndex] = index;\n\n      if (asArray) {\n        return keyCopy;\n      } else {\n        return service.getKey(keyCopy);\n      }\n    }\n\n    function cleanup() {\n      var service = this;\n      _.each(service.events, function(listener) {\n        listener();\n      });\n    }\n  }\n})();","(function() {\n  'use strict';\n\n  angular\n      .module('cn.flex-form')\n      .controller('FlexFormSandbox', FlexFormSandbox);\n\n  /* @ngInject */\n  function FlexFormSandbox() {\n    /* jshint validthis: true */\n    var vm = this;\n\n    vm.activate = activate;\n    vm.onSchema = onSchema;\n    vm.model = {};\n    vm.config = {};\n    vm.schemaStr = '';\n\n    activate();\n\n    ////////////////\n\n    function activate() {\n      console.log('FlexFormSandbox');\n    }\n\n    function onSchema() {\n      if(vm.schemaStr) {\n        var schema = angular.fromJson(vm.schemaStr);\n        console.log('schema:', schema);\n        if(!schema.form && schema.forms) {\n          schema.form = schema.forms[0].form;\n        }\n        vm.config.schema = schema.form && schema;\n      }\n    }\n\n  }\n})();","(function() {\n  'use strict';\n\n  angular.module('cn.flex-form')\n      .config(schemaFormConfig)\n      .run(addTemplates);\n\n  schemaFormConfig.$inject = ['cnFlexFormServiceProvider'];\n\n  function schemaFormConfig(cnFlexFormServiceProvider) {\n    var extensions = [\n      'cn-fieldset',\n      'cn-toggle',\n      'cn-datetimepicker',\n      'cn-autocomplete',\n      'cn-autocomplete-detailed',\n      'cn-currency',\n      'cn-radiobuttons',\n      'cn-percentage',\n      'cn-display',\n      'cn-mediaupload',\n      'cn-csvupload',\n      'cn-reusable'\n    ];\n\n    _.each(extensions, function(extension) {\n      cnFlexFormServiceProvider.registerField({\n        type: extension,\n        templateUrl: 'app/components/cn-flex-form/forms/' + extension + '.html'\n      });\n    });\n  }\n\n  addTemplates.$inject = ['$templateCache'];\n\n  function addTemplates($templateCache) {\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-toggle.html',\n        '\\\n        <div class=\"form-group {{form.htmlClass}}\" \\\n             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\\n          <label class=\"control-label\" ng-show=\"showTitle()\">{{form.title}}</label>\\\n          <div class=\"clearfix\">\\\n            <cn-toggle-switch\\\n              class=\"pull-left\"\\\n              ng-show=\"form.key\"\\\n              ng-model-options=\"form.ngModelOptions\"\\\n              ng-model=\"$$value$$\"\\\n              enabled=\"$$value$$\"\\\n              sf-changed=\"form\"\\\n              schema-validate=\"form\"\\\n              on-value=\"form.onValue\"\\\n              off-value=\"form.offValue\"\\\n              undefined-class=\"form.undefinedClass\"/>\\\n            <span ng-show=\"form.onText && form.offText\">\\\n              {{$$value$$ === form.onValue ? form.onText : form.offText}}\\\n            </span>\\\n          </div>\\\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\\\n        </div>\\\n        '\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-datetimepicker.html',\n        '\\\n        <div class=\"form-group {{form.htmlClass}}\"\\\n             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\\n          <label class=\"control-label\"\\\n                 for=\"{{form.key.join(\\'.\\')}}\"\\\n                 ng-show=\"showTitle()\">{{form.title}}</label>\\\n          <cn-datetimepicker\\\n            ng-show=\"form.key\"\\\n            ng-model=\"$$value$$\"\\\n            ng-model-options=\"form.ngModelOptions\"\\\n            is-disabled=\"form.readonly\"\\\n            sf-changed=\"form\"\\\n            schema-validate=\"form\"\\\n            input-id=\"{{form.key.join(\\'.\\')}}\"\\\n            min-date=\"form.minDate\"\\\n            cn-date-required=\"form.required\"\\\n            placeholder=\"{{form.placeholder}}\"\\\n            model-type=\"{{form.schema.type}}\">\\\n          </cn-datetimepicker>\\\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\\\n        </div>\\\n        '\n    );\n\n    var sharedAutocompleteTpl = '\\\n          <tags-input\\\n            ng-show=\"form.key\"\\\n            ng-model=\"$$value$$\"\\\n            ng-model-options=\"form.ngModelOptions\"\\\n            ng-disabled=\"form.readonly\"\\\n            sf-changed=\"form\"\\\n            schema-validate=\"form\"\\\n            input-id=\"{{form.key.join(\\'.\\')}}\"\\\n            display-property=\"{{form.displayProperty || \\'name\\'}}\"\\\n            value-property=\"{{form.valueProperty || \\'value\\'}}\"\\\n            placeholder=\"{{form.placeholder || \\' \\'}}\"\\\n            add-on-blur=\"true\"\\\n            add-on-comma=\"false\"\\\n            add-from-autocomplete-only=\"{{!form.allowNew}}\"\\\n            on-before-tag-added=\"form.onAdd({value: $tag}, form, $event, $prev)\"\\\n            on-init=\"form.onInit($tag, form, $event, $setter)\"\\\n            model-type=\"{{form.getSchemaType()}}\"\\\n            array-value-type=\"{{form.schema.items.type}}\"\\\n            hide-tags=\"{{form.detailedList}}\"\\\n            tags-style=\"{{form.selectionStyle}}\"\\\n            required=\"{{form.required}}\"\\\n            min-length=\"{{form.minLength}}\"\\\n            allowed-tags-pattern=\".*\"\\\n            dropdown=\"true\"\\\n            item-formatter=\"form.itemFormatter\"\\\n            min-tags=\"{{form.schema.minItems}}\"\\\n            max-tags=\"{{form.schema.maxItems || form.getSchemaType() !== \\'array\\' ? 1 : 0}}\"\\\n            allow-bulk=\"{{form.bulkAdd}}\"\\\n            bulk-delimiter=\"{{form.bulkDelimiter}}\"\\\n            bulk-placeholder=\"{{form.bulkPlaceholder}}\"\\\n            show-button=\"true\">\\\n            <auto-complete\\\n              source=\"form.getTitleMap && form.getTitleMap() || form.titleQuery($query)\"\\\n              skip-filtering=\"{{form.titleQuery ? true : false}}\"\\\n              min-length=\"{{form.minLookup || (form.titleQuery && 3 || 0)}}\">\\\n            </auto-complete>\\\n          </tags-input>\\\n          ';\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-autocomplete.html',\n        '\\\n        <div class=\"form-group {{form.htmlClass}}\"\\\n             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\\n          <label class=\"control-label\"\\\n                 for=\"{{form.key.join(\\'.\\')}}-input\"\\\n                 ng-show=\"showTitle()\">{{form.title}}</label>\\\n          ' + sharedAutocompleteTpl + '\\\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\\\n        </div>\\\n        '\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-autocomplete-detailed.html',\n        '\\\n        <div sf-array=\"form\"\\\n             class=\"form-group {{form.htmlClass}}\"\\\n             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\\n          <label class=\"control-label\"\\\n                 for=\"{{form.key.join(\\'.\\')}}-input\"\\\n                 ng-show=\"showTitle()\">{{form.title}}</label>\\\n          <ol class=\"list-group cn-autocomplete-list\"\\\n              ng-show=\"modelArray.length\"\\\n              ng-model=\"modelArray\">\\\n            <li class=\"list-group-item {{form.fieldHtmlClass}}\"\\\n                ng-repeat=\"item in modelArray track by $index\">\\\n              <button ng-hide=\"form.readonly || form.remove === null\"\\\n                      ng-click=\"deleteFromArray($index)\"\\\n                      type=\"button\" class=\"close pull-right\">\\\n                <span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span>\\\n              </button>\\\n              <sf-decorator ng-init=\"arrayIndex = $index\" form=\"copyWithIndex($index)\"></sf-decorator>\\\n            </li>\\\n          </ol>\\\n          ' + sharedAutocompleteTpl + '\\\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\\\n        </div>\\\n        '\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-currency.html',\n        '\\\n        <div class=\"form-group {{form.htmlClass}}\"\\\n             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\\n          <label class=\"control-label\"\\\n                 ng-show=\"showTitle()\"\\\n                 for=\"{{form.key.join(\\'.\\')}}\">{{form.title}}</label>\\\n          <div class=\"{{form.fieldClass}} input-group\">\\\n            <label class=\"input-group-addon\"\\\n                   ng-disabled=\"form.readonly\"\\\n                   for=\"{{form.key.join(\\'.\\')}}\">$</label>\\\n            <input class=\"form-control\"\\\n                   cn-currency-format=\"{{form.currencyFormat}}\"\\\n                   ng-show=\"form.key\"\\\n                   ng-model-options=\"form.ngModelOptions\"\\\n                   ng-disabled=\"form.readonly\"\\\n                   sf-changed=\"form\"\\\n                   schema-validate=\"form\"\\\n                   ff-validate=\"form\"\\\n                   type=\"text\"\\\n                   step=\"any\"\\\n                   min=\"{{form.min}}\"\\\n                   max=\"{{form.max}}\"\\\n                   id=\"{{form.key.join(\\'.\\')}}\"\\\n                   name=\"{{form.key.join(\\'.\\')}}\"\\\n                   ng-model=\"$$value$$\">\\\n          </div>\\\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\\\n        </div>\\\n        '\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-radiobuttons.html',\n        '\\\n        <div class=\"form-group schema-form-radiobuttons cn-radiobuttons {{form.htmlClass}}\"\\\n             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\\n          <label class=\"control-label\" ng-show=\"showTitle()\">{{form.title}}</label>\\\n          <div class=\"btn-group clearfix\">\\\n            <label class=\"btn btn-{{item.value}} {{form.btnClass}} {{item.value === $$value$$ ? \\'active\\' : \\'\\'}}\"\\\n                   ng-repeat=\"item in form.titleMap\">\\\n              <input type=\"radio\"\\\n                     class=\"{{form.fieldHtmlClass}} hide\"\\\n                     sf-changed=\"form\"\\\n                     ng-disabled=\"form.readonly\"\\\n                     ng-model=\"$$value$$\"\\\n                     ng-model-options=\"form.ngModelOptions\"\\\n                     schema-validate=\"form\"\\\n                     ff-validate=\"form\"\\\n                     ng-value=\"item.value\"\\\n                     name=\"{{form.key.join(\\'.\\')}}\">\\\n              <i class=\"fa fa-{{item.value}} fa-lg\"></i>\\\n              <span ng-bind-html=\"item.name\"></span>\\\n            </label>\\\n          </div>\\\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\\\n        </div>\\\n        '\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-percentage.html',\n        '\\\n        <div class=\"form-group {{form.htmlClass}}\"\\\n             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\\n          <label class=\"control-label\"\\\n                 ng-show=\"showTitle()\"\\\n                 for=\"{{form.key && form.key[0]}}\">{{form.title}}</label>\\\n          <div class=\"{{form.fieldClass}} input-group\">\\\n            <input class=\"form-control\"\\\n                   cn-percentage-format\\\n                   ng-show=\"form.key\"\\\n                   ng-model-options=\"form.ngModelOptions\"\\\n                   ng-disabled=\"form.readonly\"\\\n                   sf-changed=\"form\"\\\n                   schema-validate=\"form\"\\\n                   type=\"number\"\\\n                   step=\"any\"\\\n                   min=\"{{form.min}}\"\\\n                   max=\"{{form.max}}\"\\\n                   id=\"{{form.key && form.key[0]}}\"\\\n                   name=\"{{form.key && form.key[0]}}\"\\\n                   ng-model=\"$$value$$\">\\\n             <div class=\"input-group-addon\"\\\n                    ng-disabled=\"form.readonly\"\\\n                    for=\"{{form.key && form.key[0]}}\">%</div>\\\n          </div>\\\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\\\n        </div>\\\n        '\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-display.html',\n        '\\\n        <div class=\"form-group cn-display{{form.htmlClass}}\">\\\n          <input ng-show=\"form.key\"\\\n                 class=\"form-control\"\\\n                 id=\"{{form.key.join(\\'.\\')}}\"\\\n                 name=\"{{form.key.join(\\'.\\')}}\"\\\n                 ng-disabled=\"true\"\\\n                 value=\"{{form.getDisplay(form.key, form.arrayIndex)}}\">\\\n        </div>\\\n        '\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-fieldset.html',\n        '\\\n        <fieldset ng-disabled=\"form.readonly\" class=\"schema-form-fieldset {{form.htmlClass}}\">\\\n          <legend ng-click=\"form.toggleCollapse()\"\\\n                  ng-class=\"{\\'sr-only\\': !showTitle(), collapsible: form.collapsible}\"\\\n                  ng-mouseenter=\"form.render = true\">\\\n            <i ng-show=\"form.collapsible\"\\\n               class=\"fa fa-caret-{{form.collapsed ? \\'right\\' : \\'down\\'}}\"></i>\\\n            {{ form.title }}\\\n          </legend>\\\n          <div class=\"help-block\" ng-show=\"form.description\" ng-bind-html=\"form.description\"></div>\\\n          <div collapse=\"form.collapsed\">\\\n            <div ng-if=\"form.render\">\\\n              <sf-decorator ng-repeat=\"item in form.items\" form=\"item\"></sf-decorator>\\\n            </div>\\\n          </div>\\\n        </fieldset>\\\n        '\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-mediaupload.html',\n        '\\\n        <div class=\"form-group {{form.htmlClass}}\"\\\n             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\\n          <label class=\"control-label\"\\\n                 ng-show=\"showTitle()\"\\\n                 for=\"{{form.key && form.key[0]}}\">{{form.title}}</label>\\\n          <media-upload ng-model=\"$$value$$\"\\\n                        cn-file-type=\"form.fileType\"\\\n                        cn-upload-path=\"form.uploadPath\"\\\n                        cn-data=\"form.data\"\\\n                        cn-preview-path=\"form.previewPath\"\\\n                        cn-model-value-key=\"form.modelValueKey\"\\\n                        ng-model-options=\"form.ngModelOptions\"\\\n                        sf-changed=\"form\"\\\n                        schema-validate=\"form\"\\\n                        ff-form=\"form\"\\\n                        class=\"clearfix\">\\\n          </media-upload>\\\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\\\n       </div>\\\n        '\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-csvupload.html',\n        '\\\n        <div class=\"form-group {{form.htmlClass}}\"\\\n             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\\n          <label class=\"control-label\"\\\n                 ng-show=\"showTitle()\"\\\n                 for=\"{{form.key && form.key[0]}}\">{{form.title}}</label>\\\n          <csv-upload ng-model=\"$$value$$\"\\\n                        cn-upload-path=\"form.uploadPath\"\\\n                        ng-model-options=\"form.ngModelOptions\"\\\n                        sf-changed=\"form\"\\\n                        schema-validate=\"form\"\\\n                        ff-form=\"form\"\\\n                        class=\"clearfix\">\\\n          </csv-upload>\\\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\\\n       </div>\\\n        '\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-reusable.html',\n        '\\\n        <div class=\"form-group cn-reusable {{form.htmlClass}}\"\\\n             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\\n          <label class=\"control-label\"\\\n                 ng-show=\"showTitle()\"\\\n                 for=\"{{form.key.join(\\'.\\')}}\">{{form.title}}</label>\\\n          <cn-select-or\\\n            ng-show=\"form.key\"\\\n            select-from=\"form.library\"\\\n            ng-model=\"$$value$$\"\\\n            ng-model-options=\"form.ngModelOptions\"\\\n            sf-changed=\"form\"\\\n            schema-validate=\"form\"\\\n            ff-form=\"form\"\\\n            directiveId=\"form.directiveId\"\\\n            item-template=\"form.itemTemplate\"\\\n            toggle-text=\"form.toggleText\"\\\n            disabled=\"form.readonly\"\\\n            view=\"form.view\">\\\n            <sf-decorator ng-repeat=\"item in form.items\" form=\"item\"/>\\\n          </cn-select-or>\\\n          <p ng-if=\"form.loadMore && form.view === \\'list\\'\">\\\n            <a ng-click=\"form.loadMore()\"\\\n               class=\"btn btn-default btn-block\">Load More</a>\\\n          </p>\\\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\\\n        </div>\\\n        '\n    );\n  }\n\n})();"],"sourceRoot":"/source/"}