{"version":3,"sources":["all.min.js","_cn-flex-form.module.js","cn-flex-form-config.service.js","cn-flex-form-header.directive.js","cn-flex-form-modal-loader.js","cn-flex-form-modal-loader.service.js","cn-flex-form-types.service.js","cn-flex-form-validate.directive.js","cn-flex-form.directive.js","cn-flex-form.routes.js","cn-flex-form.service.js","sandbox.js","schema-form-extensions.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","angular","module","cnFlexFormConfigProvider","addIgnoreParam","param","ignoreParams","push","cnFlexFormConfig","$stateParams","getStateParams","_","chain","omit","v","isUndefined","isNull","$inject","$get","provider","cnFlexFormHeader","restrict","scope","config","submit","loadOffscreen","controller","FlexFormHeader","bindToController","controllerAs","template","$scope","updateData","console","log","$emit","isDisabled","btnConfig","vm","this","directive","FlexFormModalLoader","FlexFormModal","$state","$rootScope","activate","modal","open","result","goBack","dismiss","$on","dismissModal","transition","go","arguments","cnFlexFormModalLoaderService","$modal","openModal","currentModal","getMapping","instance","factory","getPromises","state","promises","promiseMap","getPromise","id","$q","promise","defer","getPromiseForResolve","cnFlexFormModalLoaderServiceProvider","addMapping","def","resolve","parent","modalMap","modalId","resolveMapping","d","service","cnFlexFormTypesProvider","registerFieldType","fieldType","fieldTypeRegister","unshift","cnFlexFormTypes","getFieldType","field","i","l","length","condition","type","schema","includes","titleMap","titleMapResolve","titleMapQuery","format","ffValidate","form","require","link","elem","attrs","ngModel","required","$watch","$viewValue","$setValidity","cnFlexForm","model","formIndex","formName","delayForm","cleanupEvent","FlexForm","cnFlexFormService","$location","isNumber","forms","search","debug","process","cur","prev","isCompiled","compile","formCtrl","getSchema","updateSchema","showForm","cleanup","each","events","listener","undefined","cnFlexFormRoutesProvider","$stateProvider","addStates","options","name","url","permissions","cnFlexFormRoutes","templateUrl","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","_s","_i","Symbol","iterator","next","done","err","Array","isArray","TypeError","cnFlexFormServiceProvider","schemaFormDecoratorsProvider","registerField","handler","fieldTypeHandlers","createDirective","CNFlexFormService","Api","$parse","sfPath","$interpolate","$timeout","cnUtil","CNFlexFormConstructor","services","CNFlexForm","window","arrayCopies","arrayListeners","dataCache","defaults","errors","formCache","listeners","resolveRegister","updates","params","setupConfig","processField","bind","initModelWatch","initArrayCopyWatch","broadcastErrors","setValue","compiled","getSchemaForm","setupSchemaRefresh","processSchema","getSchemaType","first","processDefault","getKey","parseExpression","modelValue","get","isTrulyEmpty","equals","set","copy","validationMessage","processFieldset","fieldset","items","forEach","collapsible","toggleCollapse","collapsed","render","selectDisplay","processSelectDisplay","_ogKeys","without","keys","addToFormCache","description","readonly","showClearAll","processResolve","watch","processFieldWatch","processSection","processComponent","isString","isFunction","call","conditionals","processConditional","registerHandler","error","buildError","isEmpty","ngModelOptions","allowInvalid","find","reject","$broadcast","reduce","total","test","depth","parse","properties","shift","dataProp","fieldProp","handleResolve","resolveType","match","registerResolve","exp","data","indexOf","replace","cursor","loadMore","refreshSchema","fieldKey","register","prop","val","parseCondition","map","path","resolution","adjustment","date","trim","math","operator","+","-","*","/","adjuster","trigger","curCondition","replaceArrayIndex","updatePath","fromPath","update","from","moment","add","toDate","p","floor","ceil","round","initialize","startsWith","_condition$match","_condition$match2","fn","list","predicateParams","predicateBody","generatePredicate","body","_len","args","_key","split","acc","runHandler","isObject","arrMatch","registerArrayHandlers","defaultValue","handlers","arrKey","onArray","reorder","lastKey","deregisterHandlers","arrVal","deregisterArrayHandlers","item","watching","modelWatch","onModelWatch","initSchemaParams","firstUpdate","cleanModel","prevParams","isInitArray","event","index","parseInt","addArrayCopy","copies","getArrayCopiesFor","splice","getArrayCopies","pluck","getArrayScopes","keyStart","filter","getFromFormCache","addToDataCache","getFromDataCache","eval","start","getAssignable","progress","fullPath","concat","slice","assignable","processArray","array","sortOptions","e","ui","section","component","htmlClass","cols","processCurrency","currencyFormat","currency-dollars","currency-microcents","currency","processPercentage","processReusable","view","processMediaUpload","processCsvUpload","processRadios","processRadiobuttons","radios","fullWidth","btnClass","divide","processDate","maxView","iconClass","modelFormatter","m","multiply","hours","minutes","modelParser","startOf","viewFormatter","dateFormat","viewParser","getSelectValProp","select","valueProperty","getAllowedSelectValue","getTitleMap","valProp","mapVal","x","processSelect","onInit","setter","newVal","q","titleQuery","minLookup","isDefined","default","onAdd","detailedList","selectionStyle","maxItems","valid","displayFormat","itemFormatter","processTemplate","$setDirty","processToggle","toggle","processHelp","help","processDisplay","display","getDisplay","tpl","parseScope","processor","arrayIndex","processTable","table","row","columns","extend","selectField","setupArraySelectDisplay","setupSelectDisplay","getArrayIndex","selectKey","splitKey","ObjectPath","indexedSelectKey","setArrayIndex","selectValue","formCopies","indexedKey","splitIndexedKey","selectModel","itemValue","count","keyMap","once","resetCount","refresh","debounce","diff","then","processUpdatedSchema","refreshData","reset","registers","reprocessSchema","cached","reprocessField","current","isChild","redraw","subKey","message","arrayIndexKey","exec","re","RegExp","asArray","keyCopy","clone","indexOfIndex","prototype","cn-radios","cn-radiobuttons","cn-autocomplete","cn-datetimepicker","cn-display","cn-currency","cn-percentage","cn-mediaupload","cn-csvupload","cn-reusable","cn-toggle","cn-table","FlexFormSandbox","onSchema","schemaStr","fromJson","schemaFormConfig","tv4","addFormat","extensions","extension","addTemplates","$templateCache","put","sharedAutocompleteTpl","run"],"mappings":"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","file":"all.min.js","sourcesContent":["\"use strict\";function _defineProperty(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}!function(){angular.module(\"cn.flex-form\",[\"ui.router\",\"schemaForm\",\"ui.bootstrap.datetimepicker\",\"cnTagsInput\",\"cn.util\"])}(),function(){function e(){function e(e){n.push(e)}function r(e){function r(){return _.chain(e).omit(n).omit(function(e){return _.isUndefined(e)||_.isNull(e)}).value()}return{getStateParams:r,ignoreParams:n}}r.$inject=[\"$stateParams\"];var n=[\"page\",\"debug\",\"sandbox\",\"modal\",\"modalId\"];return{addIgnoreParam:e,$get:r}}angular.module(\"cn.flex-form\").provider(\"cnFlexFormConfig\",e)}(),function(){function e(){return{restrict:\"E\",scope:{config:\"=ffHeaderConfig\",submit:\"&ffSubmit\",loadOffscreen:\"&ffLoadOffscreen\"},controller:r,bindToController:!0,controllerAs:\"vm\",template:'\\n          <div class=\"col-md-6\">\\n            <h5 ng-if=\"vm.config.title.lead\">{{::vm.config.title.lead}}</h5>\\n            <h1>{{vm.config.title.main}}</h1>\\n            <h5 ng-if=\"vm.config.title.sub\">{{::vm.config.title.sub}}</h5>\\n          </div>\\n          <div class=\"{{vm.config.buttonContainerClass || \\'page-action-btns\\'}}\">\\n            <div class=\"btn-options\"\\n                 ng-mouseover=\"vm.loadOffscreen()\">\\n              <a class=\"btn\"\\n                 ng-if=\"vm.config.actionConfig.returnState\"\\n                 ui-sref=\"{{vm.config.actionConfig.returnState}}\">\\n                {{vm.config.actionConfig.returnText || \\'Cancel\\'}}\\n              </a>\\n              <a class=\"btn\"\\n                 ng-if=\"vm.config.actionConfig.closeButton\"\\n                 ng-click=\"vm.config.actionConfig.closeButton.handler()\">\\n                 Cancel\\n              </a>\\n              <span ng-repeat=\"button in vm.config.actionConfig.actions\">\\n                <span ng-class=\"{\\'btn-group\\': button.options}\">\\n                  <a class=\"btn {{button.style && \\'btn-\\'+button.style}}\"\\n                     ng-disabled=\"vm.isDisabled(button)\"\\n                     ng-class=\"{\\'btn-primary\\': $index === vm.config.actionConfig.actions.length - 1}\"\\n                     ng-click=\"vm.submit({handler: button.handler})\"\\n                     tooltip=\"{{button.helptext}}\"\\n                     tooltip-placement=\"bottom\"\\n                     ng-bind-html=\"button.text || \\'Save\\'\">\\n                  </a>\\n                  <a class=\"btn {{button.style && \\'btn-\\'+button.style}} dropdown-toggle\"\\n                          ng-disabled=\"vm.isDisabled(button)\"\\n                          ng-class=\"{\\'btn-primary\\': $index === vm.config.actionConfig.actions.length - 1}\"\\n                          ng-show=\"button.options\"\\n                          data-toggle=\"dropdown\">\\n                    <span class=\"caret\"></span>\\n                  </a>\\n                  <ul class=\"dropdown-menu\" ng-if=\"button.options\">\\n                    <li ng-repeat=\"option in button.options\"\\n                        ng-disabled=\"vm.isDisabled(option)\">\\n                      <a ng-click=\"vm.submit({handler: option.handler})\"\\n                         ng-bind-html=\"option.text\">\\n                      </a>\\n                    </li>\\n                  </ul>\\n                </span>\\n              </span>\\n            </div>\\n            <p class=\"data-updated-at text-right\"\\n               id=\"data-updated-at\"\\n               ng-hide=\"vm.config.noData\">\\n              <a ng-click=\"vm.updateData()\">Update Data</a>\\n            </p>\\n          </div>'}}function r(e){function r(){console.log(\"updateData:\",r),e.$emit(\"ffRefreshData\")}function n(e){return o.config.isDisabled?o.config.isDisabled(e):!1}var o=this;o.updateData=r,o.isDisabled=n}angular.module(\"cn.flex-form\").directive(\"cnFlexFormHeader\",e),r.$inject=[\"$scope\"]}(),function(){function e(e,r,n,o){function t(){i.modal=e.open(i),i.modal.result[\"finally\"](a),i.dismiss=n.$on(\"$stateChangeStart\",s)}function a(){r.transition||r.go(\"^\")}function s(){console.log(\"dismissModal:\",arguments),i.dismiss(),i.modal.dismiss()}var i=this;console.log(\"FlexFormModalLoader:\",o.modal),t()}function r(e,r,n){function o(){var o=e.getMapping(n.modal);return console.log(\"currentModal:\",o),this.modal=r.open(o),this.modal}var t={open:o};return t}angular.module(\"cn.flex-form\").controller(\"FlexFormModalLoader\",e).factory(\"FlexFormModal\",r),e.$inject=[\"FlexFormModal\",\"$state\",\"$rootScope\",\"$stateParams\"],r.$inject=[\"cnFlexFormModalLoaderService\",\"$modal\",\"$stateParams\"]}(),function(){function e(e){var r=s[e];return r||(r={},s[e]=r),r}function r(r,n,o){var t=e(r),a=t[n];return a||(a=o.defer(),t[n]=a),a}function n(r,n,o){var t=e(r),a=o.defer();return t[n]=a,a}function o(){function e(e,r){r.resolve={parent:n},a[e]=r}function n(e,n){return r(e.modal,e.modalId,n).promise}var o={addMapping:e,$get:t};return n.$inject=[\"$stateParams\",\"$q\"],o}function t(e){function r(r,o,t){var a=n(r,o,e);return a.resolve(t),a.promise}function o(e){return a[e]}var t={getMapping:o,resolveMapping:r};return t}angular.module(\"cn.flex-form\").provider(\"cnFlexFormModalLoaderService\",o);var a={},s={};t.$inject=[\"$q\"]}(),function(){function e(){function e(e){n.unshift(e)}function r(){function e(e){for(var r=0,o=n.length;o>r;r++)if(n[r].condition(e))return n[r].type;return e.type||e.schema&&e.schema.type}return{fieldTypeRegister:n,getFieldType:e}}var n=[{condition:function(e){return\"hidden\"===e.type},type:\"hidden\"},{condition:function(e){return e.type.includes(\"radios\")},type:\"cn-radios\"},{condition:function(e){return e.type.includes(\"radiobuttons\")},type:\"cn-radiobuttons\"},{condition:function(e){return e.type.includes(\"autocomplete\")||e.titleMap||e.titleMapResolve||e.titleMapQuery},type:\"cn-autocomplete\"},{condition:function(e){return\"cn-datetimepicker\"===e.type||\"datetime-local\"===e.type||\"time-minutes\"===e.type},type:\"cn-datetimepicker\"},{condition:function(e){return\"help\"===e.type},type:\"help\"},{condition:function(e){return e.type.includes(\"display\")},type:\"cn-display\"},{condition:function(e){return e.schema&&e.schema.format&&e.schema.format.includes(\"currency\")},type:\"cn-currency\"},{condition:function(e){return e.schema&&\"percentage\"===e.schema.format},type:\"cn-percentage\"},{condition:function(e){return\"toggle\"===e.type||\"boolean\"===e.type},type:\"cn-toggle\"},{condition:function(e){return\"mediaupload\"===e.type},type:\"cn-mediaupload\"},{condition:function(e){return\"csvupload\"===e.type},type:\"cn-csvupload\"},{condition:function(e){return\"reusable\"===e.type},type:\"cn-reusable\"},{condition:function(e){return\"table\"===e.type},type:\"cn-table\"},{condition:function(e){return\"array\"===e.type},type:\"array\"}];return{registerFieldType:e,$get:r}}angular.module(\"cn.flex-form\").provider(\"cnFlexFormTypes\",e)}(),function(){function e(){return{restrict:\"A\",scope:{form:\"=ffValidate\"},require:\"ngModel\",link:r}}function r(e,r,n,o){e.form&&e.form.required&&e.$watch(function(){return o.$viewValue},function(e){o.$setValidity(\"schemaForm\",!0),o.$setValidity(\"tv4-302\",e)})}angular.module(\"cn.flex-form\").directive(\"ffValidate\",e)}(),function(){function e(){return{restrict:\"E\",template:'        <div ng-if=\"vm.showForm()\">          <ng-form name=\"{{vm.formName}}\"                sf-schema=\"vm.config.schema.schema\"                sf-form=\"vm.form\"                sf-model=\"vm.model\"></ng-form>          <!-- debug panel to display model -->          <section ng-if=\"vm.debug\"><pre pretty-json=\"vm.model\"></pre></section>        </div>      ',scope:{config:\"=ffConfig\",model:\"=ffModel\",formIndex:\"=ffFormIndex\",formName:\"=ffFormName\",delayForm:\"=ffDelayForm\",cleanupEvent:\"=ffCleanupEvent\"},controller:r,controllerAs:\"vm\",bindToController:!0}}function r(e,r,n){function o(){angular.isNumber(c.formIndex)?c.form=c.config.schema.forms[c.formIndex].form:c.form=c.config.schema.form,n.search().debug&&(c.debug=!0)}function t(r,n){c.form&&(c.service?(console.log(\"vm.service.isCompiled():\",c.service.isCompiled()),c.service.compile(c.config.schema,c.model)):c.service=e(c.config.schema,c.model,{formCtrl:c.config.formCtrl,getSchema:c.config.getSchema,updateSchema:s}))}function a(){return!c.delayForm&&c.service&&c.service.isCompiled()}function s(e){c.config.schema=e,c.activate()}function i(){_.each(c.events,function(e){e()}),c.service.cleanup()}var c=this;c.service=void 0,c.events=[],c.activate=o,c.cleanup=i,c.process=t,c.showForm=a,c.events.push(r.$watch(function(){return c.config.schema},c.process)),c.activate(),r.$on(c.cleanupEvent||\"$destroy\",c.cleanup)}angular.module(\"cn.flex-form\").directive(\"cnFlexForm\",e),r.$inject=[\"cnFlexFormService\",\"$scope\",\"$location\"]}(),function(){function e(e){function r(){}function n(r){e.state(r.name+\".page.modal\",{url:\"/~:modal/:modalId\",controller:\"FlexFormModalLoader\",controllerAs:\"vm\",permissions:r.permissions})}var o={addStates:n,$get:r};return o}function r(e){e.state(\"flex-form-sandbox\",{url:\"/flex-form/sandbox\",controller:\"FlexFormSandbox\",controllerAs:\"vm\",templateUrl:\"app/components/cn-flex-form/sandbox.html\"})}angular.module(\"cn.flex-form\").provider(\"cnFlexFormRoutes\",e).config(r),e.$inject=[\"$stateProvider\"],r.$inject=[\"$stateProvider\"]}();var _slicedToArray=function(){function e(e,r){var n=[],o=!0,t=!1,a=void 0;try{for(var s,i=e[Symbol.iterator]();!(o=(s=i.next()).done)&&(n.push(s.value),!r||n.length!==r);o=!0);}catch(c){t=!0,a=c}finally{try{!o&&i[\"return\"]&&i[\"return\"]()}finally{if(t)throw a}}return n}return function(r,n){if(Array.isArray(r))return r;if(Symbol.iterator in Object(r))return e(r,n);throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}}();!function(){function cnFlexFormServiceProvider(e,r){function n(n){n.condition&&r.registerFieldType({condition:n.condition,type:n.type}),n.handler&&(fieldTypeHandlers[n.type]=n.handler),n.templateUrl&&(e.addMapping(\"bootstrapDecorator\",n.type,n.templateUrl),e.createDirective(n.type,n.templateUrl))}return{registerField:n,$get:CNFlexFormService}}function CNFlexFormService(Api,$parse,cnFlexFormConfig,cnFlexFormTypes,sfPath,$interpolate,$rootScope,$timeout,cnUtil,$stateParams){function CNFlexFormConstructor(e,r,n){var o;if(services.length)for(var t=0,a=services.length;a>t;t++)if(services[t].model===r){o=services[t],o.compile(e,r,n);break}return o||(o=new CNFlexForm(e,r,n),services.push(o)),o||new CNFlexForm(e,r,n)}function CNFlexForm(e,r,n){$stateParams.debug&&(window.services=services),this.arrayCopies={},this.arrayListeners={},this.dataCache={},this.defaults={},this.errors=[],this.events=[],this.formCache={},this.listeners={},this.resolveRegister={},this.model=r,this.updates=0,this.params=cnFlexFormConfig.getStateParams(),this._=_,this.compile(e,r,n)}function compile(e,r,n){var o=this;o.schema=e,o.model=r,o.isCompiled()||(o.setupConfig(n),e.forms?_.each(e.forms,function(e){_.each(e.form,o.processField.bind(o))}):_.each(e.form,o.processField.bind(o)),o.initModelWatch(),o.initArrayCopyWatch(),o.isCompiled(!0)),o.broadcastErrors()}function isCompiled(e){var r=this;return e&&(r.schema.compiled=e),r.schema&&r.schema.compiled}function setupConfig(e){var r=this;e&&(e.formCtrl&&(r.formCtrl=e.formCtrl),e.updateSchema&&(r.updateSchema=e.updateSchema),e.getSchema&&(r.getSchemaForm=r.setupSchemaRefresh(e.getSchema)))}function processSchema(e){var r=this,n=e.schema;n&&(e.getSchemaType=function(){return _.isArray(n.type)?_.first(n.type):n.type},r.processDefault(e))}function processDefault(e){var r=this,n=e.schema;if(n[\"default\"]){var o=r.getKey(e.key);if(r.updates){if(o.includes&&o.includes(\"[]\"))return;var t=r.parseExpression(e.key,r.model),a=t.get();(_.isTrulyEmpty(a)||angular.equals(a,r.defaults[o]))&&t.set(n[\"default\"])}r.defaults[o]=angular.copy(n[\"default\"])}\"url\"!==n.format||e.validationMessage||(e.type||(e.type=\"url\"),e.validationMessage=\"Must be a valid url (https://...)\")}function processFieldset(e){var r=this;e.type=\"cn-fieldset\",e.items.forEach(r.processField.bind(r)),e.collapsible?(e.toggleCollapse=function(e){e.collapsible&&(e.collapsed=!e.collapsed)},e.render=!e.collapsed):e.render=!0}function processField(e){var r=this;if(e.selectDisplay&&r.processSelectDisplay(e,r.getSchema(e.key)),\"fieldset\"===e.type)r.processFieldset(e);else{e._ogKeys||(e._ogKeys=_.without(_.keys(e),\"key\",\"htmlClass\"));var n=r.getKey(e.key);if(e.key&&(r.addToFormCache(e,n),e.schema=r.getSchema(n),e.schema&&(e.schema.description&&(e.description=e.schema.description),e.readonly&&!e.schema.readonly&&(e.readonly=!1),\"array\"!==e.schema.type||\"showClearAll\"in e||(e.showClearAll=!0))),r.processSchema(e),e.type||(e.type=e.getSchemaType&&e.getSchemaType()),e.resolve&&r.processResolve(e),e.watch&&r.processFieldWatch(e),\"section\"===e.type||\"tabarray\"===e.type)r.processSection(e);else if(\"component\"===e.type)r.processComponent(e);else{var o=cnFlexFormTypes.getFieldType(e),t=fieldTypeHandlers[o];_.isString(t)?r[t](e):_.isFunction(t)&&t.call(r,e),e.conditionals&&r.processConditional(e),e.updateSchema&&r.registerHandler(e,null,e.updateSchema),e.error?(r.errors.push(r.buildError(e)),_.isEmpty(e.ngModelOptions)?e.ngModelOptions={allowInvalid:!0}:e.ngModelOptions.allowInvalid=!0):_.find(r.errors,{key:n})&&(r.errors=_.reject(r.errors,{key:n}),$rootScope.$broadcast(\"schemaForm.error.\"+n,\"schemaForm\",!0),$rootScope.$broadcast(\"schemaForm.error.\"+n,\"serverValidation\",!0))}}}function getKey(e){return _.isArray(e)&&(e=_.reduce(e,function(e,r){return/^(\\d*)$/.test(r)?e+\"[\"+r+\"]\":e+\".\"+r})),e}function getSchema(e,r){var n=this;if(e){e=n.getKey(e),e=sfPath.parse(e),r=r||n.schema.schema.properties;for(var o=void 0,t=void 0;e.length>1;)o=e[0],t=e[1],/^\\d*$/.test(t)?2===e.length?r=r=r[e.shift()]:(r=r[e.shift()].items.properties,e.shift()):r=r[e.shift()].properties;return o=e[0]||\"items\",r[o]}}function processResolve(e){var r=this;return _.each(e.resolve,function(n,o){r.handleResolve(e,o,n);var t=n.match(/^(schema\\.data\\.|model\\.)(\\w+)/);t&&(\"schema.data.\"===t[1]?r.registerResolve(e,o,t[2]):\"model.\"===t[1]&&r.registerHandler(t[2],function(){r.handleResolve(e,o,n)}))}),e}function handleResolve(e,r,n){var o=this,t=o.parseExpression(n).get();t||0!==n.indexOf(\"model.\")||(t=o.getSchema(n.replace(\"model.\",\"\"))[\"default\"]),console.log(\"handleResolve:\",t,r,n),t&&t.cursor?e.loadMore=function(){var e=n.match(/schema\\.data\\.(.+)/)[1];o.refreshSchema(\"data:\"+e+\":\"+t.cursor)}:delete e.loadMore,e[r]=t&&t.data?t.data:t}function registerResolve(e,r,n){var o=this,t=o.getKey(e.key);o.resolveRegister[n]=o.resolveRegister[n]||{};var a=o.resolveRegister[n];a[t]=a[t]||[],a[t].push({field:e,prop:r})}function processConditional(e){var r=this;_.each(e.conditionals,function(n,o){var t=function(t,a){e[o]=r.parseCondition(n),\"required\"===o&&$rootScope.$broadcast(\"schemaFormValidate\")};e.conditionals[o].match(/model\\.([^\\s]+)/g).map(function(e){return e.match(/model\\.([^\\s]+)/)[1]}).forEach(function(e){console.log(\"registering conditional handler:\",e),r.registerHandler(e,t)}),t()})}function processFieldWatch(e){var r=this,n=e.schema;e.watch=_.isArray(e.watch)?e.watch:[e.watch],_.each(e.watch,function(o){if(o.resolution){var t;!function(){var a=o.condition,s=o.resolution,i=void 0;_.isFunction(s)?i=function(e,n){(!a||r.parseCondition(a))&&s(e,n)}:(t={},t.date=s.match(/\\+ ?(\\d+) days/),t.date?(t.date=t.date[1],s=s.replace(t.date,\"\").trim()):(t.math=s.match(/(\\+|\\-|\\/|\\*) ?(\\S+)/),t.math&&(t.operator={\"+\":\"add\",\"-\":\"subtract\",\"*\":\"multiply\",\"/\":\"divide\"}[t.math[1]],t.adjuster=r.parseExpression(t.math[2]))),s=s.match(/(\\S+) ?= ?(\\S+)/),i=function(o,i,c,l){var m=a&&replaceArrayIndex(a,c),d=replaceArrayIndex(s[1],c),p=replaceArrayIndex(s[2],c),f=r.parseExpression(d);if(l!==f.path().key){l=f.path().key;var u=r.parseExpression(p);if(!a||r.parseCondition(m))if(t.date)f.set(moment(u.get()).add(t.date,\"days\").toDate());else if(t.math){var h=$parse(u.get()+t.math[1]+t.adjuster.get())();if(n=n||e.items&&(e.items[0].schema||e.items[0].items&&e.items[0].items[0].schema),\"cn-currency\"===e.type){var g=n&&\"currency-dollars\"===n.format?2:0;h=\"*\"===t.math[1]?_.floor(h,g):\"/\"===t.math[1]?_.ceil(h,g):_.round(h,g)}r.listeners[l]&&(r.listeners[l].trigger=c),f.set(h||0)}else f.set(u.get())}}),r.registerHandler(e,i,e.updateSchema,o.initialize)}()}})}function parseCondition(e){var r=this;if(e.startsWith(\"_\")){var n=/^_\\.(.*?)\\((.*?),[\\s(]*(.*?)\\)?\\s*=>[{\\s]*(?:return)?(.*?)\\}?\\)$/,o=e.match(n),t=_slicedToArray(o,5),a=t[1],s=t[2],i=t[3],c=t[4];return _[a]($parse(s)(r),generatePredicate(i,c))}return $parse(e)(r)}function generatePredicate(e,r){return function(){for(var n=arguments.length,o=Array(n),t=0;n>t;t++)o[t]=arguments[t];return $parse(r)(e.replace(/\\s/g,\"\").split(\",\").reduce(function(e,r,n){return e[r]=o[n],e},{}))}}function registerHandler(e,r,n,o){var t=this;if(_.isObject(e)&&!_.isArray(e)){if(!e.key&&e.items)return void _.each(e.items,function(e){t.registerHandler(e,r,e.updateSchema)});e=e.key}e=t.getKey(e);var a=e.match(/([^[\\]]*)\\[]\\.?(.+)/);if(a)return void t.registerArrayHandlers(a[1],a[2],r,n,o);var s=t.parseExpression(e,t.model).get(),i=t.getSchema(e)[\"default\"];if(!t.listeners[e]){var c=_.isUndefined(s)?angular.copy(i):angular.copy(s);t.listeners[e]={handlers:[],updateSchema:n,prev:c}}r&&(t.listeners[e].handlers.push(r),o&&r(s,null,e))}function registerArrayHandlers(e,r,n,o,t){var a=this,s=function(s,i,c){if(i||0===i||!(1>(0|s))){var l,m,d;if(i>s||c){var p=e+\"[\"+(i-1)+\"].\"+r;if(a.listeners[p])for(l=0,m=i;m>l;l++)d=e+\"[\"+l+\"].\"+r,a.deregisterHandlers(d);for(l=0,m=s;m>l;l++)d=e+\"[\"+l+\"].\"+r,a.registerHandler(d,n,o)}else if(s>(i||0))for(l=0|i,m=s;m>l;l++)d=e+\"[\"+l+\"].\"+r,a.registerHandler(d,n,o,t)}},i=a.parseExpression(e,a.model).get();_.each(i,function(s,i){var c=e+\"[\"+i+\"].\"+r;a.registerHandler(c,n,o),t&&n(null,null,c)}),a.arrayListeners[e+\".length\"]?a.arrayListeners[e+\".length\"].handlers.push(s):a.arrayListeners[e+\".length\"]={handlers:[s],prev:i?i.length:0}}function deregisterHandlers(e){var r=this;e=r.getKey(e);var n=e.match(/([^[\\]]*)\\[]\\.?(.+)/);return n?void r.deregisterArrayHandlers(n[1],n[2]):void(r.listeners[e]&&(r.listeners[e].handlers=[]))}function deregisterArrayHandlers(e,r){var n=this;n.parseExpression(e,n.model).get().forEach(function(o,t){n.deregisterHandlers(e+\"[\"+t+\"].\"+r)})}function initModelWatch(){var e=this;e.watching||(e.modelWatch&&e.modelWatch(),e.modelWatch=$rootScope.$watch(function(){return e.model},e.onModelWatch.bind(e),!0),e.initSchemaParams(),e.watching=!0,e.firstUpdate=!0)}function onModelWatch(e,r){var n=this;(n.firstUpdate||!angular.equals(e,r))&&(n.firstUpdate=!1,cnUtil.cleanModel(n.model),n.prevParams=angular.copy(n.params),n.params=cnFlexFormConfig.getStateParams(),_.each(n.arrayListeners,function(e,r){var o=n.parseExpression(r,n.model).get();angular.equals(o,e.prev)||(e.handlers.forEach(function(r){return r(o,e.prev)}),e.prev=angular.copy(o))}),_.each(n.listeners,function(e,r){e&&!function(){var o=n.parseExpression(r,n.model).get(),t=angular.equals(o,[])&&!e.prev;angular.equals(o,e.prev)||t||(console.log(\":: val, prev ::\",o,e.prev),e.handlers.forEach(function(n){n(o,e.prev,r,e.trigger)}),e.trigger=null,e.prev=angular.copy(o)),!e.updateSchema||angular.isUndefined(o)||t||null===o||(n.params[r]=o)}()}),console.log(\":: param diff ::\",n.params,n.prevParams),angular.equals(n.params,n.prevParams)||(n.model.id&&!n.updates&&_.isEmpty(n.prevParams)?++n.updates:n.refreshSchema()))}function initSchemaParams(){var e=this;_.each(e.listeners,function(r,n){if(r){var o=e.parseExpression(n,e.model).get();r.updateSchema&&!angular.isUndefined(o)&&null!==o&&(e.params[n]=o)}})}function initArrayCopyWatch(){console.log(\"initArrayCopyWatch: how many times does this event get registered?\");var e=this;e.events.push($rootScope.$on(\"schemaFormPropagateScope\",function(r,n){var o=e.getKey(n.form.key),t=o.match(/^.*\\[(\\d+)].*$/);o=o.replace(/\\[\\d+]/g,\"[]\"),t=t&&parseInt(t[1]),n.form.condition||(n.form.condition=\"true\"),e.addArrayCopy(n,o,t),n.$emit(\"flexFormArrayCopyAdded\",o)})),e.events.push($rootScope.$on(\"schemaFormDeleteScope\",function(r,n,o){console.log(\"schemaFormDeleteScope:\",o,n.form,n);var t=e.getKey(n.form.key).replace(/\\[\\d+]/g,\"[]\"),a=e.getArrayCopiesFor(t);if(a.forEach(function(e){e.splice(o,1)}),n.form.link){var s=e.parseExpression(n.form.link,e.model).get();s.splice(o,1)}}))}function addArrayCopy(e,r,n){var o=this;(!n||0>n)&&(n=0),o.arrayCopies[r]||(o.arrayCopies[r]=[]),o.arrayCopies[r][n]=e}function getArrayCopies(e){var r=this;return _.pluck(r.getArrayScopes(e),\"form\")}function getArrayCopiesFor(e){var r=this;return e+=\"[]\",_.filter(r.arrayCopies,function(r,n){return n.includes(e)})}function getArrayScopes(e){var r=this;return r.arrayCopies[e]}function addToFormCache(e,r){var n=this;r=r||n.getKey(e.key),n.getFromFormCache(r)||(n.formCache[r]=e)}function getFromFormCache(e){var r=this;return r.formCache[e]}function addToDataCache(e,r){var n=this;e&&(n.dataCache[e]=r)}function getFromDataCache(e){var r=this;return r.dataCache[e]}function parseExpression(exp,depth){var service=this;if(!exp||/^(null|false|true|undefined|''|[0-9.]+|\\[]|\\{})$/.test(exp))return{get:function get(){return eval(exp)}};exp=service.getKey(exp);var match=exp.match(/^(model\\.)?(\\S+)$/),modelValue={get:function(){for(var e=sfPath.parse(exp),r=depth||service;r&&e.length>1;)r=r[e.shift()];return r&&r[e[0]]},getAssignable:function(){for(var e=sfPath.parse(exp),r=[],n=depth||service;n&&e.length>1;){var o=e.shift();r.push(o),n[o]||(/^\\d?$/.test(e[0])?n[o]=[]:n[o]={}),n=n[o]}return{obj:n,key:e[0],path:service.getKey(r),fullPath:service.getKey(r.concat(e.slice(0,1)))}},set:function(e){var r=this.getAssignable();return r.obj[r.key]=e,e},path:function(){return{exp:exp,depth:depth,key:match[2]}}};return modelValue}function processArray(e){var r=this,n=r.getKey(e.key);e.sortOptions={update:function(e,o){var t=r.arrayListeners[n+\".length\"];t.handlers.forEach(function(e){e(t.prev,t.prev,!0)})}},r.processSection(e)}function processSection(e){var r=this;_.each(e.items,r.processField.bind(r))}function processComponent(e){var r=this;e.type=\"section\",e.htmlClass=\"row\";var n=12/_.reject(e.items,\"hidden\").length;_.each(e.items,function(o,t){r.processField(o),e.items[t]={type:\"section\",htmlClass:\"col-sm-\"+n,items:[o]}})}function processCurrency(e){e.currencyFormat={\"currency-dollars\":\"dollars\",\"currency-microcents\":\"microcents\",currency:\"cents\"}[e.schema.format],e.type=\"cn-currency\"}function processPercentage(e){e.type=\"cn-percentage\"}function processReusable(e){var r=this;e.type=\"cn-reusable\",e.view=e.view||\"new\",e.items.forEach(r.processField.bind(r)),e.items=[{type:\"section\",items:e.items,condition:\"!model.\"+r.getKey(e.key)+\".id\"}]}function processMediaUpload(e){var r=this;e.type=\"cn-mediaupload\",_.each(e.data,function(n,o){e.data[o]=r.parseExpression(n).get()})}function processCsvUpload(e){e.type=\"cn-csvupload\"}function processRadios(e){e.type=\"cn-radios\"}function processRadiobuttons(e){e.type=\"cn-radiobuttons\",e.fullWidth&&(e.btnClass=\"col-sm-\"+_.divide(12,e.titleMap.length))}function processDate(e){e.type=\"cn-datetimepicker\",\"time-minutes\"===e.schema.format&&(e.maxView=\"hour\",e.iconClass=\"fa fa-clock-o\",e.modelFormatter=function(e){if(e){var r=moment(e);return _.add(_.multiply(r.hours(),60),r.minutes())}},e.modelParser=function(e){if(e){var r=parseInt(e),n=_.floor(r/60),o=r%60;return moment().startOf(\"day\").add(\"hours\",n).add(\"minutes\",o)}},e.viewFormatter=function(r){return r?e.modelParser(r).format(e.dateFormat):void 0},e.viewParser=function(e){if(e){var r=e.match(/^(\\d{1,2}):?(\\d{1,2})? (a|p)/);if(r){var n=_.add(\"12\"===r[1]?0:r[1],\"a\"===r[3]?0:12),o=r[2]||\"00\";return 1===o.length&&(o+=\"0\"),_.add(_.multiply(n,60),o)}}})}function getSelectValProp(e){var r=\"array\"===e.getSchemaType();return e.valueProperty||\"object\"!==(r?e.schema.items.type:e.schema.type)&&\"value\"}function getAllowedSelectValue(e,r,n){n=n||e.getTitleMap();var o=getSelectValProp(e);if(o){if(\"array\"===e.getSchemaType()){if(!r||!_.isArray(r))return;var t=r.map(function(e){return _.find(n,_defineProperty({},o,e))}).filter(function(e){return void 0!==e});return t}return _.find(n,_defineProperty({},o,r))}}function processSelect(e){var r=this,n=e.schema;if((e.titleMapResolve||e.titleMap)&&(e.getTitleMap=function(){return e.titleMap||r.schema.data[e.titleMapResolve]},e.onInit=function(n,o,t,a){var s=r.parseExpression(o.key,r.model);if(\"tag-init\"===t){var i=getAllowedSelectValue(e,s.get());void 0!==i&&a(i)}}),e.titleMapQuery){var o=e.titleMapQuery.params.q;e.titleQuery=function(r){console.log(\"titleMap:\",r);var n={};return o&&(n[o]=r),Api.get({url:e.titleMapQuery.url,params:n})},o||(e.minLookup=\"0\"),e.onInit=function(e,r,n,o){\"tag-init\"===n&&o(e)}}if(n.items){var t=[];_.each(n.items.properties,function(e,r){angular.isDefined(e[\"default\"])&&t.push({key:r,\"default\":e[\"default\"]})}),t.length&&(e.onAdd=function(e,r,n){e.value&&\"tag-added\"===n&&_.each(t,function(r){e.value[r.key]||(e.value[r.key]=r[\"default\"])})})}e.type.includes(\"cn-autocomplete\")||(e.items?(e.detailedList=!0,\"component\"!==e.items[0].type&&(e.items.length>1&&(e.items=[{type:\"component\",items:e.items}]),r.processFieldset(e)),e.type=\"cn-autocomplete-detailed\"):(e.selectionStyle||(e.selectionStyle=\"tags\"===e.key?\"tags\":\"array\"===e.getSchemaType()&&1!==e.schema.maxItems?\"list\":\"select\"),e.type=\"cn-autocomplete\"),e.titleMapResolve&&$rootScope.$on(\"cnFlexFormDiff:data\",function(n,o){if(o[e.titleMapResolve]){var t=r.parseExpression(e.key,r.model),a=t.get();if(void 0!==a){var s=getAllowedSelectValue(e,a,o[e.titleMapResolve]);void 0===s&&t.set()}}})),e.displayFormat&&(e.itemFormatter=r.processTemplate(e.displayFormat)),r.registerHandler(e.key,function(n){var o=r.formCtrl&&r.formCtrl[r.getKey(e.key)];o&&o.$setDirty&&o.$setDirty()},e.updateSchema)}function processToggle(e){e.type=\"cn-toggle\"}function processHelp(e){e.htmlClass=\"help-block\"}function processDisplay(e){var r=this;e.type=\"cn-display\",e.getDisplay=r.processTemplate(e.displayFormat,!0)}function processTemplate(e,r){var n=this,o=$interpolate;return function(t,a){return r&&(angular.isDefined(a)&&(t=_.map(t,function(e){return\"arrayIndex\"===e?a:e})),t=n.parseExpression(t,n.model).get()),o(e)(t)}}function processTable(e){var r=this;e.type=\"cn-table\",e.items.forEach(function(n){for(var o=0;o<e.columns.length;o++)_.extend(n.items[o],e.columns[o]),r.processField(n.items[o])})}function processSelectDisplay(e,r){var n,o=this,t=_.find(e.items,\"selectField\");n=r&&\"array\"===r.type?o.setupArraySelectDisplay(e,t):o.setupSelectDisplay(e,t),e.selectDisplay=!1,o.registerHandler(t.key,n,t.updateSchema,!0),o.processField(e)}function setupArraySelectDisplay(e,r){var n=this;_.each(e.items,function(e){\"false\"!==e.condition&&(e.condition=\"true\")});var o=function(o,t,a){var s=getArrayIndex(a);_.each(e.items,function(e){var o=n.getKey(r.key),t=n.getKey(e.key),a=ObjectPath.parse(t);if(o!==t){var i=n.setArrayIndex(o,s),c=n.parseExpression(i,n.model).get(),l=n.getArrayCopies(t);_.includes(c,a[a.length-1])?_.each(l,function(e){getArrayIndex(e)==s&&(e.condition=\"true\")}):_.each(l,function(e){getArrayIndex(e)==s&&(e.condition=\"false\",n.parseExpression(n.getKey(e.key),n.model).set())})}})},t=n.parseExpression(n.getKey(e.key),n.model).get();_.each(e.items,function(e){var o=n.getKey(e.key),a=n.getKey(r.key);o!==a&&_.each(t,function(e,r){var t=n.setArrayIndex(o,r),s=ObjectPath.parse(t),i=n.setArrayIndex(a,r),c=n.parseExpression(i,n.model),l=c.get(),m=n.parseExpression(t,n.model).get();m&&!_.includes(l,s[s.length-1])&&(l||(l=[]),l.push(s[s.length-1]),c.set(l))})});var a=n.getSchema(e.key)[\"default\"];_.each(a,function(e,o){var t=n.getKey(r.key),a=n.setArrayIndex(t,o),s=n.parseExpression(a,n.model),i=s.get();_.each(e,function(e,r){i||(i=[]),i.push(r),s.set(i)})});var s=0,i=_.pluck(_.reject(e.items,{condition:\"false\"}),\"key\"),c=$rootScope.$on(\"flexFormArrayCopyAdded\",function(r,t){var a=n.parseExpression(n.getKey(e.key),n.model).get();if(a){var c=a.length*i.length;if(_.includes(i,t)&&s++,s===c){for(var l=0;l<a.length;l++)o(null,null,\"[\"+l+\"]\");s=0}}}),l=$rootScope.$on(\"flexForm.updatePage\",function(){s=0});return n.events.push(c),n.events.push(l),o}function setupSelectDisplay(e,r){var n=this,o=function(){var o=n.getKey(r.key);_.each(e.items,function(e){var r=n.getKey(e.key),t=ObjectPath.parse(r);if(o!==r){var a=n.parseExpression(o,n.model).get();_.includes(a,t[t.length-1])?e.condition=\"true\":(e.condition=\"false\",n.parseExpression(r,n.model).set())}})},t=n.getKey(r.key),a=n.parseExpression(t,n.model),s=a.get();_.each(e.items,function(e){var r=n.getKey(e.key);if(t!==r){var o=ObjectPath.parse(r),i=n.parseExpression(r,n.model).get();i&&!_.includes(s,o[o.length-1])&&(s||(s=[]),s.push(o[o.length-1]),a.set(s))}});var i=n.getSchema(e.key)[\"default\"];_.each(i,function(e,r){s||(s=[]),s.push(r),a.set(s)});var c=n.parseExpression(e.key,n.model);return i&&!c.get()&&c.set(i),o}function setupSchemaRefresh(e){var r=this;r.refreshSchema=_.debounce(function(n){var o,t=_.extend(cnFlexFormConfig.getStateParams(),r.params),a=cnUtil.diff(r.schema.params,t,!0);(a||n)&&(n?t.updateSchema=n:(o=_.keys(a),o.length>1&&(a=_.omit(a,_.isNull),o=_.keys(a)),t.updateSchema=_.first(o)),t.updateSchema||(a=cnUtil.diff(t,_.omit(r.schema.params,\"updateSchema\")),o=_.keys(a),t.updateSchema=_.first(o)),e(t).then(function(e){++r.updates,r.processUpdatedSchema(e)}))},100),r.refreshData=_.debounce(function(){e(_.extend(r.schema.params,{updateSchema:\"refreshData\"})).then(function(e){r.processUpdatedSchema(e),console.log(\"service.schema.params:\",r.schema.params)})},100),r.events.push($rootScope.$on(\"ffRefreshData\",r.refreshData))}function processUpdatedSchema(e){var r=this;if(e.diff){r.schema.params=e.params,e.diff.data&&($rootScope.$broadcast(\"cnFlexFormDiff:data\",e.diff.data),_.each(e.diff.data,function(e,n){e&&e.data&&!_.isEmpty(r.schema.data[n].data)&&!e.reset&&(e.data=r.schema.data[n].data.concat(e.data)),r.schema.data[n]=e,r.resolveRegister[n]&&_.each(r.resolveRegister[n],function(e){e.forEach(function(e){r.handleResolve(e.field,e.prop,\"schema.data.\"+n)})})}));var n=[];e.diff.schema&&($rootScope.$broadcast(\"cnFlexFormDiff:schema\",e.diff.schema),_.each(e.diff.schema,function(e,o){r.schema.schema.properties[o]=e,reprocessSchema(e,o,n)})),e.diff.form&&($rootScope.$broadcast(\"cnFlexFormDiff:form\",e.diff.form),_.each(e.diff.form,function(e){-1===n.indexOf(e.key)&&n.push(e.key);var o=r.getFromFormCache(e.key);o&&r.reprocessField(o,e);var t=r.getArrayCopies(e.key);t&&t.forEach(function(n){return n&&r.reprocessField(n,e)})})),n.length&&_.each(n,function(e){var n=r.getFromFormCache(e);if(n&&r.processField(n),e.includes(\"[]\")){var o=r.getArrayCopies(e);_.each(o,function(e){e&&r.processField(e)})}}),r.broadcastErrors()}else r.updateSchema(e)}function reprocessField(e,r,n){var o=this;!r.condition&&e.condition&&(r.condition=\"true\");var t=!n&&e.condition!==r.condition;console.log(\"redraw:\",o.getKey(e.key),e),_.extend(e,_.omit(r,\"items\",\"key\")),e._ogKeys.forEach(function(n){r[n]||delete e[n]}),e._ogKeys=_.keys(r),o.deregisterHandlers(r.key),$rootScope.$broadcast(\"cnFlexFormReprocessField\",r.key),t&&e.redraw&&e.redraw()}function reprocessSchema(e,r,n){n.push(r),e.properties&&_.each(e.properties,function(e,o){reprocessSchema(e,r+\".\"+o,n)}),e.items&&e.items.properties&&_.each(e.properties,function(e,o){reprocessSchema(e,r+\"[].\"+o,n)})}function buildError(e){var r=this,n=r.getKey(e.key);return{key:n,message:e.error}}function broadcastErrors(){var e=this;$timeout(function(){e.errors.forEach(function(e){$rootScope.$broadcast(\"schemaForm.error.\"+e.key,\"serverValidation\",e.message)})},1)}function replaceArrayIndex(e,r){if(!e.includes(\"arrayIndex\"))return e;var n=/([^.]*)\\[arrayIndex\\]/.exec(e),o=new RegExp(n[1]+\"\\\\[(\\\\d+)\\\\]\"),t=o.exec(r);return e.replace(new RegExp(n[0].replace(/(\\[|\\])/g,\"\\\\$1\"),\"g\"),t[0])}function getArrayIndex(e){return _.isObject(e)?_.find(e.key,function(e){return _.isNumber(e)}):/\\[(\\d+)\\]/.exec(e)[1]}function setArrayIndex(e,r,n){var o,t=this;o=_.isString(e)?ObjectPath.parse(e):_.clone(e);var a=o.indexOf(\"\");return o[a]=r,n?o:t.getKey(o)}function cleanup(){var e=this;_.each(e.events,function(e){e()})}var services=[],prototype={compile:compile,addArrayCopy:addArrayCopy,\naddToDataCache:addToDataCache,addToFormCache:addToFormCache,broadcastErrors:broadcastErrors,buildError:buildError,cleanup:cleanup,deregisterHandlers:deregisterHandlers,deregisterArrayHandlers:deregisterArrayHandlers,getArrayCopies:getArrayCopies,getArrayCopiesFor:getArrayCopiesFor,getArrayScopes:getArrayScopes,getFromDataCache:getFromDataCache,getFromFormCache:getFromFormCache,getKey:getKey,getSchema:getSchema,handleResolve:handleResolve,initArrayCopyWatch:initArrayCopyWatch,initModelWatch:initModelWatch,initSchemaParams:initSchemaParams,isCompiled:isCompiled,onModelWatch:onModelWatch,parseCondition:parseCondition,parseExpression:parseExpression,processArray:processArray,processDefault:processDefault,processDisplay:processDisplay,processField:processField,processFieldset:processFieldset,processFieldWatch:processFieldWatch,processComponent:processComponent,processConditional:processConditional,processCurrency:processCurrency,processPercentage:processPercentage,processDate:processDate,processHelp:processHelp,processRadios:processRadios,processRadiobuttons:processRadiobuttons,processReusable:processReusable,processSchema:processSchema,processSelectDisplay:processSelectDisplay,processResolve:processResolve,processSection:processSection,processSelect:processSelect,processTable:processTable,processTemplate:processTemplate,processToggle:processToggle,processUpdatedSchema:processUpdatedSchema,processMediaUpload:processMediaUpload,processCsvUpload:processCsvUpload,registerArrayHandlers:registerArrayHandlers,registerHandler:registerHandler,registerResolve:registerResolve,reprocessField:reprocessField,setArrayIndex:setArrayIndex,setupConfig:setupConfig,setupArraySelectDisplay:setupArraySelectDisplay,setupSelectDisplay:setupSelectDisplay,setupSchemaRefresh:setupSchemaRefresh};return _.extend(CNFlexForm.prototype,prototype),_.extend(CNFlexFormConstructor,prototype),CNFlexFormConstructor}angular.module(\"cn.flex-form\").provider(\"cnFlexFormService\",cnFlexFormServiceProvider);var fieldTypeHandlers={\"cn-radios\":\"processRadios\",\"cn-radiobuttons\":\"processRadiobuttons\",\"cn-autocomplete\":\"processSelect\",\"cn-datetimepicker\":\"processDate\",help:\"processHelp\",\"cn-display\":\"processDisplay\",\"cn-currency\":\"processCurrency\",\"cn-percentage\":\"processPercentage\",\"cn-mediaupload\":\"processMediaUpload\",\"cn-csvupload\":\"processCsvUpload\",\"cn-reusable\":\"processReusable\",\"cn-toggle\":\"processToggle\",\"cn-table\":\"processTable\",array:\"processArray\"};cnFlexFormServiceProvider.$inject=[\"schemaFormDecoratorsProvider\",\"cnFlexFormTypesProvider\"],CNFlexFormService.$inject=[\"Api\",\"$parse\",\"cnFlexFormConfig\",\"cnFlexFormTypes\",\"sfPath\",\"$interpolate\",\"$rootScope\",\"$timeout\",\"cnUtil\",\"$stateParams\"]}(),function(){function e(){function e(){console.log(\"FlexFormSandbox\")}function r(){if(n.schemaStr){var e=angular.fromJson(n.schemaStr);console.log(\"schema:\",e),!e.form&&e.forms&&(e.form=e.forms[0].form),n.config.schema=e.form&&e}}var n=this;n.activate=e,n.onSchema=r,n.model={},n.config={},n.schemaStr=\"\",e()}angular.module(\"cn.flex-form\").controller(\"FlexFormSandbox\",e)}(),function(){function e(e){tv4.addFormat({url:function(e){return _.isString(e)&&!/^(https?:\\/\\/.{2}|$)/.test(e)&&\"invalid url\"}});var r=[\"cn-fieldset\",\"cn-toggle\",\"cn-datetimepicker\",\"cn-autocomplete\",\"cn-autocomplete-detailed\",\"cn-currency\",\"cn-radios\",\"cn-radiobuttons\",\"cn-percentage\",\"cn-display\",\"cn-mediaupload\",\"cn-csvupload\",\"cn-reusable\",\"cn-table\"];_.each(r,function(r){e.registerField({type:r,templateUrl:\"app/components/cn-flex-form/forms/\"+r+\".html\"})})}function r(e){e.put(\"app/components/cn-flex-form/forms/cn-toggle.html\",'\\n        <div class=\"form-group {{form.htmlClass}}\"\\n             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\n          <label class=\"control-label\" ng-show=\"showTitle()\">{{form.title}}</label>\\n          <div class=\"clearfix\">\\n            <cn-toggle-switch\\n              class=\"pull-left\"\\n              ng-show=\"form.key\"\\n              ng-model-options=\"form.ngModelOptions\"\\n              ng-model=\"$$value$$\"\\n              sf-changed=\"form\"\\n              schema-validate=\"form\"\\n              on-value=\"form.onValue\"\\n              off-value=\"form.offValue\"\\n              read-only=\"form.readonly\"\\n              undefined-class=\"form.undefinedClass\"/>\\n            <span ng-show=\"form.onText && form.offText\">\\n              {{$$value$$ === form.onValue ? form.onText : form.offText}}\\n            </span>\\n          </div>\\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\\n        </div>'),e.put(\"app/components/cn-flex-form/forms/cn-datetimepicker.html\",'\\n        <div class=\"form-group {{form.htmlClass}}\"\\n             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\n          <label class=\"control-label\"\\n                 for=\"{{form.key.join(\\'.\\')}}\"\\n                 ng-show=\"showTitle()\">{{form.title}}</label>\\n          <cn-datetimepicker\\n            ng-show=\"form.key\"\\n            ng-model=\"$$value$$\"\\n            ng-model-options=\"form.ngModelOptions\"\\n            is-disabled=\"form.readonly\"\\n            sf-changed=\"form\"\\n            schema-validate=\"form\"\\n            input-id=\"{{form.key.join(\\'.\\')}}\"\\n            min-date=\"form.minDate\"\\n            max-date=\"form.maxDate\"\\n            max-view=\"{{form.maxView}}\"\\n            cn-date-required=\"form.required\"\\n            placeholder=\"{{form.placeholder}}\"\\n            model-type=\"{{form.schema.type}}\"\\n            model-formatter=\"form.modelFormatter\"\\n            model-parser=\"form.modelParser\"\\n            view-formatter=\"form.viewFormatter\"\\n            view-parser=\"form.viewParser\"\\n            format-string={{form.dateFormat}}\\n            icon-class={{form.iconClass}}>\\n          </cn-datetimepicker>\\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\\n        </div>');var r='\\n          <tags-input\\n            ng-show=\"form.key\"\\n            ng-model=\"$$value$$\"\\n            ng-model-options=\"form.ngModelOptions\"\\n            ng-disabled=\"form.readonly\"\\n            sf-changed=\"form\"\\n            schema-validate=\"form\"\\n            input-id=\"{{form.key.join(\\'.\\')}}\"\\n            display-property=\"{{form.displayProperty || \\'name\\'}}\"\\n            value-property=\"{{form.valueProperty}}\"\\n            placeholder=\"{{form.placeholder || \\' \\'}}\"\\n            add-on-blur=\"true\"\\n            add-on-comma=\"false\"\\n            add-from-autocomplete-only=\"{{!form.allowNew}}\"\\n            on-before-tag-added=\"form.onAdd({value: $tag}, form, $event, $prev)\"\\n            on-init=\"form.onInit($tag, form, $event, $setter)\"\\n            model-type=\"{{form.getSchemaType()}}\"\\n            array-value-type=\"{{form.schema.items.type}}\"\\n            hide-tags=\"{{form.detailedList}}\"\\n            tags-style=\"{{form.selectionStyle}}\"\\n            required=\"{{form.required}}\"\\n            min-length=\"{{form.minLength}}\"\\n            allowed-tags-pattern=\".*\"\\n            dropdown-icon=\"true\"\\n            item-formatter=\"form.itemFormatter\"\\n            min-tags=\"{{form.schema.minItems}}\"\\n            max-tags=\"{{form.schema.maxItems || form.getSchemaType() !== \\'array\\' ? 1 : 0}}\"\\n            allow-bulk=\"{{form.bulkAdd}}\"\\n            bulk-delimiter=\"{{form.bulkDelimiter}}\"\\n            bulk-placeholder=\"{{form.bulkPlaceholder}}\"\\n            show-clear-all=\"{{form.showClearAll}}\"\\n            show-button=\"true\">\\n            <auto-complete\\n              source=\"form.getTitleMap && form.getTitleMap() || form.titleQuery($query)\"\\n              skip-filtering=\"{{form.titleQuery ? true : false}}\"\\n              min-length=\"{{form.minLookup || (form.titleQuery && 3 || 0)}}\">\\n            </auto-complete>\\n          </tags-input>';e.put(\"app/components/cn-flex-form/forms/cn-autocomplete.html\",'\\n        <div class=\"form-group {{form.htmlClass}}\"\\n             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\n          <label class=\"control-label\"\\n                 for=\"{{form.key.join(\\'.\\')}}-input\"\\n                 ng-show=\"showTitle()\">{{form.title}}</label>\\n          '+r+'\\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\\n        </div>'),e.put(\"app/components/cn-flex-form/forms/cn-autocomplete-detailed.html\",'\\n        <div sf-array=\"form\"\\n             class=\"form-group {{form.htmlClass}}\"\\n             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\n          <label class=\"control-label\"\\n                 for=\"{{form.key.join(\\'.\\')}}-input\"\\n                 ng-show=\"showTitle()\">{{form.title}}</label>\\n          <ol class=\"list-group cn-autocomplete-list\"\\n              ng-show=\"modelArray.length\"\\n              ng-model=\"modelArray\">\\n            <li class=\"list-group-item {{form.fieldHtmlClass}}\"\\n                ng-repeat=\"item in modelArray track by $index\">\\n              <button ng-hide=\"form.readonly || form.remove === null\"\\n                      ng-click=\"deleteFromArray($index)\"\\n                      type=\"button\" class=\"close pull-right\">\\n                <span aria-hidden=\"true\">&times;</span>\\n              </button>\\n              <sf-decorator ng-init=\"arrayIndex = $index\" form=\"copyWithIndex($index)\"/>\\n            </li>\\n          </ol>\\n          '+r+'\\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\\n        </div>'),e.put(\"app/components/cn-flex-form/forms/cn-currency.html\",'\\n        <div class=\"form-group {{form.htmlClass}}\"\\n             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\n          <label class=\"control-label\"\\n                 ng-show=\"showTitle()\"\\n                 for=\"{{form.key.join(\\'.\\')}}\">{{form.title}}</label>\\n          <div class=\"{{form.fieldClass}} input-group\">\\n            <label class=\"input-group-addon\"\\n                   ng-disabled=\"form.readonly\"\\n                   for=\"{{form.key.join(\\'.\\')}}\">$</label>\\n            <input class=\"form-control\"\\n                   cn-currency-format=\"{{form.currencyFormat}}\"\\n                   cn-currency-placeholder=\"{{form.placeholder}}\"\\n                   ng-show=\"form.key\"\\n                   ng-model-options=\"form.ngModelOptions\"\\n                   ng-disabled=\"form.readonly\"\\n                   sf-changed=\"form\"\\n                   schema-validate=\"form\"\\n                   type=\"text\"\\n                   step=\"any\"\\n                   min=\"{{form.min}}\"\\n                   max=\"{{form.max}}\"\\n                   id=\"{{form.key.join(\\'.\\')}}\"\\n                   name=\"{{form.key.join(\\'.\\')}}\"\\n                   ng-model=\"$$value$$\">\\n          </div>\\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\\n        </div>'),e.put(\"app/components/cn-flex-form/forms/cn-radios.html\",'<div class=\"form-group {{form.htmlClass}}\"\\n              ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\n           <label class=\"control-label\" ng-show=\"showTitle()\">{{form.title}}</label>\\n           <div class=\"btn-group clearfix\">\\n             <label class=\"radio radio-block\"\\n                    ng-repeat=\"item in form.titleMap\">\\n               <input type=\"radio\"\\n                      sf-changed=\"form\"\\n                      ng-disabled=\"form.readonly\"\\n                      ng-model=\"$$value$$\"\\n                      ng-model-options=\"form.ngModelOptions\"\\n                      schema-validate=\"form\"\\n                      ff-validate=\"form\"\\n                      ng-value=\"item.value\"\\n                      name=\"{{form.key.join(\\'.\\')}}\">\\n               <span class=\"radio-block-icon\" ng-if=\"item.iconClass\">\\n                 <i class=\"fa fa-{{item.iconClass}} fa-lg\"></i>\\n               </span>\\n               <span ng-bind-html=\"item.name\"></span>\\n             </label>\\n           </div>\\n           <span class=\"help-block\" sf-message=\"form.description\"></span>\\n         </div>'),e.put(\"app/components/cn-flex-form/forms/cn-radiobuttons.html\",'\\n        <div class=\"form-group schema-form-radiobuttons cn-radiobuttons {{form.htmlClass}}\"\\n             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\n          <label class=\"control-label\" ng-show=\"showTitle()\">{{form.title}}</label>\\n          <div class=\"btn-group clearfix\">\\n            <label class=\"btn btn-{{item.value}} {{form.btnClass}} {{item.value === $$value$$ ? \\'active\\' : \\'\\'}}\"\\n                   ng-repeat=\"item in form.titleMap\">\\n              <input type=\"radio\"\\n                     class=\"{{form.fieldHtmlClass}} hide\"\\n                     sf-changed=\"form\"\\n                     ng-disabled=\"form.readonly\"\\n                     ng-model=\"$$value$$\"\\n                     ng-model-options=\"form.ngModelOptions\"\\n                     schema-validate=\"form\"\\n                     ff-validate=\"form\"\\n                     ng-value=\"item.value\"\\n                     name=\"{{form.key.join(\\'.\\')}}\">\\n              <i class=\"fa fa-{{item.value}} fa-lg\"></i>\\n              <span ng-bind-html=\"item.name\"></span>\\n            </label>\\n          </div>\\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\\n        </div>'),e.put(\"app/components/cn-flex-form/forms/cn-percentage.html\",'\\n        <div class=\"form-group {{form.htmlClass}}\"\\n             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\n          <label class=\"control-label\"\\n                 ng-show=\"showTitle()\"\\n                 for=\"{{form.key && form.key[0]}}\">{{form.title}}</label>\\n          <div class=\"{{form.fieldClass}} input-group\">\\n            <input class=\"form-control\"\\n                   cn-percentage-format\\n                   ng-show=\"form.key\"\\n                   ng-model-options=\"form.ngModelOptions\"\\n                   ng-disabled=\"form.readonly\"\\n                   sf-changed=\"form\"\\n                   schema-validate=\"form\"\\n                   type=\"number\"\\n                   step=\"any\"\\n                   min=\"{{form.min}}\"\\n                   max=\"{{form.max}}\"\\n                   id=\"{{form.key && form.key[0]}}\"\\n                   name=\"{{form.key && form.key[0]}}\"\\n                   ng-model=\"$$value$$\">\\n             <div class=\"input-group-addon\"\\n                    ng-disabled=\"form.readonly\"\\n                    for=\"{{form.key && form.key[0]}}\">%</div>\\n          </div>\\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\\n        </div>'),e.put(\"app/components/cn-flex-form/forms/cn-display.html\",'\\n        <div class=\"form-group cn-display{{form.htmlClass}}\">\\n          <input ng-show=\"form.key\"\\n                 class=\"form-control\"\\n                 id=\"{{form.key.join(\\'.\\')}}\"\\n                 name=\"{{form.key.join(\\'.\\')}}\"\\n                 ng-disabled=\"true\"\\n                 value=\"{{form.getDisplay(form.key, form.arrayIndex)}}\">\\n        </div>'),e.put(\"app/components/cn-flex-form/forms/cn-fieldset.html\",'\\n        <fieldset ng-disabled=\"form.readonly\" class=\"schema-form-fieldset {{form.htmlClass}}\">\\n          <legend ng-click=\"form.toggleCollapse(form)\"\\n                  ng-class=\"{\\'sr-only\\': !showTitle(), collapsible: form.collapsible}\"\\n                  ng-mouseenter=\"form.render = true\">\\n            <i ng-show=\"form.collapsible\"\\n               class=\"fa fa-caret-{{form.collapsed ? \\'right\\' : \\'down\\'}}\"></i>\\n            {{ form.title }}\\n          </legend>\\n          <div class=\"help-block\" ng-show=\"form.description\" ng-bind-html=\"form.description\"></div>\\n          <div collapse=\"form.collapsed\">\\n            <div ng-if=\"form.render\">\\n              <sf-decorator ng-repeat=\"item in form.items\" form=\"item\"/>\\n            </div>\\n          </div>\\n        </fieldset>'),e.put(\"app/components/cn-flex-form/forms/cn-mediaupload.html\",'\\n        <div class=\"form-group {{form.htmlClass}}\"\\n             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\n          <label class=\"control-label\"\\n                 ng-show=\"showTitle()\"\\n                 for=\"{{form.key && form.key[0]}}\">{{form.title}}</label>\\n          <media-upload ng-model=\"$$value$$\"\\n                        cn-file-type=\"form.fileType\"\\n                        cn-upload-path=\"form.uploadPath\"\\n                        cn-data=\"form.data\"\\n                        cn-preview-path=\"form.previewPath\"\\n                        cn-model-value-key=\"form.modelValueKey\"\\n                        ng-model-options=\"form.ngModelOptions\"\\n                        sf-changed=\"form\"\\n                        schema-validate=\"form\"\\n                        ff-form=\"form\"\\n                        class=\"clearfix\">\\n          </media-upload>\\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\\n       </div>'),e.put(\"app/components/cn-flex-form/forms/cn-csvupload.html\",'\\n        <div class=\"form-group {{form.htmlClass}}\"\\n             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\n          <label class=\"control-label\"\\n                 ng-show=\"showTitle()\"\\n                 for=\"{{form.key && form.key[0]}}\">{{form.title}}</label>\\n          <csv-upload ng-model=\"$$value$$\"\\n                        cn-upload-path=\"form.uploadPath\"\\n                        ng-model-options=\"form.ngModelOptions\"\\n                        sf-changed=\"form\"\\n                        schema-validate=\"form\"\\n                        ff-form=\"form\"\\n                        class=\"clearfix\">\\n          </csv-upload>\\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\\n       </div>'),e.put(\"app/components/cn-flex-form/forms/cn-reusable.html\",'\\n        <div class=\"form-group cn-reusable {{form.htmlClass}}\"\\n             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\n          <label class=\"control-label\"\\n                 ng-show=\"showTitle()\"\\n                 for=\"{{form.key.join(\\'.\\')}}\">{{form.title}}</label>\\n          <cn-select-or\\n            ng-show=\"form.key\"\\n            select-from=\"form.library\"\\n            ng-model=\"$$value$$\"\\n            ng-model-options=\"form.ngModelOptions\"\\n            sf-changed=\"form\"\\n            schema-validate=\"form\"\\n            ff-form=\"form\"\\n            directiveId=\"form.directiveId\"\\n            item-template=\"form.itemTemplate\"\\n            toggle-text=\"form.toggleText\"\\n            disabled=\"form.readonly\"\\n            view=\"form.view\">\\n            <sf-decorator ng-repeat=\"item in form.items\" form=\"item\"/>\\n          </cn-select-or>\\n          <p ng-if=\"form.loadMore && form.view === \\'list\\'\">\\n            <a ng-click=\"form.loadMore()\"\\n               class=\"btn btn-default btn-block\">Load More</a>\\n          </p>\\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\\n        </div>'),e.put(\"app/components/cn-flex-form/forms/cn-table.html\",'        <div class=\"form-group cn-ff-table {{form.htmlClass}}\"             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">          <h6>{{form.title}}</h6>          <div class=\"row\">            <div ng-repeat=\"col in form.columns\" class=\"{{col.columnWidth}}\">              <p class=\"column-header\">{{col.columnHeader}}</p>            </div>          </div>          <div class=\"row\" ng-repeat=\"row in form.items\">            <div ng-repeat=\"col in row.items\" class=\"{{col.columnWidth}}\">              <sf-decorator form=\"col\"></sf-decorator>            </div>          </div>          <span class=\"help-block\" sf-message=\"form.description\"></span>        </div>        ')}angular.module(\"cn.flex-form\").config(e).run(r),e.$inject=[\"cnFlexFormServiceProvider\"],r.$inject=[\"$templateCache\"]}();\n//# sourceMappingURL=all.min.js.map\n","(function() {\n  'use strict';\n  angular.module('cn.flex-form', [\n    'ui.router',\n    'schemaForm',\n    'ui.bootstrap.datetimepicker',\n    'cnTagsInput',\n    'cn.util'\n  ]);\n})();","(function() {\n  'use strict';\n  angular\n      .module('cn.flex-form')\n      .provider('cnFlexFormConfig', cnFlexFormConfigProvider);\n\n  function cnFlexFormConfigProvider() {\n\n    cnFlexFormConfig.$inject = ['$stateParams'];\n\n    var ignoreParams = ['page', 'debug', 'sandbox', 'modal', 'modalId'];\n\n    return {\n      addIgnoreParam: addIgnoreParam,\n      $get: cnFlexFormConfig\n    };\n\n    ////////\n\n    function addIgnoreParam(param) {\n      ignoreParams.push(param);\n    }\n\n    function cnFlexFormConfig($stateParams) {\n      return {\n        getStateParams,\n        ignoreParams\n      };\n\n      ////////\n\n      function getStateParams() {\n        return _\n            .chain($stateParams)\n            .omit(ignoreParams)\n            .omit(function(v) {\n              return _.isUndefined(v) || _.isNull(v);\n            })\n            .value();\n      }\n    }\n\n  }\n\n})();\n","(function () {\n  'use strict';\n\n  angular\n    .module('cn.flex-form')\n    .directive('cnFlexFormHeader', cnFlexFormHeader);\n\n  function cnFlexFormHeader() {\n    return {\n      restrict: 'E',\n      scope: {\n        config: '=ffHeaderConfig',\n        submit: '&ffSubmit',\n        loadOffscreen: '&ffLoadOffscreen'\n      },\n      controller: FlexFormHeader,\n      bindToController: true,\n      controllerAs: 'vm',\n      template: `\n          <div class=\"col-md-6\">\n            <h5 ng-if=\"vm.config.title.lead\">{{::vm.config.title.lead}}</h5>\n            <h1>{{vm.config.title.main}}</h1>\n            <h5 ng-if=\"vm.config.title.sub\">{{::vm.config.title.sub}}</h5>\n          </div>\n          <div class=\"{{vm.config.buttonContainerClass || 'page-action-btns'}}\">\n            <div class=\"btn-options\"\n                 ng-mouseover=\"vm.loadOffscreen()\">\n              <a class=\"btn\"\n                 ng-if=\"vm.config.actionConfig.returnState\"\n                 ui-sref=\"{{vm.config.actionConfig.returnState}}\">\n                {{vm.config.actionConfig.returnText || 'Cancel'}}\n              </a>\n              <a class=\"btn\"\n                 ng-if=\"vm.config.actionConfig.closeButton\"\n                 ng-click=\"vm.config.actionConfig.closeButton.handler()\">\n                 Cancel\n              </a>\n              <span ng-repeat=\"button in vm.config.actionConfig.actions\">\n                <span ng-class=\"{'btn-group': button.options}\">\n                  <a class=\"btn {{button.style && 'btn-'+button.style}}\"\n                     ng-disabled=\"vm.isDisabled(button)\"\n                     ng-class=\"{'btn-primary': $index === vm.config.actionConfig.actions.length - 1}\"\n                     ng-click=\"vm.submit({handler: button.handler})\"\n                     tooltip=\"{{button.helptext}}\"\n                     tooltip-placement=\"bottom\"\n                     ng-bind-html=\"button.text || 'Save'\">\n                  </a>\n                  <a class=\"btn {{button.style && 'btn-'+button.style}} dropdown-toggle\"\n                          ng-disabled=\"vm.isDisabled(button)\"\n                          ng-class=\"{'btn-primary': $index === vm.config.actionConfig.actions.length - 1}\"\n                          ng-show=\"button.options\"\n                          data-toggle=\"dropdown\">\n                    <span class=\"caret\"></span>\n                  </a>\n                  <ul class=\"dropdown-menu\" ng-if=\"button.options\">\n                    <li ng-repeat=\"option in button.options\"\n                        ng-disabled=\"vm.isDisabled(option)\">\n                      <a ng-click=\"vm.submit({handler: option.handler})\"\n                         ng-bind-html=\"option.text\">\n                      </a>\n                    </li>\n                  </ul>\n                </span>\n              </span>\n            </div>\n            <p class=\"data-updated-at text-right\"\n               id=\"data-updated-at\"\n               ng-hide=\"vm.config.noData\">\n              <a ng-click=\"vm.updateData()\">Update Data</a>\n            </p>\n          </div>`\n    };\n  }\n\n  FlexFormHeader.$inject = ['$scope'];\n  function FlexFormHeader($scope) {\n    var vm = this;\n\n    vm.updateData = updateData;\n    vm.isDisabled = isDisabled;\n\n    ///////////\n\n    function updateData() {\n      console.log('updateData:', updateData);\n      $scope.$emit('ffRefreshData');\n    }\n\n    function isDisabled(btnConfig) {\n      if(vm.config.isDisabled) return vm.config.isDisabled(btnConfig);\n      return false;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n      .module('cn.flex-form')\n      .controller('FlexFormModalLoader', FlexFormModalLoader)\n      .factory('FlexFormModal', FlexFormModal);\n\n  FlexFormModalLoader.$inject = [\n    'FlexFormModal', '$state', '$rootScope', '$stateParams'\n  ];\n  function FlexFormModalLoader(FlexFormModal, $state, $rootScope, $stateParams) {\n\n    var vm = this;\n    console.log('FlexFormModalLoader:', $stateParams.modal);\n\n    activate();\n\n    //////////\n\n    function activate() {\n      vm.modal = FlexFormModal.open(vm);\n      vm.modal.result.finally(goBack);\n\n      vm.dismiss = $rootScope.$on('$stateChangeStart', dismissModal);\n    }\n\n    function goBack() {\n      if (!$state.transition) {\n        $state.go('^');\n      }\n    }\n\n    function dismissModal() {\n      console.log('dismissModal:', arguments);\n      vm.dismiss();\n      vm.modal.dismiss();\n    }\n  }\n\n  FlexFormModal.$inject = ['cnFlexFormModalLoaderService', '$modal', '$stateParams'];\n  function FlexFormModal(cnFlexFormModalLoaderService, $modal, $stateParams) {\n\n    var instance = {\n      open: openModal\n    };\n\n    return instance;\n\n    function openModal() {\n      var currentModal = cnFlexFormModalLoaderService.getMapping($stateParams.modal);\n      console.log('currentModal:', currentModal);\n\n      this.modal = $modal.open(currentModal);\n      return this.modal;\n    }\n\n  }\n\n})();\n","(function() {\n  'use strict';\n\n  angular\n      .module('cn.flex-form')\n      .provider('cnFlexFormModalLoaderService', cnFlexFormModalLoaderServiceProvider);\n\n  var modalMap = {};\n  var promiseMap = {};\n\n  function getPromises(state) {\n    var promises = promiseMap[state];\n    if(!promises) {\n      promises = {};\n      promiseMap[state] = promises;\n    }\n    return promises;\n  }\n\n  function getPromise(state, id, $q) {\n    var promises = getPromises(state);\n    var promise = promises[id];\n    if(!promise) {\n      promise = $q.defer();\n      promises[id] = promise;\n    }\n    return promise;\n  }\n\n  function getPromiseForResolve(state, id, $q) {\n    var promises = getPromises(state);\n    var promise = $q.defer();\n    promises[id] = promise;\n    return promise;\n  }\n\n  function cnFlexFormModalLoaderServiceProvider() {\n\n    var provider = {\n      addMapping,\n      $get: cnFlexFormModalLoaderService\n    };\n\n    parent.$inject = ['$stateParams', '$q'];\n\n    return provider;\n\n    ////////////\n\n    function addMapping(state, def) {\n      def.resolve = {\n        parent: parent\n      };\n      modalMap[state] = def;\n    }\n\n    function parent($stateParams, $q) {\n      return getPromise($stateParams.modal, $stateParams.modalId, $q).promise;\n    }\n  }\n\n  cnFlexFormModalLoaderService.$inject = ['$q'];\n\n  function cnFlexFormModalLoaderService($q) {\n    var service = {\n      getMapping: getMapping,\n      resolveMapping: resolveMapping\n    };\n\n    return service;\n\n    /////////////\n\n    function resolveMapping(state, id, parent) {\n      var d = getPromiseForResolve(state, id, $q);\n      d.resolve(parent);\n      return d.promise;\n    }\n\n    function getMapping(state) {\n      return modalMap[state];\n    }\n  }\n\n})();\n","(function() {\n  'use strict';\n  angular\n      .module('cn.flex-form')\n      .provider('cnFlexFormTypes', cnFlexFormTypesProvider);\n\n  function cnFlexFormTypesProvider() {\n\n    var fieldTypeRegister = [{\n      condition: field => field.type === 'hidden',\n      type: 'hidden'\n    }, {\n      condition: field => field.type.includes('radios'),\n      type: 'cn-radios'\n    }, {\n      condition: field => field.type.includes('radiobuttons'),\n      type: 'cn-radiobuttons'\n    }, {\n      condition: field => field.type.includes('autocomplete') || field.titleMap || field.titleMapResolve || field.titleMapQuery,\n      type: 'cn-autocomplete'\n    }, {\n      condition: field => field.type === 'cn-datetimepicker' || field.type === 'datetime-local' || field.type === 'time-minutes',\n      type: 'cn-datetimepicker'\n    }, {\n      condition: field => field.type === 'help',\n      type: 'help'\n    }, {\n      condition: field => field.type.includes('display'),\n      type: 'cn-display'\n    }, {\n      condition: field => field.schema && field.schema.format && field.schema.format.includes('currency'),\n      type: 'cn-currency'\n    }, {\n      condition: field => field.schema && field.schema.format === 'percentage',\n      type: 'cn-percentage'\n    }, {\n      condition: field => field.type === 'toggle' || field.type === 'boolean',\n      type: 'cn-toggle'\n    }, {\n      condition: field => field.type === 'mediaupload',\n      type: 'cn-mediaupload'\n    }, {\n      condition: field => field.type === 'csvupload',\n      type: 'cn-csvupload'\n    }, {\n      condition: field => field.type === 'reusable',\n      type: 'cn-reusable'\n    }, {\n      condition: field => field.type === 'table',\n      type: 'cn-table'\n    }, {\n      condition: field => field.type === 'array',\n      type: 'array'\n    }];\n\n    return {\n      registerFieldType: registerFieldType,\n      $get: cnFlexFormTypes\n    };\n\n    ////////\n\n    function registerFieldType(fieldType) {\n      fieldTypeRegister.unshift(fieldType);\n    }\n\n    function cnFlexFormTypes() {\n      return {\n        fieldTypeRegister: fieldTypeRegister,\n        getFieldType: getFieldType\n      };\n\n      /////////\n\n      function getFieldType(field) {\n        for(var i = 0, l = fieldTypeRegister.length; i < l; i++) {\n          if(fieldTypeRegister[i].condition(field)) {\n            return fieldTypeRegister[i].type;\n          }\n        }\n        return field.type || field.schema && field.schema.type;\n      }\n    }\n\n  }\n\n})();","(function() {\n  'use strict';\n  angular\n      .module('cn.flex-form')\n      .directive('ffValidate', ffValidate);\n\n  function ffValidate() {\n    return {\n      restrict: 'A',\n      scope: { form: '=ffValidate' },\n      require: 'ngModel',\n      link: link\n    };\n  }\n\n  function link($scope, elem, attrs, ngModel) {\n    //console.log('$scope, ngModel:', $scope.form, ngModel);\n    if($scope.form && $scope.form.required) {\n      $scope.$watch(function() { return ngModel.$viewValue; }, function(value) {\n        // override schemaForm validation\n        ngModel.$setValidity('schemaForm', true);\n        ngModel.$setValidity('tv4-302', value);\n      });\n    }\n  }\n})();","(function() {\n  'use strict';\n  angular\n      .module('cn.flex-form')\n      .directive('cnFlexForm', cnFlexForm);\n\n  function cnFlexForm() {\n    return {\n      restrict: 'E',\n      template: '\\\n        <div ng-if=\"vm.showForm()\">\\\n          <ng-form name=\"{{vm.formName}}\"\\\n                sf-schema=\"vm.config.schema.schema\"\\\n                sf-form=\"vm.form\"\\\n                sf-model=\"vm.model\"></ng-form>\\\n          <!-- debug panel to display model -->\\\n          <section ng-if=\"vm.debug\"><pre pretty-json=\"vm.model\"></pre></section>\\\n        </div>\\\n      ',\n      scope: {\n        config: '=ffConfig',\n        model: '=ffModel',\n        formIndex: '=ffFormIndex',\n        formName: '=ffFormName',\n        delayForm: '=ffDelayForm',\n        cleanupEvent: '=ffCleanupEvent'\n      },\n      controller: FlexForm,\n      controllerAs: 'vm',\n      bindToController: true\n    };\n  }\n\n  FlexForm.$inject = ['cnFlexFormService', '$scope', '$location'];\n  function FlexForm(cnFlexFormService, $scope, $location) {\n    var vm = this;\n    vm.service = undefined;\n    vm.events = [];\n\n    vm.activate = activate;\n    vm.cleanup = cleanup;\n    vm.process = process;\n    vm.showForm = showForm;\n\n    vm.events.push($scope.$watch(function() { return vm.config.schema; }, vm.process));\n\n    vm.activate();\n\n    $scope.$on(vm.cleanupEvent || '$destroy', vm.cleanup);\n\n    //////////\n\n    function activate() {\n      //console.log('vm.formName:', vm.formName);\n      if(angular.isNumber(vm.formIndex)) {\n        vm.form = vm.config.schema.forms[vm.formIndex].form;\n      }\n      else {\n        vm.form = vm.config.schema.form;\n      }\n\n      // debug\n      if($location.search().debug) {\n        vm.debug = true;\n      }\n    }\n\n    function process(cur, prev) {\n      //console.log('process:', cur, prev);\n      if(vm.form) {\n        if(!vm.service) {\n          vm.service = cnFlexFormService(vm.config.schema, vm.model, {\n            formCtrl: vm.config.formCtrl,\n            getSchema: vm.config.getSchema,\n            updateSchema: updateSchema\n          });\n        }\n        else {\n          console.log('vm.service.isCompiled():', vm.service.isCompiled());\n          vm.service.compile(vm.config.schema, vm.model);\n        }\n        //$scope.$broadcast('schemaFormRedraw');\n      }\n    }\n\n    function showForm() {\n      //console.log('showForm:', vm.delayForm, vm.formName);\n      return !vm.delayForm && vm.service && vm.service.isCompiled();\n    }\n\n    function updateSchema(schema) {\n      vm.config.schema = schema;\n      vm.activate();\n    }\n\n    function cleanup() {\n      _.each(vm.events, function(listener) {\n        listener();\n      });\n      vm.service.cleanup();\n    }\n\n  }\n})();","(function() {\n  angular\n      .module('cn.flex-form')\n      .provider('cnFlexFormRoutes', cnFlexFormRoutesProvider)\n      .config(cnFlexFormRoutes);\n\n  cnFlexFormRoutesProvider.$inject = ['$stateProvider'];\n  function cnFlexFormRoutesProvider($stateProvider) {\n    var provider = {\n      addStates: addStates,\n      $get: $get\n    };\n\n    return provider;\n\n    ////////////\n\n    function $get() {\n      // nothing to do here, but required\n    }\n\n    function addStates(options) {\n      $stateProvider\n          .state(options.name + '.page.modal', {\n            url: '/~:modal/:modalId',\n            controller: 'FlexFormModalLoader',\n            controllerAs: 'vm',\n            permissions: options.permissions\n          });\n    }\n  }\n\n  cnFlexFormRoutes.$inject = ['$stateProvider'];\n  function cnFlexFormRoutes($stateProvider) {\n\n    $stateProvider\n        .state('flex-form-sandbox', {\n          url: '/flex-form/sandbox',\n          controller: 'FlexFormSandbox',\n          controllerAs: 'vm',\n          templateUrl: 'app/components/cn-flex-form/sandbox.html'\n        });\n  }\n\n})();","(function() {\n  'use strict';\n  angular\n      .module('cn.flex-form')\n      .provider('cnFlexFormService', cnFlexFormServiceProvider);\n\n  var fieldTypeHandlers = {\n    'cn-radios': 'processRadios',\n    'cn-radiobuttons': 'processRadiobuttons',\n    'cn-autocomplete': 'processSelect',\n    'cn-datetimepicker': 'processDate',\n    'help': 'processHelp',\n    'cn-display': 'processDisplay',\n    'cn-currency': 'processCurrency',\n    'cn-percentage': 'processPercentage',\n    'cn-mediaupload': 'processMediaUpload',\n    'cn-csvupload': 'processCsvUpload',\n    'cn-reusable': 'processReusable',\n    'cn-toggle': 'processToggle',\n    'cn-table': 'processTable',\n    'array': 'processArray'\n  };\n\n  cnFlexFormServiceProvider.$inject = [\n    'schemaFormDecoratorsProvider',\n    'cnFlexFormTypesProvider'\n  ];\n\n  function cnFlexFormServiceProvider(schemaFormDecoratorsProvider,\n                                     cnFlexFormTypesProvider) {\n    return {\n      registerField,\n      $get: CNFlexFormService\n    };\n\n    //////////\n\n    function registerField(fieldType) {\n      if(fieldType.condition) {\n        cnFlexFormTypesProvider.registerFieldType({\n          condition: fieldType.condition,\n          type: fieldType.type\n        });\n      }\n\n      if(fieldType.handler) {\n        fieldTypeHandlers[fieldType.type] = fieldType.handler;\n      }\n\n      if(fieldType.templateUrl) {\n        schemaFormDecoratorsProvider.addMapping(\n            'bootstrapDecorator',\n            fieldType.type,\n            fieldType.templateUrl\n        );\n        schemaFormDecoratorsProvider.createDirective(\n            fieldType.type,\n            fieldType.templateUrl\n        );\n      }\n    }\n  }\n\n  CNFlexFormService.$inject = [\n    'Api', '$parse', 'cnFlexFormConfig', 'cnFlexFormTypes', 'sfPath',\n    '$interpolate', '$rootScope', '$timeout', 'cnUtil', '$stateParams'\n  ];\n\n  function CNFlexFormService(Api, $parse, cnFlexFormConfig, cnFlexFormTypes, sfPath,\n                             $interpolate, $rootScope, $timeout, cnUtil, $stateParams) {\n\n    var services = [];\n    var prototype = {\n      compile,\n      addArrayCopy,\n      addToDataCache,\n      addToFormCache,\n      broadcastErrors,\n      buildError,\n      cleanup,\n      deregisterHandlers,\n      deregisterArrayHandlers,\n      getArrayCopies,\n      getArrayCopiesFor,\n      getArrayScopes,\n      getFromDataCache,\n      getFromFormCache,\n      getKey,\n      getSchema,\n      handleResolve,\n      initArrayCopyWatch,\n      initModelWatch,\n      initSchemaParams,\n      isCompiled,\n      onModelWatch,\n      parseCondition,\n      parseExpression,\n      processArray,\n      processDefault,\n      processDisplay,\n      processField,\n      processFieldset,\n      processFieldWatch,\n      processComponent,\n      processConditional,\n      processCurrency,\n      processPercentage,\n      processDate,\n      processHelp,\n      processRadios,\n      processRadiobuttons,\n      processReusable,\n      processSchema,\n      processSelectDisplay,\n      processResolve,\n      processSection,\n      processSelect,\n      processTable,\n      processTemplate,\n      processToggle,\n      processUpdatedSchema,\n      processMediaUpload,\n      processCsvUpload,\n      registerArrayHandlers,\n      registerHandler,\n      registerResolve,\n      reprocessField,\n      setArrayIndex,\n      setupConfig,\n      setupArraySelectDisplay,\n      setupSelectDisplay,\n      setupSchemaRefresh\n    };\n\n    function CNFlexFormConstructor(schema, model, config) {\n      var service;\n      if(services.length) {\n        for(var i = 0, l = services.length; i < l; i++) {\n          if(services[i].model === model) {\n            service = services[i];\n            service.compile(schema, model, config);\n            break;\n          }\n        }\n      }\n      if(!service) {\n        service = new CNFlexForm(schema, model, config);\n        services.push(service);\n      }\n      return service || new CNFlexForm(schema, model, config);\n    }\n\n    function CNFlexForm(schema, model, config) {\n\n      if($stateParams.debug) {\n        window.services = services;\n      }\n\n      this.arrayCopies = {};\n      this.arrayListeners = {};\n      this.dataCache = {};\n      this.defaults = {};\n      this.errors = [];\n      this.events = [];\n      this.formCache = {};\n      this.listeners = {};\n      this.resolveRegister = {};\n      this.model = model;\n      this.updates = 0;\n\n      this.params = cnFlexFormConfig.getStateParams();\n\n      this._ = _;\n\n      this.compile(schema, model, config);\n    }\n\n    _.extend(CNFlexForm.prototype, prototype);\n    _.extend(CNFlexFormConstructor, prototype);\n\n    return CNFlexFormConstructor;\n\n    //////////////\n\n    function compile(schema, model, config) {\n      var service = this;\n\n      service.schema = schema;\n      service.model = model;\n\n      if(!service.isCompiled()) {\n        service.setupConfig(config);\n\n        if(schema.forms) {\n          _.each(schema.forms, function(form) {\n            _.each(form.form, service.processField.bind(service));\n          });\n        }\n        else {\n          _.each(schema.form, service.processField.bind(service));\n        }\n\n        service.initModelWatch();\n        service.initArrayCopyWatch();\n        service.isCompiled(true);\n      }\n\n      service.broadcastErrors();\n    }\n\n    function isCompiled(setValue) {\n      var service = this;\n      if(setValue) {\n        service.schema.compiled = setValue;\n      }\n      return service.schema && service.schema.compiled;\n    }\n\n    function setupConfig(config) {\n      var service = this;\n      if(config) {\n        if(config.formCtrl) service.formCtrl = config.formCtrl;\n        if(config.updateSchema) service.updateSchema = config.updateSchema;\n        if(config.getSchema) service.getSchemaForm = service.setupSchemaRefresh(config.getSchema);\n      }\n    }\n\n    function processSchema(field) {\n      var service = this,\n          schema = field.schema;\n\n      if(schema) {\n        field.getSchemaType = function() {\n          return _.isArray(schema.type) ? _.first(schema.type) : schema.type;\n        };\n\n        service.processDefault(field);\n      }\n    }\n\n    function processDefault(field) {\n      var service = this,\n          schema = field.schema;\n\n      if(schema.default) {\n        var key = service.getKey(field.key);\n        // if schemaUpdate hasn't been triggered, let schemaForm directive handle defaults\n        if(service.updates) {\n          if(key.includes && key.includes('[]')) return;\n          var model = service.parseExpression(field.key, service.model);\n          var modelValue = model.get();\n          // if there's an existing default and it's the same as the current value\n          // update the current value to the new default\n          if(_.isTrulyEmpty(modelValue) || angular.equals(modelValue, service.defaults[key])) {\n            model.set(schema.default);\n          }\n        }\n        service.defaults[key] = angular.copy(schema.default);\n      }\n\n      if(schema.format === 'url' && !field.validationMessage) {\n        if(!field.type) field.type = 'url';\n        field.validationMessage = 'Must be a valid url (https://...)';\n      }\n    }\n\n    function processFieldset(fieldset) {\n      var service = this;\n\n      fieldset.type = 'cn-fieldset';\n      fieldset.items.forEach(service.processField.bind(service));\n\n      if(fieldset.collapsible) {\n        fieldset.toggleCollapse = (fieldset) => {\n          if(fieldset.collapsible) {\n            fieldset.collapsed = !fieldset.collapsed;\n          }\n        };\n\n        fieldset.render = !fieldset.collapsed;\n      }\n      else {\n        fieldset.render = true;\n      }\n    }\n\n    function processField(field) {\n      var service = this;\n\n      if (field.selectDisplay) {\n        service.processSelectDisplay(field, service.getSchema(field.key));\n      }\n\n      if(field.type === 'fieldset') {\n        service.processFieldset(field);\n      }\n      else {\n        if(!field._ogKeys) {\n          field._ogKeys = _.without(_.keys(field), 'key', 'htmlClass');\n        }\n\n        var key = service.getKey(field.key);\n\n        if(field.key) {\n          service.addToFormCache(field, key);\n          field.schema = service.getSchema(key);\n\n          if(/*!field.immutable && */field.schema) {\n            if(field.schema.description) field.description = field.schema.description;\n            if(field.readonly && !field.schema.readonly) field.readonly = false;\n            if(field.schema.type === 'array' && !('showClearAll' in field)) field.showClearAll = true;\n          }\n        }\n\n        service.processSchema(field);\n\n        if(!field.type) field.type = field.getSchemaType && field.getSchemaType();\n\n        if(field.resolve) service.processResolve(field);\n\n        if(field.watch) service.processFieldWatch(field);\n\n        if(field.type === 'section' || field.type === 'tabarray') {\n          service.processSection(field);\n        }\n        else if(field.type === 'component') {\n          service.processComponent(field);\n        }\n        else {\n\n          var fieldType = cnFlexFormTypes.getFieldType(field);\n          var handler = fieldTypeHandlers[fieldType];\n          if(_.isString(handler)) {\n            service[handler](field);\n          }\n          else if(_.isFunction(handler)) {\n            handler.call(service, field);\n          }\n\n          if(field.conditionals) {\n            service.processConditional(field);\n          }\n          if(field.updateSchema) {\n            service.registerHandler(field, null, field.updateSchema);\n          }\n          if(field.error) {\n            service.errors.push(service.buildError(field));\n            if (_.isEmpty(field.ngModelOptions)) {\n              field.ngModelOptions = {\n                allowInvalid: true\n              };\n            } else {\n              field.ngModelOptions.allowInvalid = true;\n            }\n          }\n          else if(_.find(service.errors, {key: key})) {\n            service.errors = _.reject(service.errors, {key: key});\n            $rootScope.$broadcast('schemaForm.error.' + key, 'schemaForm', true);\n            $rootScope.$broadcast('schemaForm.error.' + key, 'serverValidation', true);\n          }\n        }\n      }\n    }\n\n    function getKey(key) {\n      if(_.isArray(key)) {\n        key = _.reduce(key, function(total, next) {\n          if(/^(\\d*)$/.test(next)) {\n            return total + '[' + next + ']';\n          }\n          return total + '.' + next;\n        });\n      }\n      return key;\n    }\n\n\n    function getSchema(key, depth) {\n      var service = this;\n      if(!key) return;\n\n      key = service.getKey(key);\n\n      //key = key.split('.');\n      //key = key\n      //    .replace(/arrayIndex/g, '')\n      //    .replace(/(\\[')([^.]+)\\.([^.]+)('])/g, '.$2%ff_dt%$3')\n      //    .replace(/\\./g, '%ff_sp%')\n      //    .replace(/%ff_dt%/g, '.')\n      //    .split('%ff_sp%');\n      key = sfPath.parse(key);\n      depth = depth || service.schema.schema.properties;\n\n      // why do we do this? it's breaking stuff\n      //if (_.last(key) === '') key.pop();\n\n      let first, next;\n\n      while(key.length > 1) {\n        first = key[0];\n        next = key[1];\n        if(/^\\d*$/.test(next)) {\n          if(key.length === 2) {\n            depth = depth = depth[key.shift()];\n          }\n          else {\n            depth = depth[key.shift()].items.properties;\n            key.shift();\n          }\n        }\n        else {\n          depth = depth[key.shift()].properties;\n        }\n      }\n\n      // if array item\n      first = key[0] || 'items';\n\n      return depth[first];\n    }\n\n    function processResolve(field) {\n      var service = this;\n\n      _.each(field.resolve, function(dataProp, fieldProp) {\n        service.handleResolve(field, fieldProp, dataProp);\n\n        var resolveType = dataProp.match(/^(schema\\.data\\.|model\\.)(\\w+)/);\n\n        if(resolveType) {\n          if(resolveType[1] === 'schema.data.') {\n            service.registerResolve(field, fieldProp, resolveType[2]);\n          }\n          else if(resolveType[1] === 'model.') {\n            service.registerHandler(resolveType[2], function() {\n              service.handleResolve(field, fieldProp, dataProp);\n            });\n          }\n        }\n      });\n\n      return field;\n    }\n\n    function handleResolve(field, fieldProp, exp) {\n      var service = this;\n      var data = service.parseExpression(exp).get();\n      // if we're resolving from model but defaults haven't been applied yet, resolve from default itself\n      if(!data && exp.indexOf('model.') === 0) {\n        data = service.getSchema(exp.replace('model.', '')).default;\n      }\n      console.log('handleResolve:', data, fieldProp, exp);\n      if (data && data.cursor) {\n        field.loadMore = function() {\n          var dataProp = exp.match(/schema\\.data\\.(.+)/)[1];\n          service.refreshSchema(`data:${dataProp}:${data.cursor}`);\n        };\n      } else {\n        delete field.loadMore;\n      }\n      field[fieldProp] = (data && data.data) ? data.data : data;\n    }\n\n    function registerResolve(field, fieldProp, dataProp) {\n      var service = this;\n\n      let fieldKey = service.getKey(field.key);\n      service.resolveRegister[dataProp] = service.resolveRegister[dataProp] || {};\n\n      let register = service.resolveRegister[dataProp];\n      register[fieldKey] = register[fieldKey] || [];\n      register[fieldKey].push({\n        field: field,\n        prop: fieldProp\n      });\n    }\n\n    function processConditional(field) {\n      var service = this;\n      _.each(field.conditionals, (condition, key) => {\n        let handler = (val, prev) => {\n          field[key] = service.parseCondition(condition);\n          if (key === 'required') {\n            $rootScope.$broadcast('schemaFormValidate');\n          }\n        };\n        field\n            .conditionals[key]\n            .match(/model\\.([^\\s]+)/g)\n            .map(path => path.match(/model\\.([^\\s]+)/)[1])\n            .forEach(key => {\n              console.log('registering conditional handler:', key);\n              service.registerHandler(key, handler);\n            });\n        handler();\n      });\n    }\n\n    function processFieldWatch(field) {\n      var service = this,\n          schema = field.schema;\n\n      field.watch = _.isArray(field.watch) ? field.watch : [field.watch];\n\n      _.each(field.watch, function(watch) {\n        if(watch.resolution) {\n          let condition = watch.condition;\n          let resolution = watch.resolution;\n          let handler;\n\n          if(_.isFunction(resolution)) {\n            handler = function(cur, prev) {\n              if(!condition || service.parseCondition(condition)) {\n                resolution(cur, prev);\n              }\n            };\n          }\n          else {\n            var adjustment = {};\n\n            adjustment.date = resolution.match(/\\+ ?(\\d+) days/);\n\n            if(adjustment.date) {\n              adjustment.date = adjustment.date[1];\n              resolution = resolution.replace(adjustment.date, '').trim();\n            }\n            else {\n              adjustment.math = resolution.match(/(\\+|\\-|\\/|\\*) ?(\\S+)/);\n\n              if(adjustment.math) {\n                adjustment.operator = {\n                  '+': 'add',\n                  '-': 'subtract',\n                  '*': 'multiply',\n                  '/': 'divide'\n                }[adjustment.math[1]];\n\n                adjustment.adjuster = service.parseExpression(adjustment.math[2]);\n              }\n            }\n\n            resolution = resolution.match(/(\\S+) ?= ?(\\S+)/);\n\n            handler = (val, prev, key, trigger) => {\n              let curCondition = condition && replaceArrayIndex(condition, key);\n              let updatePath = replaceArrayIndex(resolution[1], key);\n              let fromPath = replaceArrayIndex(resolution[2], key);\n\n              let update = service.parseExpression(updatePath);\n\n              // avoid loop where two watches keep triggering each other\n              if(trigger === update.path().key) return;\n              trigger = update.path().key;\n\n              let from = service.parseExpression(fromPath);\n\n              if(!condition || service.parseCondition(curCondition)) {\n                if(adjustment.date) {\n                  update.set(moment(from.get()).add(adjustment.date, 'days').toDate());\n                }\n                else if(adjustment.math) {\n                  //var result = _[adjustment.operator](from.get(), adjustment.adjuster.get());\n                  //let result = eval(from.get() + adjustment.math[1] + adjustment.adjuster.get());\n                  let result = $parse(from.get() + adjustment.math[1] + adjustment.adjuster.get())();\n                  schema = schema || field.items && (field.items[0].schema || (field.items[0].items && field.items[0].items[0].schema));\n                  if(field.type === 'cn-currency') {\n                    let p = schema && schema.format === 'currency-dollars' ? 2 : 0;\n\n                    if(adjustment.math[1] === '*') {\n                      result = _.floor(result, p);\n                    }\n                    else if(adjustment.math[1] === '/') {\n                      result = _.ceil(result, p);\n                    }\n                    else {\n                      result = _.round(result, p);\n                    }\n                  }\n                  //service.listeners[update.path().key].prev = result;\n                  if(service.listeners[trigger]) {\n                    service.listeners[trigger].trigger = key;\n                  }\n                  update.set(result || 0);\n                }\n                else {\n                  update.set(from.get());\n                }\n              }\n            };\n          }\n\n          service.registerHandler(field, handler, field.updateSchema, watch.initialize);\n        }\n      });\n    }\n\n    function parseCondition(condition) {\n      let service = this;\n      if (condition.startsWith(\"_\")) {\n        let exp = /^_\\.(.*?)\\((.*?),[\\s(]*(.*?)\\)?\\s*=>[{\\s]*(?:return)?(.*?)\\}?\\)$/;\n        let [, fn, list, predicateParams, predicateBody] = condition.match(exp);\n        return _[fn]($parse(list)(service), generatePredicate(predicateParams, predicateBody));\n      } else {\n        return $parse(condition)(service);\n      }\n    }\n\n    function generatePredicate(params, body) {\n      return (...args) =>\n        $parse(body)(params\n                .replace(/\\s/g, '')\n                .split(',')\n                .reduce((acc, cur, i) => { acc[cur] = args[i]; return acc; }, {})\n              );\n    }\n\n    function registerHandler(key, handler, updateSchema, runHandler) {\n      var service = this;\n\n      // if field is passed instead of key\n      if(_.isObject(key) && !_.isArray(key)) {\n        if(!key.key && key.items) {\n          _.each(key.items, function(field) {\n            service.registerHandler(field, handler, field.updateSchema);\n          });\n          return;\n        }\n        else {\n          key = key.key;\n        }\n      }\n\n      key = service.getKey(key);\n      var arrMatch = key.match(/([^[\\]]*)\\[]\\.?(.+)/);\n\n      if(arrMatch) {\n        service.registerArrayHandlers(arrMatch[1], arrMatch[2], handler, updateSchema, runHandler);\n        return;\n      }\n\n      var cur = service.parseExpression(key, service.model).get();\n      let defaultValue = service.getSchema(key).default;\n\n      if(!service.listeners[key]) {\n        var prev = _.isUndefined(cur) ? angular.copy(defaultValue) : angular.copy(cur);\n        service.listeners[key] = {\n          handlers: [],\n          updateSchema: updateSchema,\n          prev: prev\n        };\n      }\n\n      if(handler) {\n        service.listeners[key].handlers.push(handler);\n        if(runHandler) handler(cur, null, key);\n      }\n    }\n\n    function registerArrayHandlers(arrKey, fieldKey, handler, updateSchema, runHandler) {\n      var service = this;\n      var onArray = function(cur, prev, reorder) {\n\n        if(!prev && prev !== 0 && (cur | 0) < 1) return;\n        var i, l, key;\n\n        if(prev > cur || reorder) {\n          var lastKey = arrKey + '[' + (prev - 1) + ']' + '.' + fieldKey;\n          // only deregister handlers once each time an element is removed\n          if (service.listeners[lastKey]) {\n            for(i = 0, l = prev; i < l; i++) {\n              key = arrKey + '[' + i + ']' + '.' + fieldKey;\n              service.deregisterHandlers(key);\n            }\n          }\n          for(i = 0, l = cur; i < l; i++) {\n            key = arrKey + '[' + i + ']' + '.' + fieldKey;\n            service.registerHandler(key, handler, updateSchema);\n            //no need to call if just reregisering handlers\n            //if(runHandler) handler(null, null, key);\n          }\n        }\n        else if(cur > (prev || 0)) {\n          for(i = prev | 0, l = cur; i < l; i++) {\n            key = arrKey + '[' + i + ']' + '.' + fieldKey;\n            service.registerHandler(key, handler, updateSchema, runHandler);\n            //if(runHandler) handler(null, null, key);\n          }\n        }\n      };\n\n      var arrVal = service.parseExpression(arrKey, service.model).get();\n      _.each(arrVal, function(field, i) {\n        var key = arrKey + '[' + i + ']' + '.' + fieldKey;\n        service.registerHandler(key, handler, updateSchema);\n        if(runHandler) handler(null, null, key);\n      });\n\n      if(service.arrayListeners[arrKey + '.length']) {\n        service.arrayListeners[arrKey + '.length'].handlers.push(onArray);\n      } else {\n        service.arrayListeners[arrKey + '.length'] = {\n          handlers: [onArray],\n          prev: arrVal ? arrVal.length : 0\n        };\n      }\n    }\n\n    function deregisterHandlers(key) {\n      var service = this;\n\n      key = service.getKey(key);\n      var arrMatch = key.match(/([^[\\]]*)\\[]\\.?(.+)/);\n\n      if(arrMatch) {\n        service.deregisterArrayHandlers(arrMatch[1], arrMatch[2]);\n        return;\n      }\n\n      if(service.listeners[key]) service.listeners[key].handlers = [];\n    }\n\n    function deregisterArrayHandlers(arrKey, fieldKey) {\n      var service = this;\n\n\n      service.parseExpression(arrKey, service.model).get().forEach((item, i) => {\n        service.deregisterHandlers(`${arrKey}[${i}].${fieldKey}`);\n      });\n    }\n\n    function initModelWatch() {\n      var service = this;\n      if(service.watching) return;\n      if(service.modelWatch) service.modelWatch();\n\n      service.modelWatch = $rootScope.$watch(\n          function() { return service.model; },\n          service.onModelWatch.bind(service),\n          true\n      );\n\n      service.initSchemaParams();\n      service.watching = true;\n      service.firstUpdate = true;\n    }\n\n    function onModelWatch(cur, prev) {\n      var service = this;\n      // we always run through the listeners on the first update because angular seems to mess up\n      // when the defaults are applied and uses the same object for both cur and prev\n      if(service.firstUpdate || !angular.equals(cur, prev)) {\n        service.firstUpdate = false;\n        cnUtil.cleanModel(service.model);\n\n        service.prevParams = angular.copy(service.params);\n        service.params = cnFlexFormConfig.getStateParams();\n\n        _.each(service.arrayListeners, (listener, key) => {\n          let val = service.parseExpression(key, service.model).get();\n          if(!angular.equals(val, listener.prev)) {\n            listener.handlers.forEach(handler => handler(val, listener.prev));\n            listener.prev = angular.copy(val);\n          }\n        });\n\n        _.each(service.listeners, (listener, key) => {\n          if(listener) {\n            let val = service.parseExpression(key, service.model).get();\n            const isInitArray = angular.equals(val, []) && !listener.prev;\n            if(!angular.equals(val, listener.prev) && !isInitArray) {\n              console.log(':: val, prev ::', val, listener.prev);\n              listener.handlers.forEach(handler => {\n                handler(val, listener.prev, key, listener.trigger);\n              });\n              listener.trigger = null;\n              listener.prev = angular.copy(val);\n            }\n            if(listener.updateSchema && !angular.isUndefined(val) && !isInitArray && val !== null) {\n              service.params[key] = val;\n            }\n          }\n        });\n\n        if(!angular.equals(service.params, service.prevParams)) {\n          if(service.model.id && !service.updates && _.isEmpty(service.prevParams)) {\n            ++service.updates;\n          }\n          else {\n            service.refreshSchema();\n          }\n        }\n      }\n    }\n\n    function initSchemaParams() {\n      var service = this;\n      _.each(service.listeners, function(listener, key) {\n        if(listener) {\n          var val = service.parseExpression(key, service.model).get();\n          if(listener.updateSchema && !angular.isUndefined(val) && val !== null) {\n            service.params[key] = val;\n          }\n        }\n      });\n    }\n\n    function initArrayCopyWatch() {\n      console.log('initArrayCopyWatch: how many times does this event get registered?');\n      var service = this;\n\n      service.events.push($rootScope.$on('schemaFormPropagateScope', function(event, scope) {\n        var key = service.getKey(scope.form.key);\n        var index = key.match(/^.*\\[(\\d+)].*$/);\n\n        key = key.replace(/\\[\\d+]/g, '[]');\n        index = index && parseInt(index[1]);\n\n        if(!scope.form.condition) scope.form.condition = 'true';\n\n        service.addArrayCopy(scope, key, index);\n        scope.$emit('flexFormArrayCopyAdded', key);\n      }));\n\n      service.events.push($rootScope.$on('schemaFormDeleteScope', function(event, scope, index) {\n        console.log('schemaFormDeleteScope:', index, scope.form, scope);\n        var key = service.getKey(scope.form.key).replace(/\\[\\d+]/g, '[]');\n        var copies = service.getArrayCopiesFor(key);\n\n        copies.forEach((list) => {\n          list.splice(index, 1);\n        });\n\n        if(scope.form.link) {\n          var list = service.parseExpression(scope.form.link, service.model).get();\n          list.splice(index, 1);\n        }\n      }));\n    }\n\n    function addArrayCopy(form, key, index) {\n      var service = this;\n      if(!index || index < 0) index = 0;\n      if(!service.arrayCopies[key]) service.arrayCopies[key] = [];\n      service.arrayCopies[key][index] = form;\n      //service.arrayCopies[key].push(form);\n    }\n\n    function getArrayCopies(key) {\n      var service = this;\n      return _.pluck(service.getArrayScopes(key), 'form');\n    }\n\n    function getArrayCopiesFor(keyStart) {\n      const service = this;\n      keyStart += '[]';\n\n      return _.filter(service.arrayCopies, (copy, key) => key.includes(keyStart));\n    }\n\n    function getArrayScopes(key) {\n      var service = this;\n      return service.arrayCopies[key];\n    }\n\n    function addToFormCache(field, key) {\n      var service = this;\n      key = key || service.getKey(field.key);\n      if(!service.getFromFormCache(key)) service.formCache[key] = field;\n    }\n\n    function getFromFormCache(key) {\n      var service = this;\n      return service.formCache[key];\n    }\n\n    function addToDataCache(key, modelValue) {\n      var service = this;\n\n      if(key) {\n        service.dataCache[key] = modelValue;\n      }\n    }\n\n    function getFromDataCache(key) {\n      var service = this;\n\n      return service.dataCache[key];\n    }\n\n    function parseExpression(exp, depth) {\n      var service = this;\n      // if expression is specific value\n      if(!exp || /^(null|false|true|undefined|''|[0-9.]+|\\[]|\\{})$/.test(exp)) {\n        return {\n          \"get\": function() {\n            return eval(exp);\n          }\n        };\n      }\n\n      exp = service.getKey(exp);\n\n      //var key;\n      var match = exp.match(/^(model\\.)?(\\S+)$/);\n\n      // cache fucks shit up if the model changes so disabling\n      //var cached;\n\n      // return from cache if possible\n      //if(!/\\[]/.test(exp) && match && match[2]) {\n      //  if(!depth || depth === service.model) {\n      //    key = match[2];\n      //\n      //    cached = service.getFromDataCache(key);\n      //    if(cached) {\n      //      return cached;\n      //    }\n      //  }\n      //}\n\n      var modelValue = {\n        get() {\n          let path = sfPath.parse(exp);\n          let start = depth || service;\n\n          while(start && path.length > 1) {\n            start = start[path.shift()];\n          }\n\n          return start && start[path[0]];\n        },\n        getAssignable() {\n          let path = sfPath.parse(exp);\n          let progress = [];\n          let start = depth || service;\n\n          while(start && path.length > 1) {\n            let key = path.shift();\n            progress.push(key);\n            if(!start[key]) {\n              if(/^\\d?$/.test(path[0])) {\n                start[key] = [];\n              }\n              else {\n                start[key] = {};\n              }\n            }\n            start = start[key];\n          }\n\n          return {\n            obj: start,\n            key: path[0],\n            path: service.getKey(progress),\n            fullPath: service.getKey(progress.concat(path.slice(0, 1)))\n          };\n        },\n        set(val) {\n          let assignable = this.getAssignable();\n          assignable.obj[assignable.key] = val;\n          return val;\n        },\n        path() {\n          return {\n            exp: exp,\n            depth: depth,\n            key: match[2]\n          };\n        }\n      };\n\n      return modelValue;\n    }\n\n    function processArray(array) {\n      var service = this;\n      var key = service.getKey(array.key);\n\n      array.sortOptions = {\n        update: function(e, ui) {\n          let listener = service.arrayListeners[`${key}.length`];\n          listener.handlers.forEach(handler => {\n            handler(listener.prev, listener.prev, true);\n          });\n        }\n      };\n\n      service.processSection(array);\n    }\n\n    function processSection(section) {\n      var service = this;\n      _.each(section.items, service.processField.bind(service));\n    }\n\n    function processComponent(component) {\n      var service = this;\n\n      component.type = 'section';\n      component.htmlClass = 'row';\n\n      var cols = 12 / _.reject(component.items, 'hidden').length;\n\n      _.each(component.items, function(field, i) {\n        service.processField(field);\n        component.items[i] = {\n          type: 'section',\n          htmlClass: 'col-sm-' + cols,\n          items: [field]\n        };\n      });\n    }\n\n    function processCurrency(field) {\n      field.currencyFormat = {\n        'currency-dollars': 'dollars',\n        'currency-microcents': 'microcents',\n        'currency': 'cents'\n      }[field.schema.format];\n\n      field.type = 'cn-currency';\n    }\n\n    function processPercentage(field) {\n      field.type = 'cn-percentage';\n    }\n\n    function processReusable(field) {\n      var service = this;\n      field.type = 'cn-reusable';\n      field.view = field.view || 'new';\n      field.items.forEach(service.processField.bind(service));\n      field.items = [{\n        type: 'section',\n        items: field.items,\n        condition: '!model.' + service.getKey(field.key) + '.id'\n      }];\n    }\n\n    function processMediaUpload(field) {\n      var service = this;\n      field.type = 'cn-mediaupload';\n      _.each(field.data, function(dataProp, key) {\n        field.data[key] = service.parseExpression(dataProp).get();\n      });\n    }\n\n    function processCsvUpload(field) {\n      var service = this;\n      field.type = 'cn-csvupload';\n    }\n\n    function processRadios(field) {\n      field.type = 'cn-radios';\n    }\n\n    function processRadiobuttons(radios) {\n      var service = this;\n      radios.type = 'cn-radiobuttons';\n      if(radios.fullWidth) {\n        radios.btnClass = 'col-sm-' + _.divide(12, radios.titleMap.length);\n      }\n    }\n\n    function processDate(date) {\n      var service = this;\n      date.type = 'cn-datetimepicker';\n\n      if(date.schema.format === 'time-minutes') {\n        date.maxView = 'hour';\n        date.iconClass = 'fa fa-clock-o';\n\n        date.modelFormatter = val => {\n          if(!val) return;\n\n          let m = moment(val);\n\n          return _.add(_.multiply(m.hours(), 60), m.minutes());\n        };\n\n        date.modelParser = val => {\n          if(!val) return;\n\n          let d = parseInt(val);\n          let hours = _.floor(d / 60);\n          let minutes = d % 60;\n\n          return moment().startOf('day').add('hours', hours).add('minutes', minutes);\n        };\n\n        date.viewFormatter = val => {\n          if(!val) return;\n\n          return date.modelParser(val).format(date.dateFormat);\n        };\n\n        date.viewParser = val => {\n          if(!val) return;\n\n          let match = val.match(/^(\\d{1,2}):?(\\d{1,2})? (a|p)/);\n          if(!match) return;\n\n          let hours = _.add(match[1] === '12' ? 0 : match[1], match[3] === 'a' ? 0 : 12);\n          let minutes = match[2] || '00';\n\n          if(minutes.length === 1) minutes += '0';\n\n          return _.add(_.multiply(hours, 60), minutes);\n        };\n      }\n    }\n\n    function getSelectValProp(select) {\n      let isArray = select.getSchemaType() === 'array';\n      return select.valueProperty ||\n        (isArray ? select.schema.items.type : select.schema.type) !== 'object' && 'value';\n    }\n\n    function getAllowedSelectValue(select, val, titleMap) {\n      titleMap = titleMap || select.getTitleMap();\n      let valProp = getSelectValProp(select);\n      if(!valProp) return;\n\n      if(select.getSchemaType() === 'array') {\n        if(!val || !_.isArray(val)) return;\n\n        // let loopVal = [];\n        // val.forEach(x => {\n        //   loopVal.push(_.find(titleMap, {[valProp]: x}));\n        // });\n        // console.log('loopVal:', val, loopVal, titleMap);\n\n        let mapVal = val.map(x => _.find(titleMap, {[valProp]: x})).filter(x => x !== undefined);\n        // console.log('mapVal:', val, mapVal, titleMap);\n\n        return mapVal;\n      }\n      else {\n        return _.find(titleMap, {[valProp]: val});\n      }\n    }\n\n    function processSelect(select) {\n      var service = this,\n          schema = select.schema;\n\n      if(select.titleMapResolve || select.titleMap) {\n        select.getTitleMap = function() {\n          return select.titleMap || service.schema.data[select.titleMapResolve];\n        };\n\n        select.onInit = function(val, form, event, setter) {\n          // make sure we use correct value\n          var modelValue = service.parseExpression(form.key, service.model);\n          //console.log('service.getKey(form.key), val:', service.getKey(form.key), val);\n          if(event === 'tag-init') {\n            let newVal = getAllowedSelectValue(select, modelValue.get());\n            //console.log('onInit: key, newVal:', form.key, newVal);\n            if(newVal !== undefined) setter(newVal);\n          }\n        };\n      }\n\n      if(select.titleMapQuery) {\n        var key = select.titleMapQuery.params.q;\n        select.titleQuery = function(q) {\n          console.log('titleMap:', q);\n          var params = {};\n          if(key) {\n            params[key] = q;\n          }\n          return Api.get({\n            url: select.titleMapQuery.url,\n            params: params\n          });\n        };\n\n        // wrap in string so returns truthy when compiled, but converted to number within directive\n        if(!key) select.minLookup = '0';\n\n        select.onInit = function(val, form, event, setter) {\n          //console.log('titleQuery:onInit:', val, form, event, setter);\n          if(event === 'tag-init') {\n            setter(val);\n          }\n        };\n      }\n\n      if(schema.items) {\n        var defaults = [];\n        _.each(schema.items.properties, function(schema, key) {\n          if(angular.isDefined(schema.default)) {\n            defaults.push({\n              \"key\": key,\n              default: schema.default\n            });\n          }\n        });\n        if(defaults.length) {\n          select.onAdd = function(val, form, event) {\n            if(val.value && event === 'tag-added') {\n              _.each(defaults, function(prop) {\n                //console.log('prop:', prop, val);\n                if(!val.value[prop.key]) val.value[prop.key] = prop.default;\n              });\n            }\n          };\n        }\n      }\n\n      if(!select.type.includes('cn-autocomplete')) {\n        if(select.items) {\n          select.detailedList = true;\n\n          if(select.items[0].type !== 'component') {\n            if(select.items.length > 1) {\n              select.items = [{\n                type: \"component\",\n                items: select.items\n              }];\n            }\n\n            service.processFieldset(select);\n          }\n\n          select.type = 'cn-autocomplete-detailed';\n        }\n        else {\n          if(!select.selectionStyle) {\n            select.selectionStyle = select.key === 'tags' ?\n              'tags' : (select.getSchemaType() === 'array' && select.schema.maxItems !== 1) ?\n                'list' : 'select';\n          }\n          select.type = 'cn-autocomplete';\n        }\n\n        if(select.titleMapResolve) {\n          $rootScope.$on('cnFlexFormDiff:data', (e, data) => {\n            if(data[select.titleMapResolve]) {\n              let modelValue = service.parseExpression(select.key, service.model);\n              let val = modelValue.get();\n              if(val !== undefined) {\n                let valid = getAllowedSelectValue(select, val, data[select.titleMapResolve]); \n                if(valid === undefined) modelValue.set();\n              }\n            }\n          });\n        }\n      }\n\n      if(select.displayFormat) {\n        select.itemFormatter = service.processTemplate(select.displayFormat);\n      }\n\n      service.registerHandler(select.key, function(val) {\n        var form = service.formCtrl && service.formCtrl[service.getKey(select.key)];\n        if(form && form.$setDirty) form.$setDirty();\n      }, select.updateSchema);\n    }\n\n    function processToggle(toggle) {\n      toggle.type = 'cn-toggle';\n    }\n\n    function processHelp(help) {\n      help.htmlClass = 'help-block';\n    }\n\n    function processDisplay(display) {\n      var service = this;\n      display.type = 'cn-display';\n      display.getDisplay = service.processTemplate(display.displayFormat, true);\n    }\n\n    function processTemplate(tpl, parseScope) {\n      var service = this;\n      //var processor = /<(\\S+)[^>]*>.*<\\/\\1>/.test(tpl) ? $compile : $interpolate;\n      var processor = $interpolate;\n      return function(scope, arrayIndex) {\n        if(parseScope) {\n          if(angular.isDefined(arrayIndex)) {\n            scope = _.map(scope, function(key) {\n              return key === 'arrayIndex' ? arrayIndex : key;\n            });\n          }\n          scope = service.parseExpression(scope, service.model).get();\n        }\n        return processor(tpl)(scope);\n      };\n    }\n\n    function processTable(table) {\n      var service = this;\n      table.type = 'cn-table';\n      table.items.forEach(function(row) {\n        for (var i = 0; i < table.columns.length; i++) {\n          _.extend(row.items[i], table.columns[i]);\n          //if (row.columns[i].key) row.columns[i].key = ObjectPath.parse(row.columns[i].key);\n          service.processField(row.items[i]);\n        }\n      });\n    }\n\n    function processSelectDisplay(selectDisplay, schema) {\n      var service = this,\n          selectField = _.find(selectDisplay.items, 'selectField'),\n          handler;\n\n      if (schema && schema.type === 'array') {\n        handler = service.setupArraySelectDisplay(selectDisplay, selectField);\n      } else {\n        handler = service.setupSelectDisplay(selectDisplay, selectField);\n      }\n\n      selectDisplay.selectDisplay = false;\n      service.registerHandler(selectField.key, handler, selectField.updateSchema, true);\n      service.processField(selectDisplay);\n    }\n\n    function setupArraySelectDisplay(selectDisplay, selectField) {\n      var service = this;\n      _.each(selectDisplay.items, function(item) {\n        if(item.condition !== 'false') {\n          item.condition = 'true';\n        }\n      });\n      var handler = function(val, prev, key) {\n        var index = getArrayIndex(key);\n        _.each(selectDisplay.items, function(item) {\n          var selectKey = service.getKey(selectField.key);\n          var key = service.getKey(item.key);\n          var splitKey = ObjectPath.parse(key);\n          if (selectKey === key) return;\n          var indexedSelectKey = service.setArrayIndex(selectKey, index);\n          var selectValue = service.parseExpression(indexedSelectKey, service.model).get();\n          var formCopies = service.getArrayCopies(key);\n          if (_.includes(selectValue, splitKey[splitKey.length - 1])) {\n            _.each(formCopies, function(copy) {\n              if (getArrayIndex(copy) == index) {\n                copy.condition = 'true';\n              }\n            });\n          } else {\n            _.each(formCopies, function(copy) {\n              if (getArrayIndex(copy) == index) {\n                copy.condition = 'false';\n                service.parseExpression(service.getKey(copy.key), service.model).set();\n              }\n            });\n          }\n        });\n      };\n      // handle legacy objects that don't have values set in the selectField\n      var model = service.parseExpression(service.getKey(selectDisplay.key), service.model).get();\n      _.each(selectDisplay.items, function(item) {\n        var key = service.getKey(item.key);\n        var selectKey = service.getKey(selectField.key);\n        if (key === selectKey) return;\n        _.each(model, function(elem, i) {\n          var indexedKey = service.setArrayIndex(key, i);\n          var splitIndexedKey = ObjectPath.parse(indexedKey);\n          var indexedSelectKey = service.setArrayIndex(selectKey, i);\n          var selectModel = service.parseExpression(indexedSelectKey, service.model);\n          var selectValue = selectModel.get();\n          var itemValue = service.parseExpression(indexedKey, service.model).get();\n          if (itemValue && !_.includes(selectValue, splitIndexedKey[splitIndexedKey.length - 1])) {\n            if (!selectValue) {\n              selectValue = [];\n            }\n            selectValue.push(splitIndexedKey[splitIndexedKey.length - 1]);\n            selectModel.set(selectValue);\n          }\n        });\n      });\n      // handle new objects with values set in defaults\n      var defaults = service.getSchema(selectDisplay.key).default;\n      _.each(defaults, function(elem, i) {\n        var selectKey = service.getKey(selectField.key);\n        var indexedSelectKey = service.setArrayIndex(selectKey, i);\n        var selectModel = service.parseExpression(indexedSelectKey, service.model);\n        var selectValue = selectModel.get();\n        _.each(elem, function(val, key) {\n          if (!selectValue) {\n            selectValue = [];\n          }\n          selectValue.push(key);\n          selectModel.set(selectValue);\n        });\n      });\n      // run handler once all arrayCopies have been instantiated\n      var count = 0;\n      var keyMap = _.pluck(_.reject(selectDisplay.items, {\"condition\":\"false\"}), 'key');\n      var once = $rootScope.$on('flexFormArrayCopyAdded', function(event, key) {\n        var model = service.parseExpression(service.getKey(selectDisplay.key), service.model).get();\n        if (model) {\n          var total = model.length * (keyMap.length);\n          if (_.includes(keyMap, key)) {\n            count++;\n          }\n          if (count === total) {\n            for (var i = 0; i < model.length; i++) {\n              handler(null, null, '[' + i + ']');\n            }\n            count = 0;\n          }\n        }\n      });\n      var resetCount = $rootScope.$on('flexForm.updatePage', function() {\n        count = 0;\n      });\n      service.events.push(once);\n      service.events.push(resetCount);\n      return handler;\n    }\n\n    function setupSelectDisplay(selectDisplay, selectField) {\n      var service = this;\n      var handler = function() {\n        var selectKey = service.getKey(selectField.key);\n        _.each(selectDisplay.items, function(item) {\n          var key = service.getKey(item.key);\n          var splitKey = ObjectPath.parse(key);\n          if (selectKey === key) return;\n          var selectValue = service.parseExpression(selectKey, service.model).get();\n          if (_.includes(selectValue, splitKey[splitKey.length - 1])) {\n            item.condition = 'true';\n          } else {\n            item.condition = 'false';\n            service.parseExpression(key, service.model).set();\n          }\n        });\n      };\n      // handle legacy objects that don't have values set in the selectField\n      var selectKey = service.getKey(selectField.key);\n      var selectModel = service.parseExpression(selectKey, service.model);\n      var selectValue = selectModel.get();\n      _.each(selectDisplay.items, function(item) {\n        var key = service.getKey(item.key);\n        if (selectKey === key) return;\n        var splitKey = ObjectPath.parse(key);\n        var itemValue = service.parseExpression(key, service.model).get();\n        if (itemValue && !_.includes(selectValue, splitKey[splitKey.length - 1])) {\n          if (!selectValue) {\n            selectValue = [];\n          }\n          selectValue.push(splitKey[splitKey.length - 1]);\n          selectModel.set(selectValue);\n        }\n      });\n      // handle new objects with values set in the defaults\n      var defaults = service.getSchema(selectDisplay.key).default;\n      _.each(defaults, function(val, key) {\n        if (!selectValue) {\n          selectValue = [];\n        }\n        selectValue.push(key);\n        selectModel.set(selectValue);\n      });\n      // set default values here\n      var model = service.parseExpression(selectDisplay.key, service.model);\n      if (defaults && !model.get()) {\n        model.set(defaults);\n      }\n\n      return handler;\n    }\n\n    function setupSchemaRefresh(refresh) {\n      var service = this;\n      service.refreshSchema = _.debounce(function(updateSchema) {\n        var params = _.extend(cnFlexFormConfig.getStateParams(), service.params);\n        // console.log('service.schema.params, params:', service.schema.params, params);\n        var diff = cnUtil.diff(service.schema.params, params, true);\n        var keys;\n\n        if(diff || updateSchema) {\n          if (updateSchema) params.updateSchema = updateSchema;\n          else {\n            keys = _.keys(diff);\n\n            if(keys.length > 1) {\n              diff = _.omit(diff, _.isNull);\n              keys = _.keys(diff);\n            }\n            //console.log('keys, diff:', keys, diff, {\n            //  cur: _.clone(params),\n            //  prev: _.clone(service.schema.params)\n            //});\n\n            params.updateSchema = _.first(keys);\n          }\n\n          if(!params.updateSchema) {\n            diff = cnUtil.diff(params, _.omit(service.schema.params, 'updateSchema'));\n            keys = _.keys(diff);\n\n            params.updateSchema = _.first(keys);\n          }\n\n          refresh(params).then(function(schema) {\n            ++service.updates;\n            //service.updateSchema(schema);\n            service.processUpdatedSchema(schema);\n          });\n        }\n      }, 100);\n\n      service.refreshData = _.debounce(function() {\n        refresh(_.extend(service.schema.params, {updateSchema: 'refreshData'})).then(function(schema) {\n          service.processUpdatedSchema(schema);\n          console.log('service.schema.params:', service.schema.params);\n        });\n      }, 100);\n\n      service.events.push($rootScope.$on('ffRefreshData', service.refreshData));\n    }\n\n    function processUpdatedSchema(schema) {\n      var service = this;\n      if(schema.diff) {\n        service.schema.params = schema.params;\n\n        if(schema.diff.data) {\n          $rootScope.$broadcast('cnFlexFormDiff:data', schema.diff.data);\n          _.each(schema.diff.data, (data, prop) => {\n            if(data && data.data && !_.isEmpty(service.schema.data[prop].data) && !data.reset) {\n              data.data = service.schema.data[prop].data.concat(data.data);\n            }\n            service.schema.data[prop] = data;\n            if(service.resolveRegister[prop]) {\n              _.each(service.resolveRegister[prop], (registers) => {\n                registers.forEach(register => {\n                  service.handleResolve(register.field, register.prop, `schema.data.${prop}`);\n                });\n              });\n            }\n          });\n        }\n\n        var keys = [];\n\n        if(schema.diff.schema) {\n          $rootScope.$broadcast('cnFlexFormDiff:schema', schema.diff.schema);\n          _.each(schema.diff.schema, function(schema, key) {\n            service.schema.schema.properties[key] = schema;\n            reprocessSchema(schema, key, keys);\n          });\n        }\n\n        if(schema.diff.form) {\n          $rootScope.$broadcast('cnFlexFormDiff:form', schema.diff.form);\n          _.each(schema.diff.form, function(form) {\n\n            if(keys.indexOf(form.key) === -1) {\n              keys.push(form.key);\n            }\n\n            // don't want to override key when extending cached objects\n            //var key = form.key;\n            //delete form.key;\n\n            var cached = service.getFromFormCache(form.key);\n            if(cached) {\n              service.reprocessField(cached, form);\n            }\n            var copies = service.getArrayCopies(form.key);\n            if(copies) {\n              copies.forEach(copy => copy && service.reprocessField(copy, form));\n            }\n          });\n        }\n\n        if(keys.length) {\n          _.each(keys, function(key) {\n            var form = service.getFromFormCache(key);\n            if(form) service.processField(form);\n            if(key.includes('[]')) {\n              var copies = service.getArrayCopies(key);\n              _.each(copies, function(copy) {\n                if(copy) service.processField(copy);\n              });\n            }\n          });\n        }\n\n        service.broadcastErrors();\n      }\n      else {\n        service.updateSchema(schema);\n      }\n    }\n\n    function reprocessField(current, update, isChild) {\n      var service = this;\n\n      // other logic in the service will add conition = 'true' to force\n      // condition to eval true, so we set the update condition to 'true'\n      // before comparing\n      if(!update.condition && current.condition) update.condition = 'true';\n      let redraw = !isChild && current.condition !== update.condition;\n      console.log('redraw:', service.getKey(current.key), current);\n\n      _.extend(current, _.omit(update, 'items', 'key'));\n\n      current._ogKeys.forEach(key => {\n        if(!update[key]) delete current[key];\n      });\n      current._ogKeys = _.keys(update);\n\n      service.deregisterHandlers(update.key);\n\n      $rootScope.$broadcast('cnFlexFormReprocessField', update.key);\n\n      // why do we redraw? If we're doing it to show error message\n      // that has been addressed from the angular-schema-form library\n      // if there's another issue, try triggering the specific action required\n      // instead of redrawing the whole form\n      if(redraw && current.redraw) current.redraw();\n    }\n\n    function reprocessSchema(schema, key, keys) {\n      keys.push(key);\n      if(schema.properties) {\n        _.each(schema.properties, function(schema, subKey) {\n          reprocessSchema(schema, key + '.' + subKey, keys);\n        });\n      }\n      if(schema.items && schema.items.properties) {\n        _.each(schema.properties, function(schema, subKey) {\n          reprocessSchema(schema, key + '[].' + subKey, keys);\n        });\n      }\n    }\n\n    function buildError(field) {\n      var service = this;\n      var key = service.getKey(field.key);\n      return {\n        key: key,\n        message: field.error\n      };\n    }\n\n    function broadcastErrors() {\n      var service = this;\n      $timeout(function() {\n        service.errors.forEach(function(error) {\n          $rootScope.$broadcast('schemaForm.error.' + error.key, 'serverValidation', error.message);\n        });\n      }, 1);\n    }\n\n    function replaceArrayIndex(resolve, key) {\n      if(!resolve.includes('arrayIndex')) return resolve;\n      var arrayIndexKey = /([^.]*)\\[arrayIndex\\]/.exec(resolve);\n      var re = new RegExp(arrayIndexKey[1] + '\\\\[(\\\\d+)\\\\]');\n      var index = re.exec(key);\n      return resolve.replace(new RegExp(arrayIndexKey[0].replace(/(\\[|\\])/g, '\\\\$1'), 'g'), index[0]);\n    }\n\n    function getArrayIndex(key) {\n      if (_.isObject(key)) {\n        return _.find(key.key, function(key) {\n          return _.isNumber(key);\n        });\n      } else {\n        return /\\[(\\d+)\\]/.exec(key)[1];\n      }\n    }\n\n    function setArrayIndex(key, index, asArray) {\n      var service = this;\n      var keyCopy;\n      if (_.isString(key)) {\n        keyCopy = ObjectPath.parse(key);\n      } else {\n        keyCopy = _.clone(key);\n      }\n      var indexOfIndex = keyCopy.indexOf('');\n      keyCopy[indexOfIndex] = index;\n\n      if (asArray) {\n        return keyCopy;\n      } else {\n        return service.getKey(keyCopy);\n      }\n    }\n\n    function cleanup() {\n      var service = this;\n      _.each(service.events, function(listener) {\n        listener();\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n      .module('cn.flex-form')\n      .controller('FlexFormSandbox', FlexFormSandbox);\n\n  /* @ngInject */\n  function FlexFormSandbox() {\n    /* jshint validthis: true */\n    var vm = this;\n\n    vm.activate = activate;\n    vm.onSchema = onSchema;\n    vm.model = {};\n    vm.config = {};\n    vm.schemaStr = '';\n\n    activate();\n\n    ////////////////\n\n    function activate() {\n      console.log('FlexFormSandbox');\n    }\n\n    function onSchema() {\n      if(vm.schemaStr) {\n        var schema = angular.fromJson(vm.schemaStr);\n        console.log('schema:', schema);\n        if(!schema.form && schema.forms) {\n          schema.form = schema.forms[0].form;\n        }\n        vm.config.schema = schema.form && schema;\n      }\n    }\n\n  }\n})();","(function() {\n  'use strict';\n\n  angular.module('cn.flex-form')\n      .config(schemaFormConfig)\n      .run(addTemplates);\n\n  schemaFormConfig.$inject = ['cnFlexFormServiceProvider'];\n\n  function schemaFormConfig(cnFlexFormServiceProvider) {\n    tv4.addFormat({\n      'url': data => _.isString(data) && !/^(https?:\\/\\/.{2}|$)/.test(data) && 'invalid url'\n    });\n\n    var extensions = [\n      'cn-fieldset',\n      'cn-toggle',\n      'cn-datetimepicker',\n      'cn-autocomplete',\n      'cn-autocomplete-detailed',\n      'cn-currency',\n      'cn-radios',\n      'cn-radiobuttons',\n      'cn-percentage',\n      'cn-display',\n      'cn-mediaupload',\n      'cn-csvupload',\n      'cn-reusable',\n      'cn-table'\n    ];\n\n    _.each(extensions, function(extension) {\n      cnFlexFormServiceProvider.registerField({\n        type: extension,\n        templateUrl: `app/components/cn-flex-form/forms/${extension}.html`\n      });\n    });\n  }\n\n  addTemplates.$inject = ['$templateCache'];\n\n  function addTemplates($templateCache) {\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-toggle.html',\n        `\n        <div class=\"form-group {{form.htmlClass}}\"\n             ng-class=\"{'has-error': hasError(), 'has-success': hasSuccess()}\">\n          <label class=\"control-label\" ng-show=\"showTitle()\">{{form.title}}</label>\n          <div class=\"clearfix\">\n            <cn-toggle-switch\n              class=\"pull-left\"\n              ng-show=\"form.key\"\n              ng-model-options=\"form.ngModelOptions\"\n              ng-model=\"$$value$$\"\n              sf-changed=\"form\"\n              schema-validate=\"form\"\n              on-value=\"form.onValue\"\n              off-value=\"form.offValue\"\n              read-only=\"form.readonly\"\n              undefined-class=\"form.undefinedClass\"/>\n            <span ng-show=\"form.onText && form.offText\">\n              {{$$value$$ === form.onValue ? form.onText : form.offText}}\n            </span>\n          </div>\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\n        </div>`\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-datetimepicker.html',\n        `\n        <div class=\"form-group {{form.htmlClass}}\"\n             ng-class=\"{'has-error': hasError(), 'has-success': hasSuccess()}\">\n          <label class=\"control-label\"\n                 for=\"{{form.key.join('.')}}\"\n                 ng-show=\"showTitle()\">{{form.title}}</label>\n          <cn-datetimepicker\n            ng-show=\"form.key\"\n            ng-model=\"$$value$$\"\n            ng-model-options=\"form.ngModelOptions\"\n            is-disabled=\"form.readonly\"\n            sf-changed=\"form\"\n            schema-validate=\"form\"\n            input-id=\"{{form.key.join('.')}}\"\n            min-date=\"form.minDate\"\n            max-date=\"form.maxDate\"\n            max-view=\"{{form.maxView}}\"\n            cn-date-required=\"form.required\"\n            placeholder=\"{{form.placeholder}}\"\n            model-type=\"{{form.schema.type}}\"\n            model-formatter=\"form.modelFormatter\"\n            model-parser=\"form.modelParser\"\n            view-formatter=\"form.viewFormatter\"\n            view-parser=\"form.viewParser\"\n            format-string={{form.dateFormat}}\n            icon-class={{form.iconClass}}>\n          </cn-datetimepicker>\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\n        </div>`\n    );\n\n    var sharedAutocompleteTpl = `\n          <tags-input\n            ng-show=\"form.key\"\n            ng-model=\"$$value$$\"\n            ng-model-options=\"form.ngModelOptions\"\n            ng-disabled=\"form.readonly\"\n            sf-changed=\"form\"\n            schema-validate=\"form\"\n            input-id=\"{{form.key.join('.')}}\"\n            display-property=\"{{form.displayProperty || 'name'}}\"\n            value-property=\"{{form.valueProperty}}\"\n            placeholder=\"{{form.placeholder || ' '}}\"\n            add-on-blur=\"true\"\n            add-on-comma=\"false\"\n            add-from-autocomplete-only=\"{{!form.allowNew}}\"\n            on-before-tag-added=\"form.onAdd({value: $tag}, form, $event, $prev)\"\n            on-init=\"form.onInit($tag, form, $event, $setter)\"\n            model-type=\"{{form.getSchemaType()}}\"\n            array-value-type=\"{{form.schema.items.type}}\"\n            hide-tags=\"{{form.detailedList}}\"\n            tags-style=\"{{form.selectionStyle}}\"\n            required=\"{{form.required}}\"\n            min-length=\"{{form.minLength}}\"\n            allowed-tags-pattern=\".*\"\n            dropdown-icon=\"true\"\n            item-formatter=\"form.itemFormatter\"\n            min-tags=\"{{form.schema.minItems}}\"\n            max-tags=\"{{form.schema.maxItems || form.getSchemaType() !== 'array' ? 1 : 0}}\"\n            allow-bulk=\"{{form.bulkAdd}}\"\n            bulk-delimiter=\"{{form.bulkDelimiter}}\"\n            bulk-placeholder=\"{{form.bulkPlaceholder}}\"\n            show-clear-all=\"{{form.showClearAll}}\"\n            show-button=\"true\">\n            <auto-complete\n              source=\"form.getTitleMap && form.getTitleMap() || form.titleQuery($query)\"\n              skip-filtering=\"{{form.titleQuery ? true : false}}\"\n              min-length=\"{{form.minLookup || (form.titleQuery && 3 || 0)}}\">\n            </auto-complete>\n          </tags-input>`;\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-autocomplete.html',\n        `\n        <div class=\"form-group {{form.htmlClass}}\"\n             ng-class=\"{'has-error': hasError(), 'has-success': hasSuccess()}\">\n          <label class=\"control-label\"\n                 for=\"{{form.key.join('.')}}-input\"\n                 ng-show=\"showTitle()\">{{form.title}}</label>\n          ${sharedAutocompleteTpl}\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\n        </div>`\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-autocomplete-detailed.html',\n        `\n        <div sf-array=\"form\"\n             class=\"form-group {{form.htmlClass}}\"\n             ng-class=\"{'has-error': hasError(), 'has-success': hasSuccess()}\">\n          <label class=\"control-label\"\n                 for=\"{{form.key.join('.')}}-input\"\n                 ng-show=\"showTitle()\">{{form.title}}</label>\n          <ol class=\"list-group cn-autocomplete-list\"\n              ng-show=\"modelArray.length\"\n              ng-model=\"modelArray\">\n            <li class=\"list-group-item {{form.fieldHtmlClass}}\"\n                ng-repeat=\"item in modelArray track by $index\">\n              <button ng-hide=\"form.readonly || form.remove === null\"\n                      ng-click=\"deleteFromArray($index)\"\n                      type=\"button\" class=\"close pull-right\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n              <sf-decorator ng-init=\"arrayIndex = $index\" form=\"copyWithIndex($index)\"/>\n            </li>\n          </ol>\n          ${sharedAutocompleteTpl}\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\n        </div>`\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-currency.html',\n        `\n        <div class=\"form-group {{form.htmlClass}}\"\n             ng-class=\"{'has-error': hasError(), 'has-success': hasSuccess()}\">\n          <label class=\"control-label\"\n                 ng-show=\"showTitle()\"\n                 for=\"{{form.key.join('.')}}\">{{form.title}}</label>\n          <div class=\"{{form.fieldClass}} input-group\">\n            <label class=\"input-group-addon\"\n                   ng-disabled=\"form.readonly\"\n                   for=\"{{form.key.join('.')}}\">$</label>\n            <input class=\"form-control\"\n                   cn-currency-format=\"{{form.currencyFormat}}\"\n                   cn-currency-placeholder=\"{{form.placeholder}}\"\n                   ng-show=\"form.key\"\n                   ng-model-options=\"form.ngModelOptions\"\n                   ng-disabled=\"form.readonly\"\n                   sf-changed=\"form\"\n                   schema-validate=\"form\"\n                   type=\"text\"\n                   step=\"any\"\n                   min=\"{{form.min}}\"\n                   max=\"{{form.max}}\"\n                   id=\"{{form.key.join('.')}}\"\n                   name=\"{{form.key.join('.')}}\"\n                   ng-model=\"$$value$$\">\n          </div>\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\n        </div>`\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-radios.html',\n        `<div class=\"form-group {{form.htmlClass}}\"\n              ng-class=\"{'has-error': hasError(), 'has-success': hasSuccess()}\">\n           <label class=\"control-label\" ng-show=\"showTitle()\">{{form.title}}</label>\n           <div class=\"btn-group clearfix\">\n             <label class=\"radio radio-block\"\n                    ng-repeat=\"item in form.titleMap\">\n               <input type=\"radio\"\n                      sf-changed=\"form\"\n                      ng-disabled=\"form.readonly\"\n                      ng-model=\"$$value$$\"\n                      ng-model-options=\"form.ngModelOptions\"\n                      schema-validate=\"form\"\n                      ff-validate=\"form\"\n                      ng-value=\"item.value\"\n                      name=\"{{form.key.join('.')}}\">\n               <span class=\"radio-block-icon\" ng-if=\"item.iconClass\">\n                 <i class=\"fa fa-{{item.iconClass}} fa-lg\"></i>\n               </span>\n               <span ng-bind-html=\"item.name\"></span>\n             </label>\n           </div>\n           <span class=\"help-block\" sf-message=\"form.description\"></span>\n         </div>`\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-radiobuttons.html',\n        `\n        <div class=\"form-group schema-form-radiobuttons cn-radiobuttons {{form.htmlClass}}\"\n             ng-class=\"{'has-error': hasError(), 'has-success': hasSuccess()}\">\n          <label class=\"control-label\" ng-show=\"showTitle()\">{{form.title}}</label>\n          <div class=\"btn-group clearfix\">\n            <label class=\"btn btn-{{item.value}} {{form.btnClass}} {{item.value === $$value$$ ? 'active' : ''}}\"\n                   ng-repeat=\"item in form.titleMap\">\n              <input type=\"radio\"\n                     class=\"{{form.fieldHtmlClass}} hide\"\n                     sf-changed=\"form\"\n                     ng-disabled=\"form.readonly\"\n                     ng-model=\"$$value$$\"\n                     ng-model-options=\"form.ngModelOptions\"\n                     schema-validate=\"form\"\n                     ff-validate=\"form\"\n                     ng-value=\"item.value\"\n                     name=\"{{form.key.join('.')}}\">\n              <i class=\"fa fa-{{item.value}} fa-lg\"></i>\n              <span ng-bind-html=\"item.name\"></span>\n            </label>\n          </div>\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\n        </div>`\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-percentage.html',\n        `\n        <div class=\"form-group {{form.htmlClass}}\"\n             ng-class=\"{'has-error': hasError(), 'has-success': hasSuccess()}\">\n          <label class=\"control-label\"\n                 ng-show=\"showTitle()\"\n                 for=\"{{form.key && form.key[0]}}\">{{form.title}}</label>\n          <div class=\"{{form.fieldClass}} input-group\">\n            <input class=\"form-control\"\n                   cn-percentage-format\n                   ng-show=\"form.key\"\n                   ng-model-options=\"form.ngModelOptions\"\n                   ng-disabled=\"form.readonly\"\n                   sf-changed=\"form\"\n                   schema-validate=\"form\"\n                   type=\"number\"\n                   step=\"any\"\n                   min=\"{{form.min}}\"\n                   max=\"{{form.max}}\"\n                   id=\"{{form.key && form.key[0]}}\"\n                   name=\"{{form.key && form.key[0]}}\"\n                   ng-model=\"$$value$$\">\n             <div class=\"input-group-addon\"\n                    ng-disabled=\"form.readonly\"\n                    for=\"{{form.key && form.key[0]}}\">%</div>\n          </div>\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\n        </div>`\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-display.html',\n        `\n        <div class=\"form-group cn-display{{form.htmlClass}}\">\n          <input ng-show=\"form.key\"\n                 class=\"form-control\"\n                 id=\"{{form.key.join('.')}}\"\n                 name=\"{{form.key.join('.')}}\"\n                 ng-disabled=\"true\"\n                 value=\"{{form.getDisplay(form.key, form.arrayIndex)}}\">\n        </div>`\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-fieldset.html',\n        `\n        <fieldset ng-disabled=\"form.readonly\" class=\"schema-form-fieldset {{form.htmlClass}}\">\n          <legend ng-click=\"form.toggleCollapse(form)\"\n                  ng-class=\"{'sr-only': !showTitle(), collapsible: form.collapsible}\"\n                  ng-mouseenter=\"form.render = true\">\n            <i ng-show=\"form.collapsible\"\n               class=\"fa fa-caret-{{form.collapsed ? 'right' : 'down'}}\"></i>\n            {{ form.title }}\n          </legend>\n          <div class=\"help-block\" ng-show=\"form.description\" ng-bind-html=\"form.description\"></div>\n          <div collapse=\"form.collapsed\">\n            <div ng-if=\"form.render\">\n              <sf-decorator ng-repeat=\"item in form.items\" form=\"item\"/>\n            </div>\n          </div>\n        </fieldset>`\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-mediaupload.html',\n        `\n        <div class=\"form-group {{form.htmlClass}}\"\n             ng-class=\"{'has-error': hasError(), 'has-success': hasSuccess()}\">\n          <label class=\"control-label\"\n                 ng-show=\"showTitle()\"\n                 for=\"{{form.key && form.key[0]}}\">{{form.title}}</label>\n          <media-upload ng-model=\"$$value$$\"\n                        cn-file-type=\"form.fileType\"\n                        cn-upload-path=\"form.uploadPath\"\n                        cn-data=\"form.data\"\n                        cn-preview-path=\"form.previewPath\"\n                        cn-model-value-key=\"form.modelValueKey\"\n                        ng-model-options=\"form.ngModelOptions\"\n                        sf-changed=\"form\"\n                        schema-validate=\"form\"\n                        ff-form=\"form\"\n                        class=\"clearfix\">\n          </media-upload>\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\n       </div>`\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-csvupload.html',\n        `\n        <div class=\"form-group {{form.htmlClass}}\"\n             ng-class=\"{'has-error': hasError(), 'has-success': hasSuccess()}\">\n          <label class=\"control-label\"\n                 ng-show=\"showTitle()\"\n                 for=\"{{form.key && form.key[0]}}\">{{form.title}}</label>\n          <csv-upload ng-model=\"$$value$$\"\n                        cn-upload-path=\"form.uploadPath\"\n                        ng-model-options=\"form.ngModelOptions\"\n                        sf-changed=\"form\"\n                        schema-validate=\"form\"\n                        ff-form=\"form\"\n                        class=\"clearfix\">\n          </csv-upload>\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\n       </div>`\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-reusable.html',\n        `\n        <div class=\"form-group cn-reusable {{form.htmlClass}}\"\n             ng-class=\"{'has-error': hasError(), 'has-success': hasSuccess()}\">\n          <label class=\"control-label\"\n                 ng-show=\"showTitle()\"\n                 for=\"{{form.key.join('.')}}\">{{form.title}}</label>\n          <cn-select-or\n            ng-show=\"form.key\"\n            select-from=\"form.library\"\n            ng-model=\"$$value$$\"\n            ng-model-options=\"form.ngModelOptions\"\n            sf-changed=\"form\"\n            schema-validate=\"form\"\n            ff-form=\"form\"\n            directiveId=\"form.directiveId\"\n            item-template=\"form.itemTemplate\"\n            toggle-text=\"form.toggleText\"\n            disabled=\"form.readonly\"\n            view=\"form.view\">\n            <sf-decorator ng-repeat=\"item in form.items\" form=\"item\"/>\n          </cn-select-or>\n          <p ng-if=\"form.loadMore && form.view === 'list'\">\n            <a ng-click=\"form.loadMore()\"\n               class=\"btn btn-default btn-block\">Load More</a>\n          </p>\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\n        </div>`\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-table.html',\n        '\\\n        <div class=\"form-group cn-ff-table {{form.htmlClass}}\"\\\n             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\\n          <h6>{{form.title}}</h6>\\\n          <div class=\"row\">\\\n            <div ng-repeat=\"col in form.columns\" class=\"{{col.columnWidth}}\">\\\n              <p class=\"column-header\">{{col.columnHeader}}</p>\\\n            </div>\\\n          </div>\\\n          <div class=\"row\" ng-repeat=\"row in form.items\">\\\n            <div ng-repeat=\"col in row.items\" class=\"{{col.columnWidth}}\">\\\n              <sf-decorator form=\"col\"></sf-decorator>\\\n            </div>\\\n          </div>\\\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\\\n        </div>\\\n        '\n    );\n  }\n\n})();\n"],"sourceRoot":"/source/"}