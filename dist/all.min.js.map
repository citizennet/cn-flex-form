{"version":3,"sources":["_cn-flex-form.module.js","cn-flex-form-config.service.js","cn-flex-form-header.directive.js","cn-flex-form-modal-loader.js","cn-flex-form-modal-loader.service.js","cn-flex-form-types.service.js","cn-flex-form-validate.directive.js","cn-flex-form.directive.js","cn-flex-form.routes.js","cn-flex-form.service.js","sandbox.js","schema-form-extensions.js"],"names":["angular","module","cnFlexFormConfigProvider","addIgnoreParam","param","ignoreParams","push","cnFlexFormConfig","$stateParams","getStateParams","_","chain","omit","v","isUndefined","isNull","value","$inject","$get","provider","cnFlexFormHeader","restrict","scope","config","submit","loadOffscreen","controller","FlexFormHeader","bindToController","controllerAs","template","$scope","updateData","console","log","$emit","isDisabled","btnConfig","vm","this","directive","FlexFormModalLoader","FlexFormModal","$state","$rootScope","activate","modal","open","result","goBack","dismiss","$on","dismissModal","go","cnFlexFormModalLoaderService","$modal","openModal","currentModal","getMapping","instance","factory","getPromises","state","promises","promiseMap","getPromise","id","$q","promise","defer","cnFlexFormModalLoaderServiceProvider","addMapping","def","resolve","parent","modalMap","modalId","resolveMapping","service","cnFlexFormTypesProvider","registerFieldType","fieldType","fieldTypeRegister","unshift","cnFlexFormTypes","getFieldType","field","i","l","length","condition","type","schema","includes","titleMap","titleMapResolve","titleMapQuery","format","ffValidate","form","require","link","elem","attrs","ngModel","required","$watch","$viewValue","$setValidity","cnFlexForm","model","formIndex","formName","delayForm","cleanupEvent","FlexForm","cnFlexFormService","$location","isNumber","forms","search","debug","process","cur","prev","isCompiled","compile","formCtrl","getSchema","updateSchema","showForm","cleanup","each","events","listener","undefined","cnFlexFormRoutesProvider","$stateProvider","addStates","options","name","url","permissions","cnFlexFormRoutes","templateUrl","cnFlexFormServiceProvider","schemaFormDecoratorsProvider","registerField","handler","fieldTypeHandlers","createDirective","CNFlexFormService","Api","$parse","$interpolate","$timeout","cnUtil","CNFlexFormConstructor","services","CNFlexForm","arrayCopies","arrayListeners","dataCache","defaults","errors","formCache","listeners","resolveRegister","updates","params","setupConfig","processField","bind","initModelWatch","initArrayCopyWatch","broadcastErrors","setValue","compiled","getSchemaForm","setupSchemaRefresh","processSchema","getSchemaType","isArray","first","processDefault","key","getKey","parseExpression","modelValue","get","equals","set","copy","processFieldset","fieldset","items","collapsible","toggleCollapse","collapsed","render","selectDisplay","processSelectDisplay","_ogKeys","without","keys","addToFormCache","description","readonly","processResolve","watch","processFieldWatch","processSection","processComponent","isString","isFunction","call","registerHandler","error","buildError","reduce","total","next","test","depth","replace","split","properties","matchArray","match","shift","slice","dataKey","fieldKey","handleResolve","resolveType","registerResolve","exp","resolution","functionCondition","isConditionFunction","parsedCondition","parseCondition","adjustment","date","trim","math","operator","+","-","*","/","adjuster","updatePath","fromPath","replaceArrayIndex","arguments","update","from","moment","add","toDate","eval","p","floor","ceil","round","path","invert","functionName","functionArgument","predicate","arr","comparator","comparisonValue","evaluation","forEach","val","evaluatePredicate","toString","val1","val2","runHandler","isObject","arrMatch","registerArrayHandlers","handlers","arrKey","onArray","lastKey","deregisterHandlers","arrVal","watching","modelWatch","onModelWatch","initSchemaParams","prevParams","isEmpty","refreshSchema","event","addArrayCopy","index","list","splice","getArrayCopies","getFromFormCache","addToDataCache","getFromDataCache","start","section","component","htmlClass","cols","reject","processCurrency","currencyFormat","currency-dollars","currency-microcents","currency","processPercentage","processReusable","processMediaUpload","data","processRadiobuttons","radios","fullWidth","btnClass","divide","processDate","processSelect","select","getTitleMap","onInit","setter","newVal","valueProperty","find","q","titleQuery","minLookup","isDefined","default","onAdd","prop","detailedList","selectionStyle","maxItems","displayFormat","itemFormatter","processTemplate","$setDirty","processToggle","toggle","processHelp","help","processDisplay","display","getDisplay","tpl","parseScope","processor","arrayIndex","map","selectField","setupArraySelectDisplay","setupSelectDisplay","item","getArrayIndex","selectKey","splitKey","ObjectPath","parse","indexedSelectKey","setArrayIndex","selectValue","formCopies","indexedKey","splitIndexedKey","selectModel","itemValue","count","keyMap","pluck","once","resetCount","refresh","debounce","force","extend","diff","then","processUpdatedSchema","refreshData","register","reprocessSchema","indexOf","cached","reprocessField","copies","current","isChild","redraw","subKey","message","$broadcast","arrayIndexKey","exec","re","RegExp","asArray","keyCopy","clone","indexOfIndex","prototype","cn-radiobuttons","cn-autocomplete","cn-datetimepicker","cn-display","cn-currency","cn-percentage","cn-mediaupload","cn-reusable","cn-toggle","FlexFormSandbox","onSchema","schemaStr","fromJson","schemaFormConfig","extensions","extension","addTemplates","$templateCache","put","sharedAutocompleteTpl","run"],"mappings":"CAAA,WACE,YACAA,SAAQC,OAAO,gBACb,YACA,aACA,8BACA,cACA,eCPJ,WACE,YAKA,SAASC,KAA2B,QAazBC,GAAeC,GACtBC,EAAaC,KAAKF,GAGpB,QAASG,GAAiBC,GAAc,QAQ7BC,KACP,MAAOC,GACFC,MAAMH,GACNI,KAAKP,GACLO,KAAK,SAASC,GACb,MAAOH,GAAEI,YAAYD,IAAMH,EAAEK,OAAOF,KAErCG,QAdP,OACEP,eAAgBA,EAChBJ,aAAcA,GAlBlBE,EAAiBU,SAAW,eAE5B,IAAIZ,IAAgB,OAAQ,QAAS,UAAW,QAAS,UAEzD,QACEF,eAAgBA,EAChBe,KAAMX,GAZVP,QACKC,OAAO,gBACPkB,SAAS,mBAAoBjB,MCJpC,WACE,YAMA,SAASkB,KACP,OACEC,SAAU,IACVC,OACEC,OAAQ,kBACRC,OAAQ,YACRC,cAAe,oBAEjBC,WAAYC,EACZC,kBAAkB,EAClBC,aAAc,KACdC,SAAU,85CA+Bd,QAASH,GAAeI,GAAQ,QAQrBC,KACPC,QAAQC,IAAI,cAAeF,GAC3BD,EAAOI,MAAM,iBAGf,QAASC,GAAWC,GAClB,MAAGC,GAAGf,OAAOa,WAAmBE,EAAGf,OAAOa,WAAWC,IAC9C,EAdT,GAAIC,GAAKC,IAETD,GAAGN,WAAaA,EAChBM,EAAGF,WAAaA,EAlDlBpC,QACGC,OAAO,gBACPuC,UAAU,mBAAoBpB,GA2CjCO,EAAeV,SAAW,aChD5B,WACE,YAUA,SAASwB,GAAoBC,EAAeC,EAAQC,EAAYpC,GAAc,QASnEqC,KACPP,EAAGQ,MAAQJ,EAAcK,KAAKT,GAC9BA,EAAGQ,MAAME,OAATV,WAAwBW,GAExBX,EAAGY,QAAUN,EAAWO,IAAI,oBAAqBC,GAGnD,QAASH,KACPN,EAAOU,GAAG,KAGZ,QAASD,KACPd,EAAGY,UACHZ,EAAGQ,MAAMI,UApBX,GAAIZ,GAAKC,IACTN,SAAQC,IAAI,uBAAwB1B,EAAasC,OAEjDD,IAsBF,QAASH,GAAcY,EAA8BC,EAAQ/C,GAQ3D,QAASgD,KACP,GAAIC,GAAeH,EAA6BI,WAAWlD,EAAasC,MAIxE,OAHAb,SAAQC,IAAI,gBAAiBuB,GAE7BlB,KAAKO,MAAQS,EAAOR,KAAKU,GAClBlB,KAAKO,MAXd,GAAIa,IACFZ,KAAMS,EAGR,OAAOG,GAzCT3D,QACKC,OAAO,gBACPyB,WAAW,sBAAuBe,GAClCmB,QAAQ,gBAAiBlB,GAE9BD,EAAoBxB,SAClB,gBAAiB,SAAU,aAAc,gBA4B3CyB,EAAczB,SAAW,+BAAgC,SAAU,mBCrCrE,WACE,YASA,SAAS4C,GAAYC,GACnB,GAAIC,GAAWC,EAAWF,EAK1B,OAJIC,KACFA,KACAC,EAAWF,GAASC,GAEfA,EAGT,QAASE,GAAWH,EAAOI,EAAIC,GAC7B,GAAIJ,GAAWF,EAAYC,GACvBM,EAAUL,EAASG,EAKvB,OAJIE,KACFA,EAAUD,EAAGE,QACbN,EAASG,GAAME,GAEVA,EAGT,QAASE,KAAuC,QAarCC,GAAWT,EAAOU,GACzBA,EAAIC,SACFC,OAAQA,GAEVC,EAASb,GAASU,EAGpB,QAASE,GAAOlE,EAAc2D,GAC5B,MAAOF,GAAWzD,EAAasC,MAAOtC,EAAaoE,QAAST,GAAIC,QAnBlE,GAAIjD,IACFoD,WAAYA,EACZrD,KAAMoC,EAKR,OAFAoB,GAAOzD,SAAW,eAAgB,MAE3BE,EAkBT,QAASmC,GAA6Ba,GAAI,QAU/BU,GAAef,EAAOI,EAAIQ,GACjCT,EAAWH,EAAOI,EAAIC,GAAIM,QAAQC,GAGpC,QAAShB,GAAWI,GAClB,MAAOa,GAASb,GAdlB,GAAIgB,IACFpB,WAAYA,EACZmB,eAAgBA,EAGlB,OAAOC,GA3DT9E,QACKC,OAAO,gBACPkB,SAAS,+BAAgCmD,EAE9C,IAAIK,MACAX,IA8CJV,GAA6BrC,SAAW,SCtD1C,WACE,YAKA,SAAS8D,KAA0B,QAuExBC,GAAkBC,GACzBC,EAAkBC,QAAQF,GAG5B,QAASG,KAAkB,QAQhBC,GAAaC,GACpB,IAAI,GAAIC,GAAI,EAAGC,EAAIN,EAAkBO,OAAYD,EAAJD,EAAOA,IAClD,GAAGL,EAAkBK,GAAGG,UAAUJ,GAChC,MAAOJ,GAAkBK,GAAGI,IAGhC,OAAOL,GAAMK,MAAQL,EAAMM,QAAUN,EAAMM,OAAOD,KAbpD,OACET,kBAAmBA,EACnBG,aAAcA,GA5ElB,GAAIH,KACFQ,UAAW,SAASJ,GAClB,MAAsB,WAAfA,EAAMK,MAEfA,KAAM,WAEND,UAAW,SAASJ,GAClB,MAAOA,GAAMK,KAAKE,SAAS,iBAE7BF,KAAM,oBAEND,UAAW,SAASJ,GAClB,MAAOA,GAAMK,KAAKE,SAAS,iBAAmBP,EAAMQ,UAAYR,EAAMS,iBAAmBT,EAAMU,eAEjGL,KAAM,oBAEND,UAAW,SAASJ,GAClB,MAAsB,sBAAfA,EAAMK,MAA+C,mBAAfL,EAAMK,MAErDA,KAAM,sBAEND,UAAW,SAASJ,GAClB,MAAsB,SAAfA,EAAMK,MAEfA,KAAM,SAEND,UAAW,SAASJ,GAClB,MAAOA,GAAMK,KAAKE,SAAS,YAE7BF,KAAM,eAEND,UAAW,SAASJ,GAClB,MAAOA,GAAMM,QAAUN,EAAMM,OAAOK,QAAUX,EAAMM,OAAOK,OAAOJ,SAAS,aAE7EF,KAAM,gBAEND,UAAW,SAASJ,GAClB,MAAOA,GAAMM,QAAkC,eAAxBN,EAAMM,OAAOK,QAEtCN,KAAM,kBAEND,UAAW,SAASJ,GAClB,MAAsB,YAAfA,EAAMK,MAEfA,KAAM,cAEND,UAAW,SAASJ,GAClB,MAAsB,gBAAfA,EAAMK,MAEfA,KAAM,mBAEND,UAAW,SAASJ,GAClB,MAAsB,aAAfA,EAAMK,MAEfA,KAAM,gBAEND,UAAW,SAASJ,GAClB,MAAsB,UAAfA,EAAMK,MAEfA,KAAM,WAGR,QACEX,kBAAmBA,EACnB9D,KAAMkE,GAtEVpF,QACKC,OAAO,gBACPkB,SAAS,kBAAmB4D,MCJnC,WACE,YAKA,SAASmB,KACP,OACE7E,SAAU,IACVC,OAAS6E,KAAM,eACfC,QAAS,UACTC,KAAMA,GAIV,QAASA,GAAKtE,EAAQuE,EAAMC,EAAOC,GAE9BzE,EAAOoE,MAAQpE,EAAOoE,KAAKM,UAC5B1E,EAAO2E,OAAO,WAAa,MAAOF,GAAQG,YAAe,SAAS3F,GAEhEwF,EAAQI,aAAa,cAAc,GACnCJ,EAAQI,aAAa,UAAW5F,KAnBtChB,QACKC,OAAO,gBACPuC,UAAU,aAAc0D,MCJ/B,WACE,YAKA,SAASW,KACP,OACExF,SAAU,IACVS,SAAU,2UAUVR,OACEC,OAAQ,YACRuF,MAAO,WACPC,UAAW,eACXC,SAAU,cACVC,UAAW,eACXC,aAAc,mBAEhBxF,WAAYyF,EACZtF,aAAc,KACdD,kBAAkB,GAKtB,QAASuF,GAASC,EAAmBrF,EAAQsF,GAAW,QAkB7CxE,KAEJ7C,QAAQsH,SAAShF,EAAGyE,WACrBzE,EAAG6D,KAAO7D,EAAGf,OAAOqE,OAAO2B,MAAMjF,EAAGyE,WAAWZ,KAG/C7D,EAAG6D,KAAO7D,EAAGf,OAAOqE,OAAOO,KAI1BkB,EAAUG,SAASC,QACpBnF,EAAGmF,OAAQ,GAIf,QAASC,GAAQC,EAAKC,GAEjBtF,EAAG6D,OACA7D,EAAGwC,SAQL7C,QAAQC,IAAI,2BAA4BI,EAAGwC,QAAQ+C,cACnDvF,EAAGwC,QAAQgD,QAAQxF,EAAGf,OAAOqE,OAAQtD,EAAGwE,QARxCxE,EAAGwC,QAAUsC,EAAkB9E,EAAGf,OAAOqE,OAAQtD,EAAGwE,OAClDiB,SAAUzF,EAAGf,OAAOwG,SACpBC,UAAW1F,EAAGf,OAAOyG,UACrBC,aAAcA,KAWtB,QAASC,KAEP,OAAQ5F,EAAG2E,WAAa3E,EAAGwC,SAAWxC,EAAGwC,QAAQ+C,aAGnD,QAASI,GAAarC,GACpBtD,EAAGf,OAAOqE,OAASA,EACnBtD,EAAGO,WAGL,QAASsF,KACPzH,EAAE0H,KAAK9F,EAAG+F,OAAQ,SAASC,GACzBA,MAEFhG,EAAGwC,QAAQqD,UAhEb,GAAI7F,GAAKC,IACTD,GAAGwC,QAAUyD,OACbjG,EAAG+F,UAEH/F,EAAGO,SAAWA,EACdP,EAAG6F,QAAUA,EACb7F,EAAGoF,QAAUA,EACbpF,EAAG4F,SAAWA,EAEd5F,EAAG+F,OAAO/H,KAAKyB,EAAO2E,OAAO,WAAa,MAAOpE,GAAGf,OAAOqE,QAAWtD,EAAGoF,UAEzEpF,EAAGO,WAEHd,EAAOoB,IAAIb,EAAG4E,cAAgB,WAAY5E,EAAG6F,SA9C/CnI,QACKC,OAAO,gBACPuC,UAAU,aAAcqE,GA6B7BM,EAASlG,SAAW,oBAAqB,SAAU,gBCjCrD,WAOE,QAASuH,GAAyBC,GAAgB,QAUvCvH,MAIT,QAASwH,GAAUC,GACjBF,EACK3E,MAAM6E,EAAQC,KAAO,eACpBC,IAAK,oBACLnH,WAAY,sBACZG,aAAc,KACdiH,YAAaH,EAAQG,cAnB7B,GAAI3H,IACFuH,UAAWA,EACXxH,KAAMA,EAGR,OAAOC,GAoBT,QAAS4H,GAAiBN,GAExBA,EACK3E,MAAM,qBACL+E,IAAK,qBACLnH,WAAY,kBACZG,aAAc,KACdmH,YAAa,6CAvCrBhJ,QACKC,OAAO,gBACPkB,SAAS,mBAAoBqH,GAC7BjH,OAAOwH,GAEZP,EAAyBvH,SAAW,kBA0BpC8H,EAAiB9H,SAAW,qBChC9B,WACE,YAwBA,SAASgI,2BAA0BC,EACAnE,GAAyB,QAQjDoE,GAAclE,GAClBA,EAAUS,WACXX,EAAwBC,mBACtBU,UAAWT,EAAUS,UACrBC,KAAMV,EAAUU,OAIjBV,EAAUmE,UACXC,kBAAkBpE,EAAUU,MAAQV,EAAUmE,SAG7CnE,EAAU+D,cACXE,EAA6B3E,WACzB,qBACAU,EAAUU,KACVV,EAAU+D,aAEdE,EAA6BI,gBACzBrE,EAAUU,KACVV,EAAU+D,cA3BlB,OACEG,cAAeA,EACfjI,KAAMqI,mBAoCV,QAASA,mBAAkBC,IAAKC,OAAQlJ,iBAAkB6E,gBAC/BsE,aAAc9G,WAAY+G,SAAUC,QAI7D,QAASC,uBAAsBjE,EAAQkB,EAAOvF,GAC5C,GAAIuD,EACJ,IAAGgF,SAASrE,OACV,IAAI,GAAIF,GAAI,EAAGC,EAAIsE,SAASrE,OAAYD,EAAJD,EAAOA,IACzC,GAAGuE,SAASvE,GAAGuB,QAAUA,EAAO,CAC9BhC,EAAUgF,SAASvE,GADWT,EAGtBgD,QAAQlC,EAAQkB,EAAOvF,EAC/B,OAUN,MALIuD,KACFA,EAAU,GAAIiF,YAAWnE,EAAQkB,EAAOvF,GACxCuI,SAASxJ,KAAKwE,IAGTA,GAAW,GAAIiF,YAAWnE,EAAQkB,EAAOvF,GAGlD,QAASwI,YAAWnE,EAAQkB,EAAOvF,GACjCgB,KAAKyH,eACLzH,KAAK0H,kBACL1H,KAAK2H,aACL3H,KAAK4H,YACL5H,KAAK6H,UACL7H,KAAK8F,UACL9F,KAAK8H,aACL9H,KAAK+H,aACL/H,KAAKgI,mBACLhI,KAAKuE,MAAQA,EACbvE,KAAKiI,QAAU,EAEfjI,KAAKkI,OAASlK,iBAAiBE,iBAE/B8B,KAAKuF,QAAQlC,EAAQkB,EAAOvF,GAxCuC,QAmG5DuG,SAAQlC,EAAQkB,EAAOvF,GAC9B,GAAIuD,GAAUvC,IAEduC,GAAQc,OAASA,EACjBd,EAAQgC,MAAQA,EAGZhC,EAAQ+C,eACV/C,EAAQ4F,YAAYnJ,GAEjBqE,EAAO2B,MACR7G,EAAE0H,KAAKxC,EAAO2B,MAAO,SAASpB,GAC5BzF,EAAE0H,KAAKjC,EAAKA,KAAMrB,EAAQ6F,aAAaC,KAAK9F,MAI9CpE,EAAE0H,KAAKxC,EAAOO,KAAMrB,EAAQ6F,aAAaC,KAAK9F,IAGhDA,EAAQ+F,iBACR/F,EAAQgG,qBACRhG,EAAQ+C,YAAW,IAGrB/C,EAAQiG,kBAGV,QAASlD,YAAWmD,GAClB,GAAIlG,GAAUvC,IAId,OAHGyI,KACDlG,EAAQc,OAAOqF,SAAWD,GAErBlG,EAAQc,QAAUd,EAAQc,OAAOqF,SAG1C,QAASP,aAAYnJ,GACnB,GAAIuD,GAAUvC,IACXhB,KACEA,EAAOwG,WAAUjD,EAAQiD,SAAWxG,EAAOwG,UAC3CxG,EAAO0G,eAAcnD,EAAQmD,aAAe1G,EAAO0G,cACnD1G,EAAOyG,YAAWlD,EAAQoG,cAAgBpG,EAAQqG,mBAAmB5J,EAAOyG,aAInF,QAASoD,eAAc9F,GACrB,GAAIR,GAAUvC,KACVqD,EAASN,EAAMM,MAEhBA,KAEDN,EAAM+F,cAAgB,WACpB,MAAO3K,GAAE4K,QAAQ1F,EAAOD,MAAQjF,EAAE6K,MAAM3F,EAAOD,MAAQC,EAAOD,MAGhEb,EAAQ0G,eAAelG,IAI3B,QAASkG,gBAAelG,GACtB,GAAIR,GAAUvC,KACVqD,EAASN,EAAMM,MAFU,IAI1BA,EAAAA,WAAgB,CACjB,GAAI6F,GAAM3G,EAAQ4G,OAAOpG,EAAMmG,IADd,IAGd3G,EAAQ0F,QAAS,CAClB,GAAGiB,EAAI5F,UAAY4F,EAAI5F,SAAS,MAAO,MACvC,IAAIiB,GAAQhC,EAAQ6G,gBAAgBrG,EAAMmG,IAAK3G,EAAQgC,OACnD8E,EAAa9E,EAAM+E,QAInB/G,EAAQqF,SAASsB,IAAQ/K,EAAEI,YAAY8K,IAAe5L,QAAQ8L,OAAOF,EAAY9G,EAAQqF,SAASsB,MACpG3E,EAAMiF,IAAInG,EAAAA,YAGdd,EAAQqF,SAASsB,GAAOzL,QAAQgM,KAAKpG,EAAAA,aAIzC,QAASqG,iBAAgBC,GACvB,GAAIpH,GAAUvC,IAEd2J,GAASvG,KAAO,cAChBjF,EAAE0H,KAAK8D,EAASC,MAAOrH,EAAQ6F,aAAaC,KAAK9F,IAE9CoH,EAASE,aACVF,EAASG,eAAiB,WACrBH,EAASE,cACVF,EAASI,WAAaJ,EAASI,YAInCJ,EAASK,QAAUL,EAASI,WAG5BJ,EAASK,QAAS,EAItB,QAAS5B,cAAarF,GACpB,GAAIR,GAAUvC,IAMd,IAJI+C,EAAMkH,eACR1H,EAAQ2H,qBAAqBnH,EAAOR,EAAQkD,UAAU1C,EAAMmG,MAG5C,aAAfnG,EAAMK,KACPb,EAAQmH,gBAAgB3G,OAErB,CACCA,EAAMoH,UAASpH,EAAMoH,QAAUhM,EAAEiM,QAAQjM,EAAEkM,KAAKtH,GAAQ,OAE5D,IAAImG,GAAM3G,EAAQ4G,OAAOpG,EAAMmG,IAoB/B,IAlBGnG,EAAMmG,MACP3G,EAAQ+H,eAAevH,EAAOmG,GAC9BnG,EAAMM,OAASd,EAAQkD,UAAUyD,GAE9BnG,EAAMM,SACJN,EAAMM,OAAOkH,cAAaxH,EAAMwH,YAAcxH,EAAMM,OAAOkH,aAC3DxH,EAAMyH,WAAazH,EAAMM,OAAOmH,WAAUzH,EAAMyH,UAAW,KAIlEjI,EAAQsG,cAAc9F,GAElBA,EAAMK,OAAML,EAAMK,KAAOL,EAAM+F,eAAiB/F,EAAM+F,iBAEvD/F,EAAMb,SAASK,EAAQkI,eAAe1H,GAEtCA,EAAM2H,OAAOnI,EAAQoI,kBAAkB5H,GAExB,YAAfA,EAAMK,MAAqC,aAAfL,EAAMK,KACnCb,EAAQqI,eAAe7H,OAEpB,IAAkB,cAAfA,EAAMK,KACZb,EAAQsI,iBAAiB9H,OAEtB,CAEH,GAAIL,GAAYG,gBAAgBC,aAAaC,GACzC8D,EAAUC,kBAAkBpE,EAC7BvE,GAAE2M,SAASjE,GACZtE,EAAQsE,GAAS9D,GAEX5E,EAAE4M,WAAWlE,IACnBA,EAAQmE,KAAKzI,EAASQ,GAGrBA,EAAM2C,cAAcnD,EAAQ0I,gBAAgBlI,EAAO,KAAMA,EAAM2C,cAC/D3C,EAAMmI,OAAO3I,EAAQsF,OAAO9J,KAAKwE,EAAQ4I,WAAWpI,MAK7D,QAASoG,QAAOD,GASd,MARG/K,GAAE4K,QAAQG,KACXA,EAAM/K,EAAEiN,OAAOlC,EAAK,SAASmC,EAAOC,GAClC,MAAG,UAAUC,KAAKD,GACTD,EAAQ,IAAMC,EAAO,IAEvBD,EAAQ,IAAMC,KAGlBpC,EAGT,QAASzD,WAAUyD,EAAKsC,GACtB,GAAItC,EAAJ,CACA,GAAI3G,GAAUvC,IACdkJ,GAAM3G,EAAQ4G,OAAOD,GAHQA,EAOvBA,EACDuC,QAAQ,cAAe,IACvBA,QAAQ,6BAA8B,gBACtCA,QAAQ,MAAO,WACfA,QAAQ,WAAY,KACpBC,MAAM,WACXF,EAAQA,GAASjJ,EAAQc,OAAOA,OAAOsI,UAIvC,KAFA,GAAI3C,GAAO4C,EAEL1C,EAAIhG,OAAS,GACjB8F,EAAQE,EAAI,GACZ0C,EAAa5C,EAAM6C,MAAM,WAGvBL,EADCI,EACOJ,EAAMtC,EAAI4C,QAAQC,MAAM,EAAG/C,EAAM9F,OAAS0I,EAAW,GAAG1I,SAAS0G,MAAM+B,WAGvEH,EAAMtC,EAAI4C,SAASH,UAO/B,OAHA3C,GAAQE,EAAI,GACZ0C,EAAa5C,EAAM6C,MAAM,WAEtBD,EACMJ,EAAMxC,EAAM+C,MAAM,EAAG/C,EAAM9F,OAAS0I,EAAW,GAAG1I,SAAS0G,MAG7D4B,EAAMxC,IAGf,QAASyB,gBAAe1H,GACtB,GAAIR,GAAUvC,IAqBd,OAnBA7B,GAAE0H,KAAK9C,EAAMb,QAAS,SAAS8J,EAASC,GACtC1J,EAAQ2J,cAAcnJ,EAAOkJ,EAAUD,EAEvC,IAAIG,GAAcH,EAAQH,MAAM,iCAEhCnM,SAAQC,IAAI,eAAgBwM,GACzBA,IACqB,iBAAnBA,EAAY,GACb5J,EAAQ6J,gBAAgBrJ,EAAOkJ,EAAUE,EAAY,IAE5B,WAAnBA,EAAY,KAClB5J,EAAQ0I,gBAAgBkB,EAAY,GAAI,WACtC5J,EAAQ2J,cAAcnJ,EAAOkJ,EAAUD,KAEzCtM,QAAQC,IAAI,qBAAsB4C,EAAQwF,eAKzChF,EAGT,QAASmJ,eAAcnJ,EAAOkJ,EAAUI,GACtC,GAAI9J,GAAUvC,IACd+C,GAAMkJ,GAAY1J,EAAQ6G,gBAAgBiD,GAAK/C,MAGjD,QAAS8C,iBAAgBrJ,EAAOkJ,EAAUD,GACxCtM,QAAQC,IAAI,mBAAoBoD,EAAOkJ,EAAUD,EACjD,IAAIzJ,GAAUvC,IAEduC,GAAQyF,gBAAgBgE,GAAWzJ,EAAQyF,gBAAgBgE,OAC3DzJ,EAAQyF,gBAAgBgE,GAASzJ,EAAQ4G,OAAOpG,EAAMmG,OACpDnG,MAAOA,EACPmG,IAAK+C,GAIT,QAAStB,mBAAkB5H,OACzB,GAAIR,SAAUvC,KACVqD,OAASN,MAAMM,MAEnBN,OAAM2H,MAAQvM,EAAE4K,QAAQhG,MAAM2H,OAAS3H,MAAM2H,OAAS3H,MAAM2H,OAE5DvM,EAAE0H,KAAK9C,MAAM2H,MAAO,SAASA,OAC3B,GAAGA,MAAM4B,WAAY,CACnB,GAAInJ,WAAYuH,MAAMvH,UAClBoJ,kBAAoBhK,QAAQiK,oBAAoBrJ,WAEhDmJ,WAAa5B,MAAM4B,WACnBzF,OAEJ,IAAG1I,EAAE4M,WAAWuB,YACdzF,QAAU,WACR,GAAI4F,GAAkBF,kBAAoBhK,QAAQmK,eAAeH,mBAAqBpJ,YAClFsJ,GAAmBvF,OAAOuF,GAAiBlK,WAC7C+J,kBAID,CACH,GAAIK,cAEJA,YAAWC,KAAON,WAAWT,MAAM,kBAEhCc,WAAWC,MACZD,WAAWC,KAAOD,WAAWC,KAAK,GAClCN,WAAaA,WAAWb,QAAQkB,WAAWC,KAAM,IAAIC,SAGrDF,WAAWG,KAAOR,WAAWT,MAAM,wBAEhCc,WAAWG,OACZH,WAAWI,UACTC,IAAK,MACLC,IAAK,WACLC,IAAK,WACLC,IAAK,UACLR,WAAWG,KAAK,IANAH,WASPS,SAAW7K,QAAQ6G,gBAAgBuD,WAAWG,KAAK,MAIlER,WAAaA,WAAWT,MAAM,mBAzB3BhF,QA4BO,WACR,GAAIwG,YAAYC,QACbhB,YAAW,GAAGhJ,SAAS,gBACxB+J,WAAaE,kBAAkBjB,WAAW,GAAIkB,UAAU,KAEtDlB,WAAW,GAAGhJ,SAAS,gBACzBgK,SAAWC,kBAAkBjB,WAAW,GAAIkB,UAAU,IAExD,IAAIC,QAASlL,QAAQ6G,gBAAgBiE,YAAcf,WAAW,IAC1DoB,KAAOnL,QAAQ6G,gBAAgBkE,UAAYhB,WAAW,IAGtDG,gBAAkBF,kBAAoBhK,QAAQmK,eAAeH,mBAAqBpJ,SACtF,KAAIsJ,iBAAmBvF,OAAOuF,iBAAiBlK,SAE7C,GAAGoK,WAAWC,KACZa,OAAOjE,IAAImE,OAAOD,KAAKpE,OAAOsE,IAAIjB,WAAWC,KAAM,QAAQiB,cAExD,IAAGlB,WAAWG,KAAM,CAGvB,GAAIrM,QAASqN,KAAKJ,KAAKpE,MAAQqD,WAAWG,KAAK,GAAKH,WAAWS,SAAS9D,MAMxE,IATuBjG,OAQdA,QAAUN,MAAM6G,QAAU7G,MAAM6G,MAAM,GAAGvG,QAAWN,MAAM6G,MAAM,GAAGA,OAAS7G,MAAM6G,MAAM,GAAGA,MAAM,GAAGvG,QAC3F,gBAAfN,MAAMK,KAAwB,CAE/B,GAAI2K,GAAI1K,QAA4B,qBAAlBA,OAAOK,OAAgC,EAAI,CAG3DjD,QADwB,MAAvBkM,WAAWG,KAAK,GACR3O,EAAE6P,MAAMvN,OAAQsN,GAEI,MAAvBpB,WAAWG,KAAK,GACb3O,EAAE8P,KAAKxN,OAAQsN,GAGf5P,EAAE+P,MAAMzN,OAAQsN,GAG7BxL,QAAQwF,UAAU0F,OAAOU,OAAOjF,KAAK7D,KAAO5E,OAC5CgN,OAAOjE,IAAI/I,QAAU,OAGrBgN,QAAOjE,IAAIkE,KAAKpE,QAMxB/G,QAAQ0I,gBAAgBlI,MAAO8D,QAAS9D,MAAM2C,iBAKpD,QAAS8G,qBAAoBrJ,GAC3B,MAAOA,IAAaA,EAAU0I,MAAM,qBAGtC,QAASa,gBAAevJ,GACtB,GAAIZ,GAAUvC,KACVoO,EAASjL,EAAU,GACnBkL,EAAelL,EAAU,GACzBmL,EAAmBnL,EAAU,EAEjC,IAAoB,QAAjBkL,EAAwB,CACzB,GAAIE,GAAYD,EAAiBzC,MAAM,sCACnC2C,EAAMjM,EAAQ6G,gBAAgBmF,EAAU,IAAIjF,MAC5CmF,EAAaF,EAAU,GACvBG,EAAkBH,EAAU,GAAG1B,OAAOpB,QAAQ,KAAM,IACpDvC,EAAMqF,EAAU,GAAG1B,OACnB8B,GAAa,CASjB,OAPAH,GAAII,QAAQ,SAASnQ,GACnB,GAAIoQ,GAAM3F,EAAMzK,EAAMyK,GAAOzK,CAC1BqQ,mBAAkBD,EAAKJ,EAAYC,KACpCC,GAAa,KAIVP,IAAWO,GAAYI,WAAaJ,EAAWI,YAI1D,QAASD,mBAAkBE,EAAMP,EAAYQ,GAC3C,OAAOR,GACL,IAAK,MAAO,MAAOO,KAASC,CAD9B,KAEO,KAAM,MAAOD,IAAQC,CAF5B,KAGO,KAAM,MAAeA,IAARD,CAHpB,KAIO,IAAK,MAAOA,GAAOC,CAJ1B,KAKO,IAAK,MAAcA,GAAPD,GAIrB,QAAS/D,iBAAgB/B,EAAKrC,EAASnB,EAAcwJ,GACnD,GAAI3M,GAAUvC,IADiD,IAI5D7B,EAAEgR,SAASjG,KAAS/K,EAAE4K,QAAQG,GAAM,CACrC,IAAIA,EAAIA,KAAOA,EAAIU,MAIjB,WAHAzL,GAAE0H,KAAKqD,EAAIU,MAAO,SAAS7G,GACzBR,EAAQ0I,gBAAgBlI,EAAO8D,EAAS9D,EAAM2C,eAKhDwD,GAAMA,EAAIA,IAIdA,EAAM3G,EAAQ4G,OAAOD,EACrB,IAAIkG,GAAWlG,EAAI2C,MAAM,sBAEzB,IAAGuD,EAED,WADA7M,GAAQ8M,sBAAsBD,EAAS,GAAIA,EAAS,GAAIvI,EAASnB,EAAcwJ,EAIjF,KAAI3M,EAAQwF,UAAUmB,GAAM,CAC1B,GAAI7D,GAAO5H,QAAQgM,KAAKlH,EAAQ6G,gBAAgBF,EAAK3G,EAAQgC,OAAO+E,MAD1C/G,GAGlBwF,UAAUmB,IAChBoG,YACA5J,aAAcA,EACdL,KAAMA,GAIPwB,IACDtE,EAAQwF,UAAUmB,GAAKoG,SAASvR,KAAK8I,GAClCqI,GAAYrI,EAAQ,KAAM,KAAMqC,IAIvC,QAASmG,uBAAsBE,EAAQtD,EAAUpF,EAASnB,EAAcwJ,GACtE,GAAI3M,GAAUvC,KACVwP,EAAU,SAASpK,EAAKC,GAC1B,GAAIrC,GAAGC,EAAGiG,CAEV,IAAG7D,GAAQA,EAAOD,EAAK,CACrB,GAAIqK,GAAUF,EAAS,KAAOlK,EAAO,GAAK,KAAY4G,CADjC,IAGjB1J,EAAQwF,UAAU0H,GACpB,IAAIzM,EAAI,EAAGC,EAAIoC,EAAUpC,EAAJD,EAAOA,IAC1BkG,EAAMqG,EAAS,IAAMvM,EAAI,KAAYiJ,EACrC1J,EAAQmN,mBAAmBxG,EAG/B,KAAIlG,EAAI,EAAGC,EAAImC,EAASnC,EAAJD,EAAOA,IACzBkG,EAAMqG,EAAS,IAAMvM,EAAI,KAAYiJ,EACrC1J,EAAQ0I,gBAAgB/B,EAAKrC,EAASnB,GACnCwJ,GAAYrI,EAAQ,KAAM,KAAMqC,OAGlC,IAAG9D,GAAOC,GAAQ,GACrB,IAAIrC,EAAIqC,EAAMpC,EAAImC,EAASnC,EAAJD,EAAOA,IAC5BkG,EAAMqG,EAAS,IAAMvM,EAAI,KAAYiJ,EACrC1J,EAAQ0I,gBAAgB/B,EAAKrC,EAASnB,GACnCwJ,GAAYrI,EAAQ,KAAM,KAAMqC,IAKrCyG,EAASpN,EAAQ6G,gBAAgBmG,EAAQhN,EAAQgC,OAAO+E,KAC5DnL,GAAE0H,KAAK8J,EAAQ,SAAS5M,EAAOC,GAC7B,GAAIkG,GAAMqG,EAAS,IAAMvM,EAAI,KAAYiJ,CACzC1J,GAAQ0I,gBAAgB/B,EAAKrC,EAASnB,GACnCwJ,GAAYrI,EAAQ,KAAM,KAAMqC,KAGlC3G,EAAQmF,eAAe6H,EAAS,WACjChN,EAAQmF,eAAe6H,EAAS,WAAWD,SAASvR,KAAKyR,GAEzDjN,EAAQmF,eAAe6H,EAAS,YAC9BD,UAAWE,GACXnK,KAAMsK,EAASA,EAAOzM,OAAS,GAKrC,QAASwM,oBAAmBxG,GAC1B,GAAI3G,GAAUvC,IACduC,GAAQwF,UAAUmB,GAAOlD,OAG3B,QAASsC,kBAEP,GAAI/F,GAAUvC,IACXuC,GAAQqN,WACRrN,EAAQsN,YAAYtN,EAAQsN,aAE/BtN,EAAQsN,WAAaxP,WAAW8D,OAC5B,WAAa,MAAO5B,GAAQgC,OAC5BhC,EAAQuN,aAAazH,KAAK9F,IAC1B,GAGJA,EAAQwN,mBACRxN,EAAQqN,UAAW,GAGrB,QAASE,cAAa1K,EAAKC,GACzB,GAAI9C,GAAUvC,IACVvC,SAAQ8L,OAAOnE,EAAKC,KAEtB9C,EAAQyN,WAAavS,QAAQgM,KAAKlH,EAAQ2F,QAC1C3F,EAAQ2F,UAER/J,EAAE0H,KAAKtD,EAAQmF,eAAgB,SAAS3B,EAAUmD,GAChD,GAAI2F,GAAMtM,EAAQ6G,gBAAgBF,EAAK3G,EAAQgC,OAAO+E,KAClD7L,SAAQ8L,OAAOsF,EAAK9I,EAASV,QAC/BlH,EAAE0H,KAAKE,EAASuJ,SAAU,SAASzI,GACjCA,EAAQgI,EAAK9I,EAASV,QAExBU,EAASV,KAAO5H,QAAQgM,KAAKoF,MAIjC1Q,EAAE0H,KAAKtD,EAAQwF,UAAW,SAAShC,EAAUmD,GAE3C,GAAGnD,EAAU,CACX,GAAI8I,GAAMtM,EAAQ6G,gBAAgBF,EAAK3G,EAAQgC,OAAO+E,KAClD7L,SAAQ8L,OAAOsF,EAAK9I,EAASV,QAC/BlH,EAAE0H,KAAKE,EAASuJ,SAAU,SAASzI,GACjCA,EAAQgI,EAAK9I,EAASV,KAAM6D,KAE9BnD,EAASV,KAAO5H,QAAQgM,KAAKoF,IAE5B9I,EAASL,eAAiBjI,QAAQc,YAAYsQ,IAAgB,OAARA,IACvDtM,EAAQ2F,OAAOgB,GAAO2F,MAMxBpR,QAAQ8L,OAAOhH,EAAQ2F,OAAQ3F,EAAQyN,cACtCzN,EAAQgC,MAAM5C,KAAOY,EAAQ0F,SAAW9J,EAAE8R,QAAQ1N,EAAQyN,cACzDzN,EAAQ0F,QAGV1F,EAAQ2N,kBAMhB,QAASH,oBACP,GAAIxN,GAAUvC,IACd7B,GAAE0H,KAAKtD,EAAQwF,UAAW,SAAShC,EAAUmD,GAC3C,GAAGnD,EAAU,CACX,GAAI8I,GAAMtM,EAAQ6G,gBAAgBF,EAAK3G,EAAQgC,OAAO+E,KACnDvD,GAASL,eAAiBjI,QAAQc,YAAYsQ,IAAgB,OAARA,IACvDtM,EAAQ2F,OAAOgB,GAAO2F,MAM9B,QAAStG,sBACP,GAAIhG,GAAUvC,IACduC,GAAQuD,OAAO/H,KAAKsC,WAAWO,IAAI,2BAA4B,SAASuP,EAAOpR,GAE7E,GAAImK,GAAM3G,EAAQ4G,OAAOpK,EAAM6E,KAAKsF,KAAKuC,QAAQ,UAAW,KACxD1M,GAAM6E,KAAKT,YAAWpE,EAAM6E,KAAKT,UAAY,QACjDZ,EAAQ6N,aAAarR,EAAM6E,KAAMsF,GACjCnK,EAAMa,MAAM,yBAA0BsJ,MAExC3G,EAAQuD,OAAO/H,KAAKsC,WAAWO,IAAI,4BAA6B,SAASuP,EAAOpR,EAAOsR,GACrF,GAAItR,EAAM6E,KAAKE,KAAM,CACnB,GAAIwM,GAAO/N,EAAQ6G,gBAAgBrK,EAAM6E,KAAKE,KAAMvB,EAAQgC,OAAO+E,KACnEgH,GAAKC,OAAOF,EAAO,OAKzB,QAASD,cAAaxM,EAAMsF,GAC1B,GAAI3G,GAAUvC,IACVuC,GAAQkF,YAAYyB,KAAM3G,EAAQkF,YAAYyB,OAClD3G,EAAQkF,YAAYyB,GAAKnL,KAAK6F,GAGhC,QAAS4M,gBAAetH,GACtB,GAAI3G,GAAUvC,IACd,OAAOuC,GAAQkF,YAAYyB,GAG7B,QAASoB,gBAAevH,EAAOmG,GAC7B,GAAI3G,GAAUvC,IACdkJ,GAAMA,GAAO3G,EAAQ4G,OAAOpG,EAAMmG,KAC9B3G,EAAQkO,iBAAiBvH,KAAM3G,EAAQuF,UAAUoB,GAAOnG,GAG9D,QAAS0N,kBAAiBvH,GACxB,GAAI3G,GAAUvC,IACd,OAAOuC,GAAQuF,UAAUoB,GAG3B,QAASwH,gBAAexH,EAAKG,GAC3B,GAAI9G,GAAUvC,IAEXkJ,KACD3G,EAAQoF,UAAUuB,GAAOG,GAI7B,QAASsH,kBAAiBzH,GACxB,GAAI3G,GAAUvC,IAEd,OAAOuC,GAAQoF,UAAUuB,GAG3B,QAASE,iBAAgBiD,IAAKb,OAC5B,GAAIjJ,SAAUvC,IADqB,KAG/BqM,KAAO,mDAAmDd,KAAKc,KACjE,OACE/C,IAAO,WACL,MAAOwE,MAAKzB,MAKlBA,KAAM9J,QAAQ4G,OAAOkD,IAXc,IAc/BR,OAAQQ,IAAIR,MAAM,qBAiBlBxC,YACFC,IAAO,WAIL,IAHA,GAAI6E,GAAO9B,IAAIZ,QAAQ,OAAQ,IAAIA,QAAQ,YAAa,OAAOC,MAAM,KACjEkF,EAAQpF,OAASjJ,QAEfqO,GAASzC,EAAKjL,OAAS,GAC3B0N,EAAQA,EAAMzC,EAAKrC,QALL,OAWT8E,IAASA,EAAMzC,EAAK,KAE7B3E,IAAO,SAASqF,GAId,IAHA,GAAIV,GAAO9B,IAAIZ,QAAQ,OAAQ,IAAIA,QAAQ,YAAa,OAAOC,MAAM,KACjEkF,EAAQpF,OAASjJ,QAEfqO,GAASzC,EAAKjL,OAAS,GAAG,CAC9B,GAAIgG,GAAMiF,EAAKrC,OACX8E,GAAM1H,KACL,QAAQqC,KAAK4C,EAAK,IACnByC,EAAM1H,MAGN0H,EAAM1H,OAGV0H,EAAQA,EAAM1H,GAKhB,MAFA0H,GAAMzC,EAAK,IAAMU,EAEVA,GAETV,KAAQ,WACN,OACE9B,IAAKA,IACLb,MAAOA,MACPtC,IAAK2C,MAAM,KAtEkB,OA+E5BxC,YAGT,QAASuB,gBAAeiG,GACtB,GAAItO,GAAUvC,IAEd7B,GAAE0H,KAAKgL,EAAQjH,MAAOrH,EAAQ6F,aAAaC,KAAK9F,IAGlD,QAASsI,kBAAiBiG,GACxB,GAAIvO,GAAUvC,IAEd8Q,GAAU1N,KAAO,UACjB0N,EAAUC,UAAY,KAEtB,IAAIC,GAAO,GAAK7S,EAAE8S,OAAOH,EAAUlH,MAAO,UAAU1G,MAEpD/E,GAAE0H,KAAKiL,EAAUlH,MAAO,SAAS7G,EAAOC,GACtCT,EAAQ6F,aAAarF,GACrB+N,EAAUlH,MAAM5G,IACdI,KAAM,UACN2N,UAAW,UAAYC,EACvBpH,OAAQ7G,MAKd,QAASmO,iBAAgBnO,GAEvBA,EAAMoO,gBACJC,mBAAoB,UACpBC,sBAAuB,aACvBC,SAAY,SACZvO,EAAMM,OAAOK,QAEfX,EAAMK,KAAO,cAGf,QAASmO,mBAAkBxO,GACzBA,EAAMK,KAAO,gBAGf,QAASoO,iBAAgBzO,GACvB,GAAIR,GAAUvC,IACd+C,GAAMK,KAAO,cAEbL,EAAM6G,MAAMgF,QAAQrM,EAAQ6F,aAAaC,KAAK9F,IAC9CQ,EAAM6G,QACJxG,KAAM,UACNwG,MAAO7G,EAAM6G,MACbzG,UAAW,UAAYZ,EAAQ4G,OAAOpG,EAAMmG,KAAO,QAIvD,QAASuI,oBAAmB1O,GAC1B,GAAIR,GAAUvC,IACd+C,GAAMK,KAAO,iBACbjF,EAAE0H,KAAK9C,EAAM2O,KAAM,SAAS1F,EAAS9C,GACnCnG,EAAM2O,KAAKxI,GAAO3G,EAAQ6G,gBAAgB4C,GAAS1C,QAIvD,QAASqI,qBAAoBC,GAE3BA,EAAOxO,KAAO,kBACXwO,EAAOC,YACRD,EAAOE,SAAW,UAAY3T,EAAE4T,OAAO,GAAIH,EAAOrO,SAASL,SAI/D,QAAS8O,aAAYpF,GACnBA,EAAKxJ,KAAO,oBAGd,QAAS6O,eAAcC,GACrB,GAAI3P,GAAUvC,KACVqD,EAAS6O,EAAO7O,MAmCpB,KAjCG6O,EAAO1O,iBAAmB0O,EAAO3O,YAClC2O,EAAOC,YAAc,WACnB,MAAOD,GAAO3O,UAAYhB,EAAQc,OAAOqO,KAAKQ,EAAO1O,kBAGvD0O,EAAOE,OAAS,SAASvD,EAAKjL,EAAMuM,EAAOkC,GACzC,GAAIhJ,GAAa9G,EAAQ6G,gBAAgBxF,EAAKsF,IAAK3G,EAAQgC,MAI3D,IALiDsK,EAI3CxF,EAAWC,MACJ,aAAV6G,EAAsB,CACvB,GAAImC,EACJ,IAAwB,UAArB1O,EAAKP,OAAOD,KACiB,WAA3BQ,EAAKP,OAAOuG,MAAMxG,OACnBkP,KACAnU,EAAE0H,KAAKgJ,EAAK,SAASA,GACnB,GAAIhD,KACJA,GAAMqG,EAAOK,eAAiB,SAAW1D,EACzCyD,EAAOvU,KAAKI,EAAEqU,KAAKN,EAAOC,cAAetG,WAI1C,CACH,GAAIA,KACJA,GAAMqG,EAAOK,eAAiB,SAAW1D,EACzCyD,EAASnU,EAAEqU,KAAKN,EAAOC,cAAetG,GAGrCyG,GAAQD,EAAOC,MAKrBJ,EAAOzO,cAAe,CACvB,GAAIyF,GAAMgJ,EAAOzO,cAAcyE,OAAOuK,CACtCP,GAAOQ,WAAa,SAASD,GAC3B/S,QAAQC,IAAI,YAAa8S,EACzB,IAAIvK,KAIJ,OAHGgB,KACDhB,EAAOgB,GAAOuJ,GAETxL,IAAIqC,KACThD,IAAK4L,EAAOzO,cAAc6C,IAC1B4B,OAAQA,KAKRgB,IAAKgJ,EAAOS,UAAY,KAE5BT,EAAOE,OAAS,SAASvD,EAAKjL,EAAMuM,EAAOkC,GAE5B,aAAVlC,GACDkC,EAAOxD,IAKb,GAAGxL,EAAOuG,MAAO,CACf,GAAIhC,KACJzJ,GAAE0H,KAAKxC,EAAOuG,MAAM+B,WAAY,SAAStI,EAAQ6F,GAC5CzL,QAAQmV,UAAUvP,EAAAA,aACnBuE,EAAS7J,MACPmL,IAAOA,EACP2J,UAASxP,EAAAA,eAIZuE,EAAS1E,SACVgP,EAAOY,MAAQ,SAASjE,EAAKjL,EAAMuM,GAC9BtB,EAAIpQ,OAAmB,cAAV0R,GACdhS,EAAE0H,KAAK+B,EAAU,SAASmL,GAEpBlE,EAAIpQ,MAAMsU,EAAK7J,OAAM2F,EAAIpQ,MAAMsU,EAAK7J,KAAO6J,EAAAA,gBAOrDb,EAAO9O,KAAKE,SAAS,qBACpB4O,EAAOtI,OACRsI,EAAOc,cAAe,EAEM,cAAzBd,EAAOtI,MAAM,GAAGxG,OACd8O,EAAOtI,MAAM1G,OAAS,IACvBgP,EAAOtI,QACLxG,KAAM,YACNwG,MAAOsI,EAAOtI,SAIlBrH,EAAQmH,gBAAgBwI,IAG1BA,EAAO9O,KAAO,6BAGV8O,EAAOe,iBACS,SAAff,EAAOhJ,IACRgJ,EAAOe,eAAiB,OAES,UAA3Bf,EAAOpJ,iBAA0D,IAA3BoJ,EAAO7O,OAAO6P,SAC1DhB,EAAOe,eAAiB,OAGxBf,EAAOe,eAAiB,UAG5Bf,EAAO9O,KAAO,oBAIf8O,EAAOiB,gBACRjB,EAAOkB,cAAgB7Q,EAAQ8Q,gBAAgBnB,EAAOiB,gBAGxD5Q,EAAQ0I,gBAAgBiH,EAAOhJ,IAAK,SAAS2F,GAC3C,GAAIjL,GAAOrB,EAAQiD,UAAYjD,EAAQiD,SAASjD,EAAQ4G,OAAO+I,EAAOhJ,KACnEtF,IAAQA,EAAK0P,WAAW1P,EAAK0P,aAC/BpB,EAAOxM,cAGZ,QAAS6N,eAAcC,GACrBA,EAAOpQ,KAAO,YAGhB,QAASqQ,aAAYC,GACnBA,EAAK3C,UAAY,aAGnB,QAAS4C,gBAAeC,GACtB,GAAIrR,GAAUvC,IACd4T,GAAQxQ,KAAO,aACfwQ,EAAQC,WAAatR,EAAQ8Q,gBAAgBO,EAAQT,eAAe,GAGtE,QAASE,iBAAgBS,EAAKC,GAC5B,GAAIxR,GAAUvC,KAGVgU,EAAY7M,YAChB,OAAO,UAASpI,EAAOkV,GAWrB,MARGF,KACEtW,QAAQmV,UAAUqB,KACnBlV,EAAQZ,EAAE+V,IAAInV,EAAO,SAASmK,GAC5B,MAAe,eAARA,EAAuB+K,EAAa/K,KAG/CnK,EAAQwD,EAAQ6G,gBAAgBrK,EAAOwD,EAAQgC,OAAO+E,OAEjD0K,EAAUF,GAAK/U,IAI1B,QAASmL,sBAAqBD,EAAe5G,GAC3C,GAEIwD,GAFAtE,EAAUvC,KACVmU,EAAchW,EAAEqU,KAAKvI,EAAcL,MAAO,cAI5C/C,GADExD,GAA0B,UAAhBA,EAAOD,KACTgR,wBAAwBnK,EAAekK,EAAa5R,GAEpD8R,mBAAmBpK,EAAekK,EAAa5R,GAG3D0H,EAAcA,eAAgB,EAC9B1H,EAAQ0I,gBAAgBkJ,EAAYjL,IAAKrC,EAASsN,EAAYzO,cAAc,GAC5EnD,EAAQ6F,aAAa6B,GAGvB,QAASmK,yBAAwBnK,EAAekK,EAAa5R,GAC3DpE,EAAE0H,KAAKoE,EAAcL,MAAO,SAAS0K,GACZ,UAAnBA,EAAKnR,YACPmR,EAAKnR,UAAY,SAGrB,IAAI0D,GAAU,WACZ,GAAIwJ,GAAQkE,cAAc/G,UAAU,GACpCrP,GAAE0H,KAAKoE,EAAcL,MAAO,SAAS0K,GACnC,GAAIE,GAAYjS,EAAQ4G,OAAOgL,EAAYjL,KACvCA,EAAM3G,EAAQ4G,OAAOmL,EAAKpL,KAC1BuL,EAAWC,WAAWC,MAAMzL,EAChC,IAAIsL,IAActL,EAAlB,CACA,GAAI0L,GAAmBrS,EAAQsS,cAAcL,EAAWnE,GACpDyE,EAAcvS,EAAQ6G,gBAAgBwL,EAAkBrS,EAAQgC,OAAO+E,MACvEyL,EAAaxS,EAAQiO,eAAetH,EACpC/K,GAAEmF,SAASwR,EAAaL,EAASA,EAASvR,OAAS,IACrD/E,EAAE0H,KAAKkP,EAAY,SAAStL,GACtB8K,cAAc9K,IAAS4G,IACzB5G,EAAKtG,UAAY,UAIrBhF,EAAE0H,KAAKkP,EAAY,SAAStL,GACtB8K,cAAc9K,IAAS4G,IACzB5G,EAAKtG,UAAY,QACjBZ,EAAQ6G,gBAAgB7G,EAAQ4G,OAAOM,EAAKP,KAAM3G,EAAQgC,OAAOiF,aAOvEjF,EAAQhC,EAAQ6G,gBAAgB7G,EAAQ4G,OAAOc,EAAcf,KAAM3G,EAAQgC,OAAO+E,KACtFnL,GAAE0H,KAAKoE,EAAcL,MAAO,SAAS0K,GACnC,GAAIpL,GAAM3G,EAAQ4G,OAAOmL,EAAKpL,KAC1BsL,EAAYjS,EAAQ4G,OAAOgL,EAAYjL,IACvCA,KAAQsL,GACZrW,EAAE0H,KAAKtB,EAAO,SAASR,EAAMf,GAC3B,GAAIgS,GAAazS,EAAQsS,cAAc3L,EAAKlG,GACxCiS,EAAkBP,WAAWC,MAAMK,GACnCJ,EAAmBrS,EAAQsS,cAAcL,EAAWxR,GACpDkS,EAAc3S,EAAQ6G,gBAAgBwL,EAAkBrS,EAAQgC,OAChEuQ,EAAcI,EAAY5L,MAC1B6L,EAAY5S,EAAQ6G,gBAAgB4L,EAAYzS,EAAQgC,OAAO+E,KAC/D6L,KAAchX,EAAEmF,SAASwR,EAAaG,EAAgBA,EAAgB/R,OAAS,MAC5E4R,IACHA,MAEFA,EAAY/W,KAAKkX,EAAgBA,EAAgB/R,OAAS,IAC1DgS,EAAY1L,IAAIsL,OAlD8C,IAuDhElN,GAAWrF,EAAQkD,UAAUwE,EAAcf,KAAhC3G,UACfpE,GAAE0H,KAAK+B,EAAU,SAAS7D,EAAMf,GAC9B,GAAIwR,GAAYjS,EAAQ4G,OAAOgL,EAAYjL,KACvC0L,EAAmBrS,EAAQsS,cAAcL,EAAWxR,GACpDkS,EAAc3S,EAAQ6G,gBAAgBwL,EAAkBrS,EAAQgC,OAChEuQ,EAAcI,EAAY5L,KAC9BnL,GAAE0H,KAAK9B,EAAM,SAAS8K,EAAK3F,GACpB4L,IACHA,MAEFA,EAAY/W,KAAKmL,GACjBgM,EAAY1L,IAAIsL,MAlEgD,IAsEhEM,GAAQ,EACRC,EAASlX,EAAEmX,MAAMnX,EAAE8S,OAAOhH,EAAcL,OAAQzG,UAAY,UAAW,OACvEoS,EAAOlV,WAAWO,IAAI,yBAA0B,SAASuP,EAAOjH,GAClE,GAAI3E,GAAQhC,EAAQ6G,gBAAgB7G,EAAQ4G,OAAOc,EAAcf,KAAM3G,EAAQgC,OAAO+E,KACtF,IAAI/E,EAAO,CACT,GAAI8G,GAAQ9G,EAAMrB,OAAUmS,EAAOnS,MAInC,IAHI/E,EAAEmF,SAAS+R,EAAQnM,IACrBkM,IAEEA,IAAU/J,EAAO,CACnB,IAAK,GAAIrI,GAAI,EAAGA,EAAIuB,EAAMrB,OAAQF,IAChC6D,EAAQ,KAAM,KAAM,IAAM7D,EAAI,IAEhCoS,GAAQ,MAIVI,EAAanV,WAAWO,IAAI,sBAAuB,WACrDwU,EAAQ,GAIV,OAFA7S,GAAQuD,OAAO/H,KAAKwX,GACpBhT,EAAQuD,OAAO/H,KAAKyX,GACb3O,EAGT,QAASwN,oBAAmBpK,EAAekK,EAAa5R,GACtD,GAAIsE,GAAU,WACZ,GAAI2N,GAAYjS,EAAQ4G,OAAOgL,EAAYjL,IAC3C/K,GAAE0H,KAAKoE,EAAcL,MAAO,SAAS0K,GACnC,GAAIpL,GAAM3G,EAAQ4G,OAAOmL,EAAKpL,KAC1BuL,EAAWC,WAAWC,MAAMzL,EAChC,IAAIsL,IAActL,EAAlB,CACA,GAAI4L,GAAcvS,EAAQ6G,gBAAgBoL,EAAWjS,EAAQgC,OAAO+E,KAChEnL,GAAEmF,SAASwR,EAAaL,EAASA,EAASvR,OAAS,IACrDoR,EAAKnR,UAAY,QAEjBmR,EAAKnR,UAAY,QACjBZ,EAAQ6G,gBAAgBF,EAAK3G,EAAQgC,OAAOiF,WAK9CgL,EAAYjS,EAAQ4G,OAAOgL,EAAYjL,KACvCgM,EAAc3S,EAAQ6G,gBAAgBoL,EAAWjS,EAAQgC,OACzDuQ,EAAcI,EAAY5L,KAC9BnL,GAAE0H,KAAKoE,EAAcL,MAAO,SAAS0K,GACnC,GAAIpL,GAAM3G,EAAQ4G,OAAOmL,EAAKpL,IAC9B,IAAIsL,IAActL,EAAlB,CACA,GAAIuL,GAAWC,WAAWC,MAAMzL,GAC5BiM,EAAY5S,EAAQ6G,gBAAgBF,EAAK3G,EAAQgC,OAAO+E,KACxD6L,KAAchX,EAAEmF,SAASwR,EAAaL,EAASA,EAASvR,OAAS,MAC9D4R,IACHA,MAEFA,EAAY/W,KAAK0W,EAASA,EAASvR,OAAS,IAC5CgS,EAAY1L,IAAIsL,MA9B2C,IAkC3DlN,GAAWrF,EAAQkD,UAAUwE,EAAcf,KAAhC3G,UACfpE,GAAE0H,KAAK+B,EAAU,SAASiH,EAAK3F,GACxB4L,IACHA,MAEFA,EAAY/W,KAAKmL,GACjBgM,EAAY1L,IAAIsL,IAxC6C,IA2C3DvQ,GAAQhC,EAAQ6G,gBAAgBa,EAAcf,IAAK3G,EAAQgC,MAK/D,OAJIqD,KAAarD,EAAM+E,OACrB/E,EAAMiF,IAAI5B,GAGLf,EAGT,QAAS+B,oBAAmB6M,GAC1B,GAAIlT,GAAUvC,IACduC,GAAQ2N,cAAgB/R,EAAEuX,SAAS,SAASC,GAC1C,GAAIzN,GAAS/J,EAAEyX,OAAO5X,iBAAiBE,iBAAkBqE,EAAQ2F,QAC7D2N,EAAOxO,OAAOwO,KAAKtT,EAAQc,OAAO6E,OAAQA,GAAQ,EAEtD,IAAG2N,GAAQF,EAAO,CAChB,GAAItL,GAAOlM,EAAEkM,KAAKwL,EAEfxL,GAAKnH,OAAS,IACf2S,EAAO1X,EAAEE,KAAKwX,EAAM1X,EAAEK,QACtB6L,EAAOlM,EAAEkM,KAAKwL,IALA3N,EAYTxC,aAAevH,EAAE6K,MAAMqB,GAE1BnC,EAAOxC,eACTmQ,EAAOxO,OAAOwO,KAAK3N,EAAQ/J,EAAEE,KAAKkE,EAAQc,OAAO6E,OAAQ,iBACzDmC,EAAOlM,EAAEkM,KAAKwL,GAFS3N,EAKhBxC,aAAevH,EAAE6K,MAAMqB,IAGhCoL,EAAQvN,GAAQ4N,KAAK,SAASzS,KAC1Bd,EAAQ0F,QAD0B1F,EAG5BwT,qBAAqB1S,OAGhC,KAEHd,EAAQyT,YAAc7X,EAAEuX,SAAS,WAC/BD,EAAQtX,EAAEyX,OAAOrT,EAAQc,OAAO6E,QAASxC,aAAc,iBAAiBoQ,KAAK,SAASzS,GACpFd,EAAQwT,qBAAqB1S,GAC7B3D,QAAQC,IAAI,yBAA0B4C,EAAQc,OAAO6E,WAEtD,KAEH3F,EAAQuD,OAAO/H,KAAKsC,WAAWO,IAAI,gBAAiB2B,EAAQyT,cAG9D,QAASD,sBAAqB1S,GAC5B,GAAId,GAAUvC,IACd,IAAGqD,EAAOwS,KAAM,CACdtT,EAAQc,OAAO6E,OAAS7E,EAAO6E,OAE5B7E,EAAOwS,KAAKnE,MACbvT,EAAE0H,KAAKxC,EAAOwS,KAAKnE,KAAM,SAASA,EAAMxI,GACtC3G,EAAQc,OAAOqO,KAAKxI,GAAOwI,EAC3BhS,QAAQC,IAAI,qCAAsCuJ,EAAK3G,EAAQyF,gBAAgBkB,IAC5E3G,EAAQyF,gBAAgBkB,IACzB/K,EAAE0H,KAAKtD,EAAQyF,gBAAgBkB,GAAM,SAAS+M,GAC5CvW,QAAQC,IAAI,kBAAmBsW,EAAUvE,GACzCuE,EAASlT,MAAMkT,EAAS/M,KAAOwI,KAMvC,IAAIrH,KAEDhH,GAAOwS,KAAKxS,QACblF,EAAE0H,KAAKxC,EAAOwS,KAAKxS,OAAQ,SAASA,EAAQ6F,GAC1C3G,EAAQc,OAAOA,OAAOsI,WAAWzC,GAAO7F,EACxC6S,gBAAgB7S,EAAQ6F,EAAKmB,KAI9BhH,EAAOwS,KAAKjS,MACbzF,EAAE0H,KAAKxC,EAAOwS,KAAKjS,KAAM,SAASA,GAEF,KAA3ByG,EAAK8L,QAAQvS,EAAKsF,MACnBmB,EAAKtM,KAAK6F,EAAKsF,IAHqB,IAOlCA,GAAMtF,EAAKsF,UACRtF,GAAKsF,GAEZ,IAAIkN,GAAS7T,EAAQkO,iBAAiBvH,EACnCkN,IACDC,eAAeD,EAAQxS,EAEzB,IAAI0S,GAAS/T,EAAQiO,eAAetH,EACjCoN,IACDnY,EAAE0H,KAAKyQ,EAAQ,SAAS7M,GACtB4M,eAAe5M,EAAM7F,OAM1ByG,EAAKnH,QACN/E,EAAE0H,KAAKwE,EAAM,SAASnB,GACpB,GAAItF,GAAOrB,EAAQkO,iBAAiBvH,EAEpC,IADGtF,GAAMrB,EAAQ6F,aAAaxE,GAC3BsF,EAAI5F,SAAS,MAAO,CACrB,GAAIgT,GAAS/T,EAAQiO,eAAetH,EACpC/K,GAAE0H,KAAKyQ,EAAQ,SAAS7M,GACnBA,GAAMlH,EAAQ6F,aAAaqB,QAMtClH,EAAQiG,sBAGRjG,GAAQmD,aAAarC,GAIzB,QAASgT,gBAAeE,EAAS9I,EAAQ+I,GACvCrY,EAAEyX,OAAOW,EAASpY,EAAEE,KAAKoP,EAAQ,QAAS,QAE1CtP,EAAE0H,KAAK0Q,EAAQpM,QAAS,SAASjB,GAC3BuE,EAAOvE,UAAaqN,GAAQrN,KAElCqN,EAAQpM,QAAUhM,EAAEkM,KAAKoD,IASrB+I,GAAWD,EAAQE,QAAQF,EAAQE,SAGzC,QAASP,iBAAgB7S,EAAQ6F,EAAKmB,GACpCA,EAAKtM,KAAKmL,GACP7F,EAAOsI,YACRxN,EAAE0H,KAAKxC,EAAOsI,WAAY,SAAStI,EAAQqT,GACzCR,gBAAgB7S,EAAQ6F,EAAM,IAAMwN,EAAQrM,KAG7ChH,EAAOuG,OAASvG,EAAOuG,MAAM+B,YAC9BxN,EAAE0H,KAAKxC,EAAOsI,WAAY,SAAStI,EAAQqT,GACzCR,gBAAgB7S,EAAQ6F,EAAM,MAAQwN,EAAQrM,KAKpD,QAASc,YAAWpI,GAClB,GAAIR,GAAUvC,KACVkJ,EAAM3G,EAAQ4G,OAAOpG,EAAMmG,IAC/B,QACEA,IAAKA,EACLyN,QAAS5T,EAAMmI,OAInB,QAAS1C,mBACP,GAAIjG,GAAUvC,IACdoH,UAAS,WACP7E,EAAQsF,OAAO+G,QAAQ,SAAS1D,GAC9B7K,WAAWuW,WAAW,oBAAsB1L,EAAMhC,IAAK,mBAAoBgC,EAAMyL,YAElF,GAGL,QAASpJ,mBAAkBrL,EAASgH,GAClC,GAAI2N,GAAgB,wBAAwBC,KAAK5U,GAC7C6U,EAAK,GAAIC,QAAOH,EAAc,GAAK,gBACnCxG,EAAQ0G,EAAGD,KAAK5N,EACpB,OAAOhH,GAAQuJ,QAAQoL,EAAc,GAAIxG,EAAM,IAGjD,QAASkE,eAAcrL,GACrB,MAAI/K,GAAEgR,SAASjG,GACN/K,EAAEqU,KAAKtJ,EAAIA,IAAK,SAASA,GAC9B,MAAO/K,GAAE4G,SAASmE,KAGb,YAAY4N,KAAK5N,GAAK,GAIjC,QAAS2L,eAAc3L,EAAKmH,EAAO4G,GACjC,GACIC,GADA3U,EAAUvC,IAGZkX,GADE/Y,EAAE2M,SAAS5B,GACHwL,WAAWC,MAAMzL,GAEjB/K,EAAEgZ,MAAMjO,EAEpB,IAAIkO,GAAeF,EAAQf,QAAQ,GAGnC,OAFAe,GAAQE,GAAgB/G,EAEpB4G,EACKC,EAEA3U,EAAQ4G,OAAO+N,GAI1B,QAAStR,WACP,GAAIrD,GAAUvC,IACd7B,GAAE0H,KAAKtD,EAAQuD,OAAQ,SAASC,GAC9BA,MA52CJ,GAAIwB,YA6FJ,OApDApJ,GAAEyX,OAAOpO,WAAW6P,WAClB9R,QAASA,QACT6K,aAAcA,aACdM,eAAgBA,eAChBpG,eAAgBA,eAChB9B,gBAAiBA,gBACjB2C,WAAYA,WACZvF,QAASA,QACT8J,mBAAoBA,mBACpBc,eAAgBA,eAChBG,iBAAkBA,iBAClBF,iBAAkBA,iBAClBtH,OAAQA,OACR1D,UAAWA,UACXyG,cAAeA,cACf3D,mBAAoBA,mBACpBD,eAAgBA,eAChByH,iBAAkBA,iBAClBzK,WAAYA,WACZkH,oBAAqBA,oBACrBsD,aAAcA,aACdpD,eAAgBA,eAChBtD,gBAAiBA,gBACjBH,eAAgBA,eAChB0K,eAAgBA,eAChBvL,aAAcA,aACdsB,gBAAiBA,gBACjBiB,kBAAmBA,kBACnBE,iBAAkBA,iBAClBqG,gBAAiBA,gBACjBK,kBAAmBA,kBACnBS,YAAaA,YACbyB,YAAaA,YACb9B,oBAAqBA,oBACrBH,gBAAgBA,gBAChB3I,cAAeA,cACfqB,qBAAsBA,qBACtBO,eAAgBA,eAChBG,eAAgBA,eAChBqH,cAAeA,cACfoB,gBAAiBA,gBACjBE,cAAeA,cACfwC,qBAAsBA,qBACtBtE,mBAAoBA,mBACpBpC,sBAAuBA,sBACvBpE,gBAAiBA,gBACjBmB,gBAAiBA,gBACjByI,cAAeA,cACf1M,YAAaA,YACbS,mBAAoBA,qBAGftB,sBA/JT7J,QACKC,OAAO,gBACPkB,SAAS,oBAAqB8H,0BAEnC,IAAII,oBACFwQ,kBAAmB,sBACnBC,kBAAmB,gBACnBC,oBAAqB,cACrB9D,KAAQ,cACR+D,aAAc,iBACdC,cAAe,kBACfC,gBAAiB,oBACjBC,iBAAkB,qBAClBC,cAAe,kBACfC,YAAa,gBACbjH,QAAW,iBAGbnK,2BAA0BhI,SACxB,+BACA,2BAsCFsI,kBAAkBtI,SAChB,MAAO,SAAU,mBAAoB,kBACrC,eAAgB,aAAc,WAAY,aC9D9C,WACE,YADU,SAQDqZ,KAAkB,QAchBzX,KACPZ,QAAQC,IAAI,mBAGd,QAASqY,KACP,GAAGjY,EAAGkY,UAAW,CACf,GAAI5U,GAAS5F,QAAQya,SAASnY,EAAGkY,UACjCvY,SAAQC,IAAI,UAAW0D,IACnBA,EAAOO,MAAQP,EAAO2B,QACxB3B,EAAOO,KAAOP,EAAO2B,MAAM,GAAGpB,MAEhC7D,EAAGf,OAAOqE,OAASA,EAAOO,MAAQP,GAvBtC,GAAItD,GAAKC,IAETD,GAAGO,SAAWA,EACdP,EAAGiY,SAAWA,EACdjY,EAAGwE,SACHxE,EAAGf,UACHe,EAAGkY,UAAY,GAEf3X,IAfF7C,QACKC,OAAO,gBACPyB,WAAW,kBAAmB4Y,MCLrC,WACE,YAQA,SAASI,GAAiBzR,GACxB,GAAI0R,IACF,cACA,YACA,oBACA,kBACA,2BACA,cACA,kBACA,gBACA,aACA,iBACA,cAGFja,GAAE0H,KAAKuS,EAAY,SAASC,GAC1B3R,EAA0BE,eACxBxD,KAAMiV,EACN5R,YAAa,qCAAuC4R,EAAY,YAOtE,QAASC,GAAaC,GACpBA,EAAeC,IACX,mDACA,4zBAqBJD,EAAeC,IACX,2DACA,4yBAuBJ,IAAIC,GAAwB;AAwC5BF,EAAeC,IACX,yDACA,0SAMMC,EAAwB,kGAMlCF,EAAeC,IACX,kEACA,s/BAoBMC,EAAwB,kGAMlCF,EAAeC,IACX,qDACA,wsCA+BJD,EAAeC,IACX,yDACA,2oCA0BJD,EAAeC,IACX,uDACA,wpCA8BJD,EAAeC,IACX,oDACA,wWAYJD,EAAeC,IACX,qDACA,6wBAmBJD,EAAeC,IACX,wDACA,o7BAuBJD,EAAeC,IACX,qDACA,+4BA7TN/a,QAAQC,OAAO,gBACVsB,OAAOmZ,GACPO,IAAIJ,GAETH,EAAiBzZ,SAAW,6BAyB5B4Z,EAAa5Z,SAAW","file":"all.min.js","sourcesContent":["(function() {\n  'use strict';\n  angular.module('cn.flex-form', [\n    'ui.router',\n    'schemaForm',\n    'ui.bootstrap.datetimepicker',\n    'cnTagsInput',\n    'cn.util'\n  ]);\n})();","(function() {\n  'use strict';\n  angular\n      .module('cn.flex-form')\n      .provider('cnFlexFormConfig', cnFlexFormConfigProvider);\n\n  function cnFlexFormConfigProvider() {\n\n    cnFlexFormConfig.$inject = ['$stateParams'];\n\n    var ignoreParams = ['page', 'debug', 'sandbox', 'modal', 'modalId'];\n\n    return {\n      addIgnoreParam: addIgnoreParam,\n      $get: cnFlexFormConfig\n    };\n\n    ////////\n\n    function addIgnoreParam(param) {\n      ignoreParams.push(param);\n    }\n\n    function cnFlexFormConfig($stateParams) {\n      return {\n        getStateParams: getStateParams,\n        ignoreParams: ignoreParams\n      };\n\n      ////////\n\n      function getStateParams() {\n        return _\n            .chain($stateParams)\n            .omit(ignoreParams)\n            .omit(function(v) {\n              return _.isUndefined(v) || _.isNull(v);\n            })\n            .value();\n      }\n    }\n\n  }\n\n})();","(function () {\n  'use strict';\n\n  angular\n    .module('cn.flex-form')\n    .directive('cnFlexFormHeader', cnFlexFormHeader);\n\n  function cnFlexFormHeader() {\n    return {\n      restrict: 'E',\n      scope: {\n        config: '=ffHeaderConfig',\n        submit: '&ffSubmit',\n        loadOffscreen: '&ffLoadOffscreen'\n      },\n      controller: FlexFormHeader,\n      bindToController: true,\n      controllerAs: 'vm',\n      template: '<div class=\"col-md-6\">\\\n                  <h5 ng-if=\"vm.config.title.lead\">{{::vm.config.title.lead}}</h5>\\\n                  <h1>{{vm.config.title.main}}</h1>\\\n                  <h5 ng-if=\"vm.config.title.sub\">{{::vm.config.title.sub}}</h5>\\\n                </div>\\\n                <div class=\"{{vm.config.buttonContainerClass}}\">\\\n                  <div class=\"btn-options\"\\\n                       ng-mouseover=\"vm.loadOffscreen()\">\\\n                    <a class=\"btn\" ui-sref=\"{{vm.config.actionConfig.returnState}}\">\\\n                      {{vm.config.actionConfig.returnText || \\'Cancel\\'}}\\\n                    </a>\\\n                    <span ng-repeat=\"button in vm.config.actionConfig.actions\">\\\n                      <a class=\"btn {{button.style && \\'btn-\\'+button.style}}\"\\\n                         ng-disabled=\"vm.isDisabled(button)\"\\\n                         ng-class=\"{\\'btn-primary\\': $index === vm.config.actionConfig.actions.length - 1}\"\\\n                         ng-click=\"vm.submit({ handler: button.handler})\"\\\n                         tooltip=\"{{button.helptext}}\"\\\n                         tooltip-placement=\"bottom\">\\\n                        {{button.text || \\'Save\\'}}\\\n                      </a>\\\n                    </span>\\\n                  </div>\\\n                  <p class=\"data-updated-at text-right\" id=\"data-updated-at\">\\\n                    <a ng-click=\"vm.updateData()\">Update Data</a>\\\n                  </p>\\\n                </div>\\\n                '\n    };\n  }\n\n  FlexFormHeader.$inject = ['$scope'];\n  function FlexFormHeader($scope) {\n    var vm = this;\n\n    vm.updateData = updateData;\n    vm.isDisabled = isDisabled;\n\n    ///////////\n\n    function updateData() {\n      console.log('updateData:', updateData);\n      $scope.$emit('ffRefreshData');\n    }\n\n    function isDisabled(btnConfig) {\n      if(vm.config.isDisabled) return vm.config.isDisabled(btnConfig);\n      return false;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n      .module('cn.flex-form')\n      .controller('FlexFormModalLoader', FlexFormModalLoader)\n      .factory('FlexFormModal', FlexFormModal);\n\n  FlexFormModalLoader.$inject = [\n    'FlexFormModal', '$state', '$rootScope', '$stateParams'\n  ];\n  function FlexFormModalLoader(FlexFormModal, $state, $rootScope, $stateParams) {\n\n    var vm = this;\n    console.log('FlexFormModalLoader:', $stateParams.modal);\n\n    activate();\n\n    //////////\n\n    function activate() {\n      vm.modal = FlexFormModal.open(vm);\n      vm.modal.result.finally(goBack);\n\n      vm.dismiss = $rootScope.$on('$stateChangeStart', dismissModal);\n    }\n\n    function goBack() {\n      $state.go('^');\n    }\n\n    function dismissModal() {\n      vm.dismiss();\n      vm.modal.dismiss();\n    }\n  }\n\n  FlexFormModal.$inject = ['cnFlexFormModalLoaderService', '$modal', '$stateParams'];\n  function FlexFormModal(cnFlexFormModalLoaderService, $modal, $stateParams) {\n\n    var instance = {\n      open: openModal\n    };\n\n    return instance;\n\n    function openModal() {\n      var currentModal = cnFlexFormModalLoaderService.getMapping($stateParams.modal);\n      console.log('currentModal:', currentModal);\n\n      this.modal = $modal.open(currentModal);\n      return this.modal;\n    }\n\n  }\n\n})();\n","(function() {\n  'use strict';\n\n  angular\n      .module('cn.flex-form')\n      .provider('cnFlexFormModalLoaderService', cnFlexFormModalLoaderServiceProvider);\n\n  var modalMap = {};\n  var promiseMap = {};\n\n  function getPromises(state) {\n    var promises = promiseMap[state];\n    if(!promises) {\n      promises = {};\n      promiseMap[state] = promises;\n    }\n    return promises;\n  }\n\n  function getPromise(state, id, $q) {\n    var promises = getPromises(state);\n    var promise = promises[id];\n    if(!promise) {\n      promise = $q.defer();\n      promises[id] = promise;\n    }\n    return promise;\n  }\n\n  function cnFlexFormModalLoaderServiceProvider() {\n\n    var provider = {\n      addMapping: addMapping,\n      $get: cnFlexFormModalLoaderService\n    };\n\n    parent.$inject = ['$stateParams', '$q'];\n\n    return provider;\n\n    ////////////\n\n    function addMapping(state, def) {\n      def.resolve = {\n        parent: parent\n      };\n      modalMap[state] = def;\n    }\n\n    function parent($stateParams, $q) {\n      return getPromise($stateParams.modal, $stateParams.modalId, $q).promise;\n    }\n  }\n\n  cnFlexFormModalLoaderService.$inject = ['$q'];\n\n  function cnFlexFormModalLoaderService($q) {\n    var service = {\n      getMapping: getMapping,\n      resolveMapping: resolveMapping\n    };\n\n    return service;\n\n    /////////////\n\n    function resolveMapping(state, id, parent) {\n      getPromise(state, id, $q).resolve(parent);\n    }\n\n    function getMapping(state) {\n      return modalMap[state];\n    }\n  }\n\n})();","(function() {\n  'use strict';\n  angular\n      .module('cn.flex-form')\n      .provider('cnFlexFormTypes', cnFlexFormTypesProvider);\n\n  function cnFlexFormTypesProvider() {\n\n    var fieldTypeRegister = [{\n      condition: function(field) {\n        return field.type === 'hidden';\n      },\n      type: 'hidden'\n    }, {\n      condition: function(field) {\n        return field.type.includes('radiobuttons');\n      },\n      type: 'cn-radiobuttons'\n    }, {\n      condition: function(field) {\n        return field.type.includes('autocomplete') || field.titleMap || field.titleMapResolve || field.titleMapQuery;\n      },\n      type: 'cn-autocomplete'\n    }, {\n      condition: function(field) {\n        return field.type === 'cn-datetimepicker' || field.type === 'datetime-local';\n      },\n      type: 'cn-datetimepicker'\n    }, {\n      condition: function(field) {\n        return field.type === 'help';\n      },\n      type: 'help'\n    }, {\n      condition: function(field) {\n        return field.type.includes('display');\n      },\n      type: 'cn-display'\n    }, {\n      condition: function(field) {\n        return field.schema && field.schema.format && field.schema.format.includes('currency');\n      },\n      type: 'cn-currency'\n    }, {\n      condition: function(field) {\n        return field.schema && field.schema.format === 'percentage';\n      },\n      type: 'cn-percentage'\n    }, {\n      condition: function(field) {\n        return field.type === 'boolean';\n      },\n      type: 'cn-toggle'\n    }, {\n      condition: function(field) {\n        return field.type === 'mediaupload';\n      },\n      type: 'cn-mediaupload'\n    }, {\n      condition: function(field) {\n        return field.type === 'reusable';\n      },\n      type: 'cn-reusable'\n    }, {\n      condition: function(field) {\n        return field.type === 'array';\n      },\n      type: 'section'\n    }];\n\n    return {\n      registerFieldType: registerFieldType,\n      $get: cnFlexFormTypes\n    };\n\n    ////////\n\n    function registerFieldType(fieldType) {\n      fieldTypeRegister.unshift(fieldType);\n    }\n\n    function cnFlexFormTypes() {\n      return {\n        fieldTypeRegister: fieldTypeRegister,\n        getFieldType: getFieldType\n      };\n\n      /////////\n\n      function getFieldType(field) {\n        for(var i = 0, l = fieldTypeRegister.length; i < l; i++) {\n          if(fieldTypeRegister[i].condition(field)) {\n            return fieldTypeRegister[i].type;\n          }\n        }\n        return field.type || field.schema && field.schema.type;\n      }\n    }\n\n  }\n\n})();","(function() {\n  'use strict';\n  angular\n      .module('cn.flex-form')\n      .directive('ffValidate', ffValidate);\n\n  function ffValidate() {\n    return {\n      restrict: 'A',\n      scope: { form: '=ffValidate' },\n      require: 'ngModel',\n      link: link\n    };\n  }\n\n  function link($scope, elem, attrs, ngModel) {\n    //console.log('$scope, ngModel:', $scope.form, ngModel);\n    if($scope.form && $scope.form.required) {\n      $scope.$watch(function() { return ngModel.$viewValue; }, function(value) {\n        // override schemaForm validation\n        ngModel.$setValidity('schemaForm', true);\n        ngModel.$setValidity('tv4-302', value);\n      });\n    }\n  }\n})();","(function() {\n  'use strict';\n  angular\n      .module('cn.flex-form')\n      .directive('cnFlexForm', cnFlexForm);\n\n  function cnFlexForm() {\n    return {\n      restrict: 'E',\n      template: '\\\n        <div ng-if=\"vm.showForm()\">\\\n          <ng-form name=\"{{vm.formName}}\"\\\n                sf-schema=\"vm.config.schema.schema\"\\\n                sf-form=\"vm.form\"\\\n                sf-model=\"vm.model\"></ng-form>\\\n          <!-- debug panel to display model -->\\\n          <pre ng-if=\"vm.debug\">{{vm.model|json}}</pre>\\\n        </div>\\\n      ',\n      scope: {\n        config: '=ffConfig',\n        model: '=ffModel',\n        formIndex: '=ffFormIndex',\n        formName: '=ffFormName',\n        delayForm: '=ffDelayForm',\n        cleanupEvent: '=ffCleanupEvent'\n      },\n      controller: FlexForm,\n      controllerAs: 'vm',\n      bindToController: true\n    };\n  }\n\n  FlexForm.$inject = ['cnFlexFormService', '$scope', '$location'];\n  function FlexForm(cnFlexFormService, $scope, $location) {\n    var vm = this;\n    vm.service = undefined;\n    vm.events = [];\n\n    vm.activate = activate;\n    vm.cleanup = cleanup;\n    vm.process = process;\n    vm.showForm = showForm;\n\n    vm.events.push($scope.$watch(function() { return vm.config.schema; }, vm.process));\n\n    vm.activate();\n\n    $scope.$on(vm.cleanupEvent || '$destroy', vm.cleanup);\n\n    //////////\n\n    function activate() {\n      //console.log('vm.formName:', vm.formName);\n      if(angular.isNumber(vm.formIndex)) {\n        vm.form = vm.config.schema.forms[vm.formIndex].form;\n      }\n      else {\n        vm.form = vm.config.schema.form;\n      }\n\n      // debug\n      if($location.search().debug) {\n        vm.debug = true;\n      }\n    }\n\n    function process(cur, prev) {\n      //console.log('process:', cur, prev);\n      if(vm.form) {\n        if(!vm.service) {\n          vm.service = cnFlexFormService(vm.config.schema, vm.model, {\n            formCtrl: vm.config.formCtrl,\n            getSchema: vm.config.getSchema,\n            updateSchema: updateSchema\n          });\n        }\n        else {\n          console.log('vm.service.isCompiled():', vm.service.isCompiled());\n          vm.service.compile(vm.config.schema, vm.model);\n        }\n        //$scope.$broadcast('schemaFormRedraw');\n      }\n    }\n\n    function showForm() {\n      //console.log('showForm:', vm.delayForm, vm.formName);\n      return !vm.delayForm && vm.service && vm.service.isCompiled();\n    }\n\n    function updateSchema(schema) {\n      vm.config.schema = schema;\n      vm.activate();\n    }\n\n    function cleanup() {\n      _.each(vm.events, function(listener) {\n        listener();\n      });\n      vm.service.cleanup();\n    }\n\n  }\n})();","(function() {\n  angular\n      .module('cn.flex-form')\n      .provider('cnFlexFormRoutes', cnFlexFormRoutesProvider)\n      .config(cnFlexFormRoutes);\n\n  cnFlexFormRoutesProvider.$inject = ['$stateProvider'];\n  function cnFlexFormRoutesProvider($stateProvider) {\n    var provider = {\n      addStates: addStates,\n      $get: $get\n    };\n\n    return provider;\n\n    ////////////\n\n    function $get() {\n      // nothing to do here, but required\n    }\n\n    function addStates(options) {\n      $stateProvider\n          .state(options.name + '.page.modal', {\n            url: '/~:modal/:modalId',\n            controller: 'FlexFormModalLoader',\n            controllerAs: 'vm',\n            permissions: options.permissions\n          });\n    }\n  }\n\n  cnFlexFormRoutes.$inject = ['$stateProvider'];\n  function cnFlexFormRoutes($stateProvider) {\n\n    $stateProvider\n        .state('flex-form-sandbox', {\n          url: '/flex-form/sandbox',\n          controller: 'FlexFormSandbox',\n          controllerAs: 'vm',\n          templateUrl: 'app/components/cn-flex-form/sandbox.html'\n        });\n  }\n\n})();","(function() {\n  'use strict';\n  angular\n      .module('cn.flex-form')\n      .provider('cnFlexFormService', cnFlexFormServiceProvider);\n\n  var fieldTypeHandlers = {\n    'cn-radiobuttons': 'processRadiobuttons',\n    'cn-autocomplete': 'processSelect',\n    'cn-datetimepicker': 'processDate',\n    'help': 'processHelp',\n    'cn-display': 'processDisplay',\n    'cn-currency': 'processCurrency',\n    'cn-percentage': 'processPercentage',\n    'cn-mediaupload': 'processMediaUpload',\n    'cn-reusable': 'processReusable',\n    'cn-toggle': 'processToggle',\n    'section': 'processSection'\n  };\n\n  cnFlexFormServiceProvider.$inject = [\n    'schemaFormDecoratorsProvider',\n    'cnFlexFormTypesProvider'\n  ];\n\n  function cnFlexFormServiceProvider(schemaFormDecoratorsProvider,\n                                     cnFlexFormTypesProvider) {\n    return {\n      registerField: registerField,\n      $get: CNFlexFormService\n    };\n\n    //////////\n\n    function registerField(fieldType) {\n      if(fieldType.condition) {\n        cnFlexFormTypesProvider.registerFieldType({\n          condition: fieldType.condition,\n          type: fieldType.type\n        });\n      }\n\n      if(fieldType.handler) {\n        fieldTypeHandlers[fieldType.type] = fieldType.handler;\n      }\n\n      if(fieldType.templateUrl) {\n        schemaFormDecoratorsProvider.addMapping(\n            'bootstrapDecorator',\n            fieldType.type,\n            fieldType.templateUrl\n        );\n        schemaFormDecoratorsProvider.createDirective(\n            fieldType.type,\n            fieldType.templateUrl\n        );\n      }\n    }\n  }\n\n  CNFlexFormService.$inject = [\n    'Api', '$parse', 'cnFlexFormConfig', 'cnFlexFormTypes',\n    '$interpolate', '$rootScope', '$timeout', 'cnUtil'\n  ];\n\n  function CNFlexFormService(Api, $parse, cnFlexFormConfig, cnFlexFormTypes,\n                             $interpolate, $rootScope, $timeout, cnUtil) {\n\n    var services = [];\n\n    function CNFlexFormConstructor(schema, model, config) {\n      var service;\n      if(services.length) {\n        for(var i = 0, l = services.length; i < l; i++) {\n          if(services[i].model === model) {\n            service = services[i];\n            //console.log('service.compile:', service.compile);\n            service.compile(schema, model, config);\n            break;\n          }\n        }\n        //console.log('services1:', services, service);\n      }\n      if(!service) {\n        service = new CNFlexForm(schema, model, config);\n        services.push(service);\n        //console.log('services2:', services, service);\n      }\n      return service || new CNFlexForm(schema, model, config);\n    }\n\n    function CNFlexForm(schema, model, config) {\n      this.arrayCopies = {};\n      this.arrayListeners = {};\n      this.dataCache = {};\n      this.defaults = {};\n      this.errors = [];\n      this.events = [];\n      this.formCache = {};\n      this.listeners = {};\n      this.resolveRegister = {};\n      this.model = model;\n      this.updates = 0;\n\n      this.params = cnFlexFormConfig.getStateParams();\n\n      this.compile(schema, model, config);\n    }\n\n    _.extend(CNFlexForm.prototype, {\n      compile: compile,\n      addArrayCopy: addArrayCopy,\n      addToDataCache: addToDataCache,\n      addToFormCache: addToFormCache,\n      broadcastErrors: broadcastErrors,\n      buildError: buildError,\n      cleanup: cleanup,\n      deregisterHandlers: deregisterHandlers,\n      getArrayCopies: getArrayCopies,\n      getFromDataCache: getFromDataCache,\n      getFromFormCache: getFromFormCache,\n      getKey: getKey,\n      getSchema: getSchema,\n      handleResolve: handleResolve,\n      initArrayCopyWatch: initArrayCopyWatch,\n      initModelWatch: initModelWatch,\n      initSchemaParams: initSchemaParams,\n      isCompiled: isCompiled,\n      isConditionFunction: isConditionFunction,\n      onModelWatch: onModelWatch,\n      parseCondition: parseCondition,\n      parseExpression: parseExpression,\n      processDefault: processDefault,\n      processDisplay: processDisplay,\n      processField: processField,\n      processFieldset: processFieldset,\n      processFieldWatch: processFieldWatch,\n      processComponent: processComponent,\n      processCurrency: processCurrency,\n      processPercentage: processPercentage,\n      processDate: processDate,\n      processHelp: processHelp,\n      processRadiobuttons: processRadiobuttons,\n      processReusable:processReusable,\n      processSchema: processSchema,\n      processSelectDisplay: processSelectDisplay,\n      processResolve: processResolve,\n      processSection: processSection,\n      processSelect: processSelect,\n      processTemplate: processTemplate,\n      processToggle: processToggle,\n      processUpdatedSchema: processUpdatedSchema,\n      processMediaUpload: processMediaUpload,\n      registerArrayHandlers: registerArrayHandlers,\n      registerHandler: registerHandler,\n      registerResolve: registerResolve,\n      setArrayIndex: setArrayIndex,\n      setupConfig: setupConfig,\n      setupSchemaRefresh: setupSchemaRefresh\n    });\n\n    return CNFlexFormConstructor;\n\n    //////////////\n\n    function compile(schema, model, config) {\n      var service = this;\n\n      service.schema = schema;\n      service.model = model;\n\n      //console.log('compile:schema, model:', schema.compiled, service.isCompiled(), schema, model);\n      if(!service.isCompiled()) {\n        service.setupConfig(config);\n\n        if(schema.forms) {\n          _.each(schema.forms, function(form) {\n            _.each(form.form, service.processField.bind(service));\n          });\n        }\n        else {\n          _.each(schema.form, service.processField.bind(service));\n        }\n\n        service.initModelWatch();\n        service.initArrayCopyWatch();\n        service.isCompiled(true);\n      }\n\n      service.broadcastErrors();\n    }\n\n    function isCompiled(setValue) {\n      var service = this;\n      if(setValue) {\n        service.schema.compiled = setValue;\n      }\n      return service.schema && service.schema.compiled;\n    }\n\n    function setupConfig(config) {\n      var service = this;\n      if(config) {\n        if(config.formCtrl) service.formCtrl = config.formCtrl;\n        if(config.updateSchema) service.updateSchema = config.updateSchema;\n        if(config.getSchema) service.getSchemaForm = service.setupSchemaRefresh(config.getSchema);\n      }\n    }\n\n    function processSchema(field) {\n      var service = this,\n          schema = field.schema;\n\n      if(schema) {\n\n        field.getSchemaType = function() {\n          return _.isArray(schema.type) ? _.first(schema.type) : schema.type;\n        };\n\n        service.processDefault(field);\n      }\n    }\n\n    function processDefault(field) {\n      var service = this,\n          schema = field.schema;\n      //console.log('processDefault:', field.key, schema, service.updates);\n      if(schema.default) {\n        var key = service.getKey(field.key);\n        // if schemaUpdate hasn't been triggered, let schemaForm directive handle defaults\n        if(service.updates) {\n          if(key.includes && key.includes('[]')) return;\n          var model = service.parseExpression(field.key, service.model);\n          var modelValue = model.get();\n          // if there's an existing default and it's the same as the current value\n          // update the current value to the new default\n          //console.error('default:', key, modelValue, service.defaults[key], angular.equals(modelValue, service.defaults[key]));\n          if(!service.defaults[key] || _.isUndefined(modelValue) || angular.equals(modelValue, service.defaults[key])) {\n            model.set(schema.default);\n          }\n        }\n        service.defaults[key] = angular.copy(schema.default);\n      }\n    }\n\n    function processFieldset(fieldset) {\n      var service = this;\n\n      fieldset.type = 'cn-fieldset';\n      _.each(fieldset.items, service.processField.bind(service));\n\n      if(fieldset.collapsible) {\n        fieldset.toggleCollapse = function() {\n          if(fieldset.collapsible) {\n            fieldset.collapsed = !fieldset.collapsed;\n          }\n        };\n\n        fieldset.render = !fieldset.collapsed;\n      }\n      else {\n        fieldset.render = true;\n      }\n    }\n\n    function processField(field) {\n      var service = this;\n\n      if (field.selectDisplay) {\n        service.processSelectDisplay(field, service.getSchema(field.key));\n      }\n\n      if(field.type === 'fieldset') {\n        service.processFieldset(field);\n      }\n      else {\n        if(!field._ogKeys) field._ogKeys = _.without(_.keys(field), 'key');\n\n        var key = service.getKey(field.key);\n\n        if(field.key) {\n          service.addToFormCache(field, key);\n          field.schema = service.getSchema(key);\n\n          if(field.schema) {\n            if(field.schema.description) field.description = field.schema.description;\n            if(field.readonly && !field.schema.readonly) field.readonly = false;\n          }\n        }\n\n        service.processSchema(field);\n\n        if(!field.type) field.type = field.getSchemaType && field.getSchemaType();\n\n        if(field.resolve) service.processResolve(field);\n\n        if(field.watch) service.processFieldWatch(field);\n\n        if(field.type === 'section' || field.type === 'tabarray') {\n          service.processSection(field);\n        }\n        else if(field.type === 'component') {\n          service.processComponent(field);\n        }\n        else {\n\n          var fieldType = cnFlexFormTypes.getFieldType(field);\n          var handler = fieldTypeHandlers[fieldType];\n          if(_.isString(handler)) {\n            service[handler](field);\n          }\n          else if(_.isFunction(handler)) {\n            handler.call(service, field);\n          }\n\n          if(field.updateSchema) service.registerHandler(field, null, field.updateSchema);\n          if(field.error) service.errors.push(service.buildError(field));\n        }\n      }\n    }\n\n    function getKey(key) {\n      if(_.isArray(key)) {\n        key = _.reduce(key, function(total, next) {\n          if(/^(\\d*)$/.test(next)) {\n            return total + '[' + next + ']';\n          }\n          return total + '.' + next;\n        });\n      }\n      return key;\n    }\n\n    function getSchema(key, depth) {\n      if(!key) return;\n      var service = this;\n      key = service.getKey(key);\n\n      //console.log('getSchema:', key, depth, service);\n      //key = key.split('.');\n      key = key\n          .replace(/arrayIndex/g, '')\n          .replace(/(\\[')([^.]+)\\.([^.]+)('])/g, '.$2%ff_dt%$3')\n          .replace(/\\./g, '%ff_sp%')\n          .replace(/%ff_dt%/g, '.')\n          .split('%ff_sp%');\n      depth = depth || service.schema.schema.properties;\n\n      var first, matchArray;\n\n      while(key.length > 1) {\n        first = key[0];\n        matchArray = first.match(/\\[\\d*]$/);\n        //if(first.slice(first.length - 2) === '[]') {\n        if(matchArray) {\n          depth = depth[key.shift().slice(0, first.length - matchArray[0].length)].items.properties;\n        }\n        else {\n          depth = depth[key.shift()].properties;\n        }\n      }\n\n      first = key[0];\n      matchArray = first.match(/\\[\\d*]$/);\n\n      if(matchArray) {\n        return depth[first.slice(0, first.length - matchArray[0].length)].items;\n      }\n\n      return depth[first];\n    }\n\n    function processResolve(field) {\n      var service = this;\n\n      _.each(field.resolve, function(dataKey, fieldKey) {\n        service.handleResolve(field, fieldKey, dataKey);\n\n        var resolveType = dataKey.match(/^(schema\\.data\\.|model\\.)(\\w+)/);\n\n        console.log('resolveType:', resolveType);\n        if(resolveType) {\n          if(resolveType[1] === 'schema.data.') {\n            service.registerResolve(field, fieldKey, resolveType[2]);\n          }\n          else if(resolveType[1] === 'model.') {\n            service.registerHandler(resolveType[2], function() {\n              service.handleResolve(field, fieldKey, dataKey);\n            });\n            console.log('service.listeners:', service.listeners);\n          }\n        }\n      });\n\n      return field;\n    }\n\n    function handleResolve(field, fieldKey, exp) {\n      var service = this;\n      field[fieldKey] = service.parseExpression(exp).get();\n    }\n\n    function registerResolve(field, fieldKey, dataKey) {\n      console.log('registerResolve:', field, fieldKey, dataKey);\n      var service = this;\n\n      service.resolveRegister[dataKey] = service.resolveRegister[dataKey] || {};\n      service.resolveRegister[dataKey][service.getKey(field.key)] = {\n        field: field,\n        key: fieldKey\n      };\n    }\n\n    function processFieldWatch(field) {\n      var service = this,\n          schema = field.schema;\n\n      field.watch = _.isArray(field.watch) ? field.watch : [field.watch];\n\n      _.each(field.watch, function(watch) {\n        if(watch.resolution) {\n          var condition = watch.condition;\n          var functionCondition = service.isConditionFunction(condition);\n\n          var resolution = watch.resolution;\n          var handler;\n\n          if(_.isFunction(resolution)) {\n            handler = function() {\n              var parsedCondition = functionCondition ? service.parseCondition(functionCondition) : condition;\n              if(!parsedCondition || $parse(parsedCondition)(service)) {\n                resolution();\n              }\n            };\n          }\n          else {\n            var adjustment = {};\n\n            adjustment.date = resolution.match(/\\+ ?(\\d+) days/);\n\n            if(adjustment.date) {\n              adjustment.date = adjustment.date[1];\n              resolution = resolution.replace(adjustment.date, '').trim();\n            }\n            else {\n              adjustment.math = resolution.match(/(\\+|\\-|\\/|\\*) ?(\\S+)/);\n\n              if(adjustment.math) {\n                adjustment.operator = {\n                  '+': 'add',\n                  '-': 'subtract',\n                  '*': 'multiply',\n                  '/': 'divide'\n                }[adjustment.math[1]];\n\n                //console.log('adjustment:', adjustment);\n                adjustment.adjuster = service.parseExpression(adjustment.math[2]);\n              }\n            }\n\n            resolution = resolution.match(/(\\S+) ?= ?(\\S+)/);\n            //console.log('resolution:', resolution);\n\n            handler = function() {\n              var updatePath, fromPath;\n              if(resolution[1].includes('arrayIndex')) {\n                updatePath = replaceArrayIndex(resolution[1], arguments[2]);\n              }\n              if (resolution[2].includes('arrayIndex')) {\n                fromPath = replaceArrayIndex(resolution[2], arguments[2]);\n              }\n              var update = service.parseExpression(updatePath || resolution[1]);\n              var from = service.parseExpression(fromPath || resolution[2]);\n\n              //console.log('handler:resolution:', field.key, condition, condition && $parse(condition)(service));\n              var parsedCondition = functionCondition ? service.parseCondition(functionCondition) : condition;\n              if(!parsedCondition || $parse(parsedCondition)(service)) {\n                //console.log('update:', update.get(), from.get());\n                if(adjustment.date) {\n                  update.set(moment(from.get()).add(adjustment.date, 'days').toDate());\n                }\n                else if(adjustment.math) {\n                  //var result = _[adjustment.operator](from.get(), adjustment.adjuster.get());\n                  //console.log('_.%s(%s, %s):', adjustment.operator, from.get(), adjustment.adjuster.get(), result);\n                  var result = eval(from.get() + adjustment.math[1] + adjustment.adjuster.get());\n                  //console.log('eval(%s %s %s):', from.get(), adjustment.math[1], adjustment.adjuster.get(), result);\n                  //console.log('result:', result);\n                  //console.log('adjustment.math:', adjustment, from.get(), adjustment.adjuster.get(), result);\n                  //console.log('schema.format:', schema.format);\n                  schema = schema || field.items && (field.items[0].schema || (field.items[0].items && field.items[0].items[0].schema));\n                  if(field.type === 'cn-currency') {\n                    //console.log('schema.format:', schema.format, result);\n                    var p = schema && schema.format === 'currency-dollars' ? 2 : 0;\n\n                    if(adjustment.math[1] === '*') {\n                      result = _.floor(result, p);\n                    }\n                    else if(adjustment.math[1] === '/') {\n                      result = _.ceil(result, p);\n                    }\n                    else {\n                      result = _.round(result, p);\n                    }\n                  }\n                  service.listeners[update.path().key].prev = result;\n                  update.set(result || 0);\n                }\n                else {\n                  update.set(from.get());\n                }\n              }\n            };\n          }\n\n          service.registerHandler(field, handler, field.updateSchema);\n        }\n      });\n    }\n\n    function isConditionFunction(condition) {\n      return condition && condition.match(/(\\!?)(.+)\\((.+)\\)/);\n    }\n\n    function parseCondition(condition) {\n      var service = this,\n          invert = condition[1],\n          functionName = condition[2],\n          functionArgument = condition[3];\n\n      if(functionName === 'any') {\n        var predicate = functionArgument.match(/(.+)\\[\\]\\.*(.*)(===|>|<|>=|<=)(.+)/),\n            arr = service.parseExpression(predicate[1]).get(),\n            comparator = predicate[3],\n            comparisonValue = predicate[4].trim().replace(/'/g, ''),\n            key = predicate[2].trim(),\n            evaluation = false;\n\n        arr.forEach(function(value) {\n          var val = key ? value[key] : value;\n          if(evaluatePredicate(val, comparator, comparisonValue)) {\n            evaluation = true;\n          }\n        });\n\n        return invert ? (!evaluation).toString() : evaluation.toString();\n      }\n    }\n\n    function evaluatePredicate(val1, comparator, val2) {\n      switch(comparator) {\n        case '===': return val1 === val2;\n        case '>=': return val1 >= val2;\n        case '<=': return val1 <= val2;\n        case '>': return val1 > val2;\n        case '<': return val1 < val2;\n      }\n    }\n\n    function registerHandler(key, handler, updateSchema, runHandler) {\n      var service = this;\n\n      // if field is passed instead of key\n      if(_.isObject(key) && !_.isArray(key)) {\n        if(!key.key && key.items) {\n          _.each(key.items, function(field) {\n            service.registerHandler(field, handler, field.updateSchema);\n          });\n          return;\n        }\n        else {\n          key = key.key;\n        }\n      }\n\n      key = service.getKey(key);\n      var arrMatch = key.match(/([^[\\]]*)\\[]\\.?(.+)/);\n\n      if(arrMatch) {\n        service.registerArrayHandlers(arrMatch[1], arrMatch[2], handler, updateSchema, runHandler);\n        return;\n      }\n\n      if(!service.listeners[key]) {\n        var prev = angular.copy(service.parseExpression(key, service.model).get());\n        //console.log('key, prev:', key, prev, prev === service.parseExpression(key, service.model).get());\n        service.listeners[key] = {\n          handlers: [],\n          updateSchema: updateSchema,\n          prev: prev\n        };\n      }\n\n      if(handler) {\n        service.listeners[key].handlers.push(handler);\n        if(runHandler) handler(null, null, key);\n      }\n    }\n\n    function registerArrayHandlers(arrKey, fieldKey, handler, updateSchema, runHandler) {\n      var service = this;\n      var onArray = function(cur, prev) {\n        var i, l, key;\n\n        if(prev && prev > cur) {\n          var lastKey = arrKey + '[' + (prev - 1) + ']' + '.' + fieldKey;\n          // only deregister handlers once each time an element is removed\n          if (service.listeners[lastKey]) {\n            for(i = 0, l = prev; i < l; i++) {\n              key = arrKey + '[' + i + ']' + '.' + fieldKey;\n              service.deregisterHandlers(key);\n            }\n          }\n          for(i = 0, l = cur; i < l; i++) {\n            key = arrKey + '[' + i + ']' + '.' + fieldKey;\n            service.registerHandler(key, handler, updateSchema);\n            if(runHandler) handler(null, null, key);\n          }\n        }\n        else if(cur > (prev || 0)) {\n          for(i = prev, l = cur; i < l; i++) {\n            key = arrKey + '[' + i + ']' + '.' + fieldKey;\n            service.registerHandler(key, handler, updateSchema);\n            if(runHandler) handler(null, null, key);\n          }\n        }\n      };\n\n      var arrVal = service.parseExpression(arrKey, service.model).get();\n      _.each(arrVal, function(field, i) {\n        var key = arrKey + '[' + i + ']' + '.' + fieldKey;\n        service.registerHandler(key, handler, updateSchema);\n        if(runHandler) handler(null, null, key);\n      });\n\n      if(service.arrayListeners[arrKey + '.length']) {\n        service.arrayListeners[arrKey + '.length'].handlers.push(onArray);\n      } else {\n        service.arrayListeners[arrKey + '.length'] = {\n          handlers: [onArray],\n          prev: arrVal ? arrVal.length : 0\n        };\n      }\n    }\n\n    function deregisterHandlers(key) {\n      var service = this;\n      service.listeners[key] = undefined;\n    }\n\n    function initModelWatch() {\n      //console.log('initModelWatch:', initModelWatch);\n      var service = this;\n      if(service.watching) return;\n      if(service.modelWatch) service.modelWatch();\n\n      service.modelWatch = $rootScope.$watch(\n          function() { return service.model; },\n          service.onModelWatch.bind(service),\n          true\n      );\n\n      service.initSchemaParams();\n      service.watching = true;\n    }\n\n    function onModelWatch(cur, prev) {\n      var service = this;\n      if(!angular.equals(cur, prev)) {\n\n        service.prevParams = angular.copy(service.params);\n        service.params = {};\n\n        _.each(service.arrayListeners, function(listener, key) {\n          var val = service.parseExpression(key, service.model).get();\n          if(!angular.equals(val, listener.prev)) {\n            _.each(listener.handlers, function(handler) {\n              handler(val, listener.prev);\n            });\n            listener.prev = angular.copy(val);\n          }\n        });\n\n        _.each(service.listeners, function(listener, key) {\n          //console.log('listener:', key, listener);\n          if(listener) {\n            var val = service.parseExpression(key, service.model).get();\n            if(!angular.equals(val, listener.prev)) {\n              _.each(listener.handlers, function(handler) {\n                handler(val, listener.prev, key);\n              });\n              listener.prev = angular.copy(val);\n            }\n            if(listener.updateSchema && !angular.isUndefined(val) && val !== null) {\n              service.params[key] = val;\n            }\n          }\n        });\n\n        //console.log('service.params, service.prevParams:', service.params, service.prevParams, !angular.equals(service.params, service.prevParams), service.updates);\n        if(!angular.equals(service.params, service.prevParams)) {\n          if(service.model.id && !service.updates && _.isEmpty(service.prevParams)) {\n            ++service.updates;\n          }\n          else {\n            service.refreshSchema();\n          }\n        }\n      }\n    }\n\n    function initSchemaParams() {\n      var service = this;\n      _.each(service.listeners, function(listener, key) {\n        if(listener) {\n          var val = service.parseExpression(key, service.model).get();\n          if(listener.updateSchema && !angular.isUndefined(val) && val !== null) {\n            service.params[key] = val;\n          }\n        }\n      });\n    }\n\n    function initArrayCopyWatch() {\n      var service = this;\n      service.events.push($rootScope.$on('schemaFormPropagateScope', function(event, scope) {\n        //console.log('propagated scope:', service.getKey(scope.form.key), scope);\n        var key = service.getKey(scope.form.key).replace(/\\[\\d+]/g, '[]');\n        if(!scope.form.condition) scope.form.condition = 'true';\n        service.addArrayCopy(scope.form, key);\n        scope.$emit('flexFormArrayCopyAdded', key);\n      }));\n      service.events.push($rootScope.$on('schemaFormDeleteFromArray', function(event, scope, index) {\n        if (scope.form.link) {\n          var list = service.parseExpression(scope.form.link, service.model).get();\n          list.splice(index, 1);\n        }\n      }));\n    }\n\n    function addArrayCopy(form, key) {\n      var service = this;\n      if(!service.arrayCopies[key]) service.arrayCopies[key] = [];\n      service.arrayCopies[key].push(form);\n    }\n\n    function getArrayCopies(key) {\n      var service = this;\n      return service.arrayCopies[key];\n    }\n\n    function addToFormCache(field, key) {\n      var service = this;\n      key = key || service.getKey(field.key);\n      if(!service.getFromFormCache(key)) service.formCache[key] = field;\n    }\n\n    function getFromFormCache(key) {\n      var service = this;\n      return service.formCache[key];\n    }\n\n    function addToDataCache(key, modelValue) {\n      var service = this;\n\n      if(key) {\n        service.dataCache[key] = modelValue;\n      }\n    }\n\n    function getFromDataCache(key) {\n      var service = this;\n\n      return service.dataCache[key];\n    }\n\n    function parseExpression(exp, depth) {\n      var service = this;\n      // if expression is specific value\n      if(!exp || /^(null|false|true|undefined|''|[0-9.]+|\\[]|\\{})$/.test(exp)) {\n        return {\n          \"get\": function() {\n            return eval(exp);\n          }\n        };\n      }\n\n      exp = service.getKey(exp);\n\n      //var key;\n      var match = exp.match(/^(model\\.)?(\\S+)$/);\n\n      // cache fucks shit up if the model changes so disabling\n      //var cached;\n\n      // return from cache if possible\n      //if(!/\\[]/.test(exp) && match && match[2]) {\n      //  if(!depth || depth === service.model) {\n      //    key = match[2];\n      //\n      //    cached = service.getFromDataCache(key);\n      //    if(cached) {\n      //      return cached;\n      //    }\n      //  }\n      //}\n\n      var modelValue = {\n        \"get\": function() {\n          var path = exp.replace(/\\[]/g, '').replace(/\\[(\\d+)]/g, '.$1').split('.');\n          var start = depth || service;\n\n          while(start && path.length > 1) {\n            start = start[path.shift()];\n          }\n\n          //if(/\\[]/g.test(exp)) {\n          //  console.log('exp:', exp, start, start && start[path[0]]);\n          //}\n          return start && start[path[0]];\n        },\n        \"set\": function(val) {\n          var path = exp.replace(/\\[]/g, '').replace(/\\[(\\d+)]/g, '.$1').split('.');\n          var start = depth || service;\n\n          while(start && path.length > 1) {\n            var key = path.shift();\n            if(!start[key]) {\n              if(/^\\d?$/.test(path[0])) {\n                start[key] = [];\n              }\n              else {\n                start[key] = {};\n              }\n            }\n            start = start[key];\n          }\n\n          start[path[0]] = val;\n\n          return val;\n        },\n        \"path\": function() {\n          return {\n            exp: exp,\n            depth: depth,\n            key: match[2]\n          };\n        }\n      };\n\n      //if(key) {\n      //  service.addToDataCache(key, modelValue);\n      //}\n\n      return modelValue;\n    }\n\n    function processSection(section) {\n      var service = this;\n\n      _.each(section.items, service.processField.bind(service));\n    }\n\n    function processComponent(component) {\n      var service = this;\n\n      component.type = 'section';\n      component.htmlClass = 'row';\n\n      var cols = 12 / _.reject(component.items, 'hidden').length;\n\n      _.each(component.items, function(field, i) {\n        service.processField(field);\n        component.items[i] = {\n          type: 'section',\n          htmlClass: 'col-sm-' + cols,\n          items: [field]\n        };\n      });\n    }\n\n    function processCurrency(field) {\n      //console.log('processCurrency:', field);\n      field.currencyFormat = {\n        'currency-dollars': 'dollars',\n        'currency-microcents': 'microcents',\n        'currency': 'cents'\n      }[field.schema.format];\n\n      field.type = 'cn-currency';\n    }\n\n    function processPercentage(field) {\n      field.type = 'cn-percentage';\n    }\n\n    function processReusable(field) {\n      var service = this;\n      field.type = 'cn-reusable';\n\n      field.items.forEach(service.processField.bind(service));\n      field.items = [{\n        type: 'section',\n        items: field.items,\n        condition: '!model.' + service.getKey(field.key) + '.id'\n      }];\n    }\n\n    function processMediaUpload(field) {\n      var service = this;\n      field.type = 'cn-mediaupload';\n      _.each(field.data, function(dataKey, key) {\n        field.data[key] = service.parseExpression(dataKey).get();\n      });\n    }\n\n    function processRadiobuttons(radios) {\n      var service = this;\n      radios.type = 'cn-radiobuttons';\n      if(radios.fullWidth) {\n        radios.btnClass = 'col-sm-' + _.divide(12, radios.titleMap.length);\n      }\n    }\n\n    function processDate(date) {\n      date.type = 'cn-datetimepicker';\n    }\n\n    function processSelect(select) {\n      var service = this,\n          schema = select.schema;\n\n      if(select.titleMapResolve || select.titleMap) {\n        select.getTitleMap = function() {\n          return select.titleMap || service.schema.data[select.titleMapResolve];\n        };\n\n        select.onInit = function(val, form, event, setter) {\n          var modelValue = service.parseExpression(form.key, service.model);\n          // make sure we have correct value\n          // console.log('init:', form.key, val, event);\n          val = modelValue.get();\n          if(event === 'tag-init') {\n            var newVal;\n            if(form.schema.type === 'array') {\n              if(form.schema.items.type !== 'object') {\n                newVal = [];\n                _.each(val, function(val) {\n                  var match = {};\n                  match[select.valueProperty || 'value'] = val;\n                  newVal.push(_.find(select.getTitleMap(), match));\n                });\n              }\n            }\n            else {\n              var match = {};\n              match[select.valueProperty || 'value'] = val;\n              newVal = _.find(select.getTitleMap(), match);\n            }\n            //console.log('newVal:', newVal);\n            if(newVal) setter(newVal);\n          }\n        };\n      }\n\n      if(select.titleMapQuery) {\n        var key = select.titleMapQuery.params.q;\n        select.titleQuery = function(q) {\n          console.log('titleMap:', q);\n          var params = {};\n          if(key) {\n            params[key] = q;\n          }\n          return Api.get({\n            url: select.titleMapQuery.url,\n            params: params\n          });\n        };\n\n        // wrap in string so returns truthy when compiled, but converted to number within directive\n        if(!key) select.minLookup = '0';\n\n        select.onInit = function(val, form, event, setter) {\n          //console.log('titleQuery:onInit:', val, form, event, setter);\n          if(event === 'tag-init') {\n            setter(val);\n          }\n        };\n      }\n\n      if(schema.items) {\n        var defaults = [];\n        _.each(schema.items.properties, function(schema, key) {\n          if(angular.isDefined(schema.default)) {\n            defaults.push({\n              \"key\": key,\n              default: schema.default\n            });\n          }\n        });\n        if(defaults.length) {\n          select.onAdd = function(val, form, event) {\n            if(val.value && event === 'tag-added') {\n              _.each(defaults, function(prop) {\n                //console.log('prop:', prop, val);\n                if(!val.value[prop.key]) val.value[prop.key] = prop.default;\n              });\n            }\n          };\n        }\n      }\n\n      if(!select.type.includes('cn-autocomplete')) {\n        if(select.items) {\n          select.detailedList = true;\n\n          if(select.items[0].type !== 'component') {\n            if(select.items.length > 1) {\n              select.items = [{\n                type: \"component\",\n                items: select.items\n              }];\n            }\n\n            service.processFieldset(select);\n          }\n\n          select.type = 'cn-autocomplete-detailed';\n        }\n        else {\n          if(!select.selectionStyle) {\n            if(select.key === 'tags') {\n              select.selectionStyle = 'tags';\n            }\n            else if(select.getSchemaType() === 'array' && select.schema.maxItems !== 1) {\n              select.selectionStyle = 'list';\n            }\n            else {\n              select.selectionStyle = 'select';\n            }\n          }\n          select.type = 'cn-autocomplete';\n        }\n      }\n\n      if(select.displayFormat) {\n        select.itemFormatter = service.processTemplate(select.displayFormat);\n      }\n\n      service.registerHandler(select.key, function(val) {\n        var form = service.formCtrl && service.formCtrl[service.getKey(select.key)];\n        if(form && form.$setDirty) form.$setDirty();\n      }, select.updateSchema);\n    }\n\n    function processToggle(toggle) {\n      toggle.type = 'cn-toggle';\n    }\n\n    function processHelp(help) {\n      help.htmlClass = 'help-block';\n    }\n\n    function processDisplay(display) {\n      var service = this;\n      display.type = 'cn-display';\n      display.getDisplay = service.processTemplate(display.displayFormat, true);\n    }\n\n    function processTemplate(tpl, parseScope) {\n      var service = this;\n      //console.log('tpl:', tpl);\n      //var processor = /<(\\S+)[^>]*>.*<\\/\\1>/.test(tpl) ? $compile : $interpolate;\n      var processor = $interpolate;\n      return function(scope, arrayIndex) {\n        //console.log('tpl, scope, processor:', tpl, scope, processor);\n        //console.log('processor(tpl)(scope):', processor(tpl)(scope));\n        if(parseScope) {\n          if(angular.isDefined(arrayIndex)) {\n            scope = _.map(scope, function(key) {\n              return key === 'arrayIndex' ? arrayIndex : key;\n            });\n          }\n          scope = service.parseExpression(scope, service.model).get();\n        }\n        return processor(tpl)(scope);\n      };\n    }\n\n    function processSelectDisplay(selectDisplay, schema) {\n      var service = this,\n          selectField = _.find(selectDisplay.items, 'selectField'),\n          handler;\n\n      if (schema && schema.type === 'array') {\n        handler = setupArraySelectDisplay(selectDisplay, selectField, service);\n      } else {\n        handler = setupSelectDisplay(selectDisplay, selectField, service);\n      }\n\n      selectDisplay.selectDisplay = false;\n      service.registerHandler(selectField.key, handler, selectField.updateSchema, true);\n      service.processField(selectDisplay);\n    }\n\n    function setupArraySelectDisplay(selectDisplay, selectField, service) {\n      _.each(selectDisplay.items, function(item) {\n        if (item.condition !== 'false') {\n          item.condition = 'true';\n        }\n      });\n      var handler = function() {\n        var index = getArrayIndex(arguments[2]);\n        _.each(selectDisplay.items, function(item) {\n          var selectKey = service.getKey(selectField.key);\n          var key = service.getKey(item.key);\n          var splitKey = ObjectPath.parse(key);\n          if (selectKey === key) return;\n          var indexedSelectKey = service.setArrayIndex(selectKey, index);\n          var selectValue = service.parseExpression(indexedSelectKey, service.model).get();\n          var formCopies = service.getArrayCopies(key);\n          if (_.includes(selectValue, splitKey[splitKey.length - 1])) {\n            _.each(formCopies, function(copy) {\n              if (getArrayIndex(copy) == index) {\n                copy.condition = 'true';\n              }\n            });\n          } else {\n            _.each(formCopies, function(copy) {\n              if (getArrayIndex(copy) == index) {\n                copy.condition = 'false';\n                service.parseExpression(service.getKey(copy.key), service.model).set();\n              }\n            });\n          }\n        });\n      };\n      // handle legacy objects that don't have values set in the selectField\n      var model = service.parseExpression(service.getKey(selectDisplay.key), service.model).get();\n      _.each(selectDisplay.items, function(item) {\n        var key = service.getKey(item.key);\n        var selectKey = service.getKey(selectField.key);\n        if (key === selectKey) return;\n        _.each(model, function(elem, i) {\n          var indexedKey = service.setArrayIndex(key, i);\n          var splitIndexedKey = ObjectPath.parse(indexedKey);\n          var indexedSelectKey = service.setArrayIndex(selectKey, i);\n          var selectModel = service.parseExpression(indexedSelectKey, service.model);\n          var selectValue = selectModel.get();\n          var itemValue = service.parseExpression(indexedKey, service.model).get();\n          if (itemValue && !_.includes(selectValue, splitIndexedKey[splitIndexedKey.length - 1])) {\n            if (!selectValue) {\n              selectValue = [];\n            }\n            selectValue.push(splitIndexedKey[splitIndexedKey.length - 1]);\n            selectModel.set(selectValue);\n          }\n        });\n      });\n      // handle new objects with values set in defaults\n      var defaults = service.getSchema(selectDisplay.key).default;\n      _.each(defaults, function(elem, i) {\n        var selectKey = service.getKey(selectField.key);\n        var indexedSelectKey = service.setArrayIndex(selectKey, i);\n        var selectModel = service.parseExpression(indexedSelectKey, service.model);\n        var selectValue = selectModel.get();\n        _.each(elem, function(val, key) {\n          if (!selectValue) {\n            selectValue = [];\n          }\n          selectValue.push(key);\n          selectModel.set(selectValue);\n        });\n      });\n      // run handler once all arrayCopies have been instantiated\n      var count = 0;\n      var keyMap = _.pluck(_.reject(selectDisplay.items, {\"condition\":\"false\"}), 'key');\n      var once = $rootScope.$on('flexFormArrayCopyAdded', function(event, key) {\n        var model = service.parseExpression(service.getKey(selectDisplay.key), service.model).get();\n        if (model) {\n          var total = model.length * (keyMap.length);\n          if (_.includes(keyMap, key)) {\n            count++;\n          }\n          if (count === total) {\n            for (var i = 0; i < model.length; i++) {\n              handler(null, null, '[' + i + ']');\n            }\n            count = 0;\n          }\n        }\n      });\n      var resetCount = $rootScope.$on('flexForm.updatePage', function() {\n        count = 0;\n      });\n      service.events.push(once);\n      service.events.push(resetCount);\n      return handler;\n    }\n\n    function setupSelectDisplay(selectDisplay, selectField, service) {\n      var handler = function() {\n        var selectKey = service.getKey(selectField.key);\n        _.each(selectDisplay.items, function(item) {\n          var key = service.getKey(item.key);\n          var splitKey = ObjectPath.parse(key);\n          if (selectKey === key) return;\n          var selectValue = service.parseExpression(selectKey, service.model).get();\n          if (_.includes(selectValue, splitKey[splitKey.length - 1])) {\n            item.condition = \"true\";\n          } else {\n            item.condition = \"false\";\n            service.parseExpression(key, service.model).set();\n          }\n        });\n      };\n      // handle legacy objects that don't have values set in the selectField\n      var selectKey = service.getKey(selectField.key);\n      var selectModel = service.parseExpression(selectKey, service.model);\n      var selectValue = selectModel.get();\n      _.each(selectDisplay.items, function(item) {\n        var key = service.getKey(item.key);\n        if (selectKey === key) return;\n        var splitKey = ObjectPath.parse(key);\n        var itemValue = service.parseExpression(key, service.model).get();\n        if (itemValue && !_.includes(selectValue, splitKey[splitKey.length - 1])) {\n          if (!selectValue) {\n            selectValue = [];\n          }\n          selectValue.push(splitKey[splitKey.length - 1]);\n          selectModel.set(selectValue);\n        }\n      });\n      // handle new objects with values set in the defaults\n      var defaults = service.getSchema(selectDisplay.key).default;\n      _.each(defaults, function(val, key) {\n        if (!selectValue) {\n          selectValue = [];\n        }\n        selectValue.push(key);\n        selectModel.set(selectValue);\n      });\n      // set default values here\n      var model = service.parseExpression(selectDisplay.key, service.model);\n      if (defaults && !model.get()) {\n        model.set(defaults);\n      }\n\n      return handler;\n    }\n\n    function setupSchemaRefresh(refresh) {\n      var service = this;\n      service.refreshSchema = _.debounce(function(force) {\n        var params = _.extend(cnFlexFormConfig.getStateParams(), service.params);\n        var diff = cnUtil.diff(service.schema.params, params, true);\n\n        if(diff || force) {\n          var keys = _.keys(diff);\n\n          if(keys.length > 1) {\n            diff = _.omit(diff, _.isNull);\n            keys = _.keys(diff);\n          }\n          //console.log('keys, diff:', keys, diff, {\n          //  cur: _.clone(params),\n          //  prev: _.clone(service.schema.params)\n          //});\n\n          params.updateSchema = _.first(keys);\n\n          if(!params.updateSchema) {\n            diff = cnUtil.diff(params, _.omit(service.schema.params, 'updateSchema'));\n            keys = _.keys(diff);\n\n            //console.log('keys, diff:', keys, diff);\n            params.updateSchema = _.first(keys);\n          }\n\n          refresh(params).then(function(schema) {\n            ++service.updates;\n            //service.updateSchema(schema);\n            service.processUpdatedSchema(schema);\n          });\n        }\n      }, 100);\n\n      service.refreshData = _.debounce(function() {\n        refresh(_.extend(service.schema.params, {updateSchema: 'refreshData'})).then(function(schema) {\n          service.processUpdatedSchema(schema);\n          console.log('service.schema.params:', service.schema.params);\n        });\n      }, 100);\n\n      service.events.push($rootScope.$on('ffRefreshData', service.refreshData));\n    }\n\n    function processUpdatedSchema(schema) {\n      var service = this;\n      if(schema.diff) {\n        service.schema.params = schema.params;\n\n        if(schema.diff.data) {\n          _.each(schema.diff.data, function(data, key) {\n            service.schema.data[key] = data;\n            console.log('key, service.resolveRegister[key]:', key, service.resolveRegister[key]);\n            if(service.resolveRegister[key]) {\n              _.each(service.resolveRegister[key], function(register) {\n                console.log('register, data:', register, data);\n                register.field[register.key] = data;\n              });\n            }\n          });\n        }\n\n        var keys = [];\n\n        if(schema.diff.schema) {\n          _.each(schema.diff.schema, function(schema, key) {\n            service.schema.schema.properties[key] = schema;\n            reprocessSchema(schema, key, keys);\n          });\n        }\n\n        if(schema.diff.form) {\n          _.each(schema.diff.form, function(form) {\n\n            if(keys.indexOf(form.key) === -1) {\n              keys.push(form.key);\n            }\n\n            // don't want to override key when extending cached objects\n            var key = form.key;\n            delete form.key;\n\n            var cached = service.getFromFormCache(key);\n            if(cached) {\n              reprocessField(cached, form);\n            }\n            var copies = service.getArrayCopies(key);\n            if(copies) {\n              _.each(copies, function(copy) {\n                reprocessField(copy, form);\n              });\n            }\n          });\n        }\n\n        if(keys.length) {\n          _.each(keys, function(key) {\n            var form = service.getFromFormCache(key);\n            if(form) service.processField(form);\n            if(key.includes('[]')) {\n              var copies = service.getArrayCopies(key);\n              _.each(copies, function(copy) {\n                if(copy) service.processField(copy);\n              });\n            }\n          });\n        }\n\n        service.broadcastErrors();\n      }\n      else {\n        service.updateSchema(schema);\n      }\n    }\n\n    function reprocessField(current, update, isChild) {\n      _.extend(current, _.omit(update, 'items', 'key'));\n\n      _.each(current._ogKeys, function(key) {\n        if(!update[key]) delete current[key];\n      });\n      current._ogKeys = _.keys(update);\n\n      // we shouldn't reprocess all child items if they haven't changed, let\n      // the diff tell us which specific fields to update\n      //_.each(update.items, function(child, i) {\n      //  //console.log('child:', child, current.items[i]);\n      //  if(child.key) reprocessField(current.items[i], child, true);\n      //});\n\n      if(!isChild && current.redraw) current.redraw();\n    }\n\n    function reprocessSchema(schema, key, keys) {\n      keys.push(key);\n      if(schema.properties) {\n        _.each(schema.properties, function(schema, subKey) {\n          reprocessSchema(schema, key + '.' + subKey, keys);\n        });\n      }\n      if(schema.items && schema.items.properties) {\n        _.each(schema.properties, function(schema, subKey) {\n          reprocessSchema(schema, key + '[].' + subKey, keys);\n        });\n      }\n    }\n\n    function buildError(field) {\n      var service = this;\n      var key = service.getKey(field.key);\n      return {\n        key: key,\n        message: field.error\n      };\n    }\n\n    function broadcastErrors() {\n      var service = this;\n      $timeout(function() {\n        service.errors.forEach(function(error) {\n          $rootScope.$broadcast('schemaForm.error.' + error.key, 'serverValidation', error.message);\n        });\n      }, 1);\n    }\n\n    function replaceArrayIndex(resolve, key) {\n      var arrayIndexKey = /([^.]*)\\[arrayIndex\\]/.exec(resolve);\n      var re = new RegExp(arrayIndexKey[1] + '\\\\[(\\\\d+)\\\\]');\n      var index = re.exec(key);\n      return resolve.replace(arrayIndexKey[0], index[0]);\n    }\n\n    function getArrayIndex(key) {\n      if (_.isObject(key)) {\n        return _.find(key.key, function(key) {\n          return _.isNumber(key);\n        });\n      } else {\n        return /\\[(\\d+)\\]/.exec(key)[1];\n      }\n    }\n\n    function setArrayIndex(key, index, asArray) {\n      var service = this;\n      var keyCopy;\n      if (_.isString(key)) {\n        keyCopy = ObjectPath.parse(key);\n      } else {\n        keyCopy = _.clone(key);\n      }\n      var indexOfIndex = keyCopy.indexOf('');\n      keyCopy[indexOfIndex] = index;\n\n      if (asArray) {\n        return keyCopy;\n      } else {\n        return service.getKey(keyCopy);\n      }\n    }\n\n    function cleanup() {\n      var service = this;\n      _.each(service.events, function(listener) {\n        listener();\n      });\n    }\n  }\n})();","(function() {\n  'use strict';\n\n  angular\n      .module('cn.flex-form')\n      .controller('FlexFormSandbox', FlexFormSandbox);\n\n  /* @ngInject */\n  function FlexFormSandbox() {\n    /* jshint validthis: true */\n    var vm = this;\n\n    vm.activate = activate;\n    vm.onSchema = onSchema;\n    vm.model = {};\n    vm.config = {};\n    vm.schemaStr = '';\n\n    activate();\n\n    ////////////////\n\n    function activate() {\n      console.log('FlexFormSandbox');\n    }\n\n    function onSchema() {\n      if(vm.schemaStr) {\n        var schema = angular.fromJson(vm.schemaStr);\n        console.log('schema:', schema);\n        if(!schema.form && schema.forms) {\n          schema.form = schema.forms[0].form;\n        }\n        vm.config.schema = schema.form && schema;\n      }\n    }\n\n  }\n})();","(function() {\n  'use strict';\n\n  angular.module('cn.flex-form')\n      .config(schemaFormConfig)\n      .run(addTemplates);\n\n  schemaFormConfig.$inject = ['cnFlexFormServiceProvider'];\n\n  function schemaFormConfig(cnFlexFormServiceProvider) {\n    var extensions = [\n      'cn-fieldset',\n      'cn-toggle',\n      'cn-datetimepicker',\n      'cn-autocomplete',\n      'cn-autocomplete-detailed',\n      'cn-currency',\n      'cn-radiobuttons',\n      'cn-percentage',\n      'cn-display',\n      'cn-mediaupload',\n      'cn-reusable'\n    ];\n\n    _.each(extensions, function(extension) {\n      cnFlexFormServiceProvider.registerField({\n        type: extension,\n        templateUrl: 'app/components/cn-flex-form/forms/' + extension + '.html'\n      });\n    });\n  }\n\n  addTemplates.$inject = ['$templateCache'];\n\n  function addTemplates($templateCache) {\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-toggle.html',\n        '\\\n        <div class=\"form-group {{form.htmlClass}}\" \\\n             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\\n          <label class=\"control-label\" ng-show=\"showTitle()\">{{form.title}}</label>\\\n          <div class=\"clearfix\">\\\n            <cn-toggle-switch\\\n              class=\"pull-left\"\\\n              ng-show=\"form.key\"\\\n              enabled=\"$$value$$\"\\\n              on-value=\"angular.isDefined(form.onValue) ? form.onValue : true\"\\\n              off-value=\"angular.isDefined(form.offValue) ? form.offValue : false\">\\\n            </cn-toggle-switch>\\\n            <span ng-show=\"form.onText && form.offText\">\\\n              {{$$value$$ === form.onValue ? form.onText : form.offText}}\\\n            </span>\\\n          </div>\\\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\\\n        </div>\\\n        '\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-datetimepicker.html',\n        '\\\n        <div class=\"form-group {{form.htmlClass}}\"\\\n             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\\n          <label class=\"control-label\"\\\n                 for=\"{{form.key.join(\\'.\\')}}\"\\\n                 ng-show=\"showTitle()\">{{form.title}}</label>\\\n          <cn-datetimepicker\\\n            ng-show=\"form.key\"\\\n            ng-model=\"$$value$$\"\\\n            ng-model-options=\"form.ngModelOptions\"\\\n            is-disabled=\"form.readonly\"\\\n            sf-changed=\"form\"\\\n            schema-validate=\"form\"\\\n            input-id=\"{{form.key.join(\\'.\\')}}\"\\\n            min-date=\"form.minDate\"\\\n            required=\"form.required\"\\\n            model-type=\"{{form.schema.type}}\">\\\n          </cn-datetimepicker>\\\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\\\n        </div>\\\n        '\n    );\n\n    var sharedAutocompleteTpl = '\\\n          <tags-input\\\n            ng-show=\"form.key\"\\\n            ng-model=\"$$value$$\"\\\n            ng-model-options=\"form.ngModelOptions\"\\\n            ng-disabled=\"form.readonly\"\\\n            sf-changed=\"form\"\\\n            schema-validate=\"form\"\\\n            input-id=\"{{form.key.join(\\'.\\')}}\"\\\n            display-property=\"{{form.displayProperty || \\'name\\'}}\"\\\n            value-property=\"{{form.valueProperty || \\'value\\'}}\"\\\n            placeholder=\"{{form.placeholder || \\' \\'}}\"\\\n            add-on-blur=\"true\"\\\n            add-on-comma=\"false\"\\\n            add-from-autocomplete-only=\"{{!form.allowNew}}\"\\\n            on-before-tag-added=\"form.onAdd({value: $tag}, form, $event, $prev)\"\\\n            on-init=\"form.onInit($tag, form, $event, $setter)\"\\\n            model-type=\"{{form.getSchemaType()}}\"\\\n            array-value-type=\"{{form.schema.items.type}}\"\\\n            hide-tags=\"{{form.detailedList}}\"\\\n            tags-style=\"{{form.selectionStyle}}\"\\\n            required=\"{{form.required}}\"\\\n            min-length=\"{{form.minLength}}\"\\\n            allowed-tags-pattern=\".*\"\\\n            dropdown=\"true\"\\\n            item-formatter=\"form.itemFormatter\"\\\n            min-tags=\"{{form.schema.minItems}}\"\\\n            max-tags=\"{{form.schema.maxItems || form.getSchemaType() !== \\'array\\' ? 1 : 0}}\"\\\n            allow-bulk=\"{{form.bulkAdd}}\"\\\n            bulk-delimiter=\"{{form.bulkDelimiter}}\"\\\n            bulk-placeholder=\"{{form.bulkPlaceholder}}\"\\\n            show-button=\"true\">\\\n            <auto-complete\\\n              source=\"form.getTitleMap && form.getTitleMap() || form.titleQuery($query)\"\\\n              skip-filtering=\"{{form.titleQuery ? true : false}}\"\\\n              min-length=\"{{form.minLookup || (form.titleQuery && 3 || 0)}}\">\\\n            </auto-complete>\\\n          </tags-input>\\\n          ';\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-autocomplete.html',\n        '\\\n        <div class=\"form-group {{form.htmlClass}}\"\\\n             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\\n          <label class=\"control-label\"\\\n                 for=\"{{form.key.join(\\'.\\')}}-input\"\\\n                 ng-show=\"showTitle()\">{{form.title}}</label>\\\n          ' + sharedAutocompleteTpl + '\\\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\\\n        </div>\\\n        '\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-autocomplete-detailed.html',\n        '\\\n        <div sf-array=\"form\"\\\n             class=\"form-group {{form.htmlClass}}\"\\\n             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\\n          <label class=\"control-label\"\\\n                 for=\"{{form.key.join(\\'.\\')}}-input\"\\\n                 ng-show=\"showTitle()\">{{form.title}}</label>\\\n          <ol class=\"list-group cn-autocomplete-list\"\\\n              ng-show=\"modelArray.length\"\\\n              ng-model=\"modelArray\">\\\n            <li class=\"list-group-item {{form.fieldHtmlClass}}\"\\\n                ng-repeat=\"item in modelArray track by $index\">\\\n              <button ng-hide=\"form.readonly || form.remove === null\"\\\n                      ng-click=\"deleteFromArray($index)\"\\\n                      type=\"button\" class=\"close pull-right\">\\\n                <span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span>\\\n              </button>\\\n              <sf-decorator ng-init=\"arrayIndex = $index\" form=\"copyWithIndex($index)\"></sf-decorator>\\\n            </li>\\\n          </ol>\\\n          ' + sharedAutocompleteTpl + '\\\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\\\n        </div>\\\n        '\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-currency.html',\n        '\\\n        <div class=\"form-group {{form.htmlClass}}\"\\\n             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\\n          <label class=\"control-label\"\\\n                 ng-show=\"showTitle()\"\\\n                 for=\"{{form.key.join(\\'.\\')}}\">{{form.title}}</label>\\\n          <div class=\"{{form.fieldClass}} input-group\">\\\n            <label class=\"input-group-addon\"\\\n                   ng-disabled=\"form.readonly\"\\\n                   for=\"{{form.key.join(\\'.\\')}}\">$</label>\\\n            <input class=\"form-control\"\\\n                   cn-currency-format=\"{{form.currencyFormat}}\"\\\n                   ng-show=\"form.key\"\\\n                   ng-model-options=\"form.ngModelOptions\"\\\n                   ng-disabled=\"form.readonly\"\\\n                   sf-changed=\"form\"\\\n                   schema-validate=\"form\"\\\n                   ff-validate=\"form\"\\\n                   type=\"text\"\\\n                   step=\"any\"\\\n                   min=\"{{form.min}}\"\\\n                   max=\"{{form.max}}\"\\\n                   id=\"{{form.key.join(\\'.\\')}}\"\\\n                   name=\"{{form.key.join(\\'.\\')}}\"\\\n                   ng-model=\"$$value$$\">\\\n          </div>\\\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\\\n        </div>\\\n        '\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-radiobuttons.html',\n        '\\\n        <div class=\"form-group schema-form-radiobuttons cn-radiobuttons {{form.htmlClass}}\"\\\n             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\\n          <label class=\"control-label\" ng-show=\"showTitle()\">{{form.title}}</label>\\\n          <div class=\"btn-group clearfix\">\\\n            <label class=\"btn btn-{{item.value}} {{form.btnClass}} {{item.value === $$value$$ ? \\'active\\' : \\'\\'}}\"\\\n                   ng-repeat=\"item in form.titleMap\">\\\n              <input type=\"radio\"\\\n                     class=\"{{form.fieldHtmlClass}} hide\"\\\n                     sf-changed=\"form\"\\\n                     ng-disabled=\"form.readonly\"\\\n                     ng-model=\"$$value$$\"\\\n                     ng-model-options=\"form.ngModelOptions\"\\\n                     schema-validate=\"form\"\\\n                     ff-validate=\"form\"\\\n                     ng-value=\"item.value\"\\\n                     name=\"{{form.key.join(\\'.\\')}}\">\\\n              <i class=\"fa fa-{{item.value}} fa-lg\"></i>\\\n              <span ng-bind-html=\"item.name\"></span>\\\n            </label>\\\n          </div>\\\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\\\n        </div>\\\n        '\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-percentage.html',\n        '\\\n        <div class=\"form-group {{form.htmlClass}}\"\\\n             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\\n          <label class=\"control-label\"\\\n                 ng-show=\"showTitle()\"\\\n                 for=\"{{form.key && form.key[0]}}\">{{form.title}}</label>\\\n          <div class=\"{{form.fieldClass}} input-group\">\\\n            <input class=\"form-control\"\\\n                   cn-percentage-format\\\n                   ng-show=\"form.key\"\\\n                   ng-model-options=\"form.ngModelOptions\"\\\n                   ng-disabled=\"form.readonly\"\\\n                   sf-changed=\"form\"\\\n                   schema-validate=\"form\"\\\n                   type=\"number\"\\\n                   step=\"any\"\\\n                   min=\"{{form.min}}\"\\\n                   max=\"{{form.max}}\"\\\n                   id=\"{{form.key && form.key[0]}}\"\\\n                   name=\"{{form.key && form.key[0]}}\"\\\n                   ng-model=\"$$value$$\">\\\n             <div class=\"input-group-addon\"\\\n                    ng-disabled=\"form.readonly\"\\\n                    for=\"{{form.key && form.key[0]}}\">%</div>\\\n          </div>\\\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\\\n        </div>\\\n        '\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-display.html',\n        '\\\n        <div class=\"form-group cn-display{{form.htmlClass}}\">\\\n          <input ng-show=\"form.key\"\\\n                 class=\"form-control\"\\\n                 id=\"{{form.key.join(\\'.\\')}}\"\\\n                 name=\"{{form.key.join(\\'.\\')}}\"\\\n                 ng-disabled=\"true\"\\\n                 value=\"{{form.getDisplay(form.key, form.arrayIndex)}}\">\\\n        </div>\\\n        '\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-fieldset.html',\n        '\\\n        <fieldset ng-disabled=\"form.readonly\" class=\"schema-form-fieldset {{form.htmlClass}}\">\\\n          <legend ng-click=\"form.toggleCollapse()\"\\\n                  ng-class=\"{\\'sr-only\\': !showTitle(), collapsible: form.collapsible}\"\\\n                  ng-mouseenter=\"form.render = true\">\\\n            <i ng-show=\"form.collapsible\"\\\n               class=\"fa fa-caret-{{form.collapsed ? \\'right\\' : \\'down\\'}}\"></i>\\\n            {{ form.title }}\\\n          </legend>\\\n          <div class=\"help-block\" ng-show=\"form.description\" ng-bind-html=\"form.description\"></div>\\\n          <div collapse=\"form.collapsed\">\\\n            <div ng-if=\"form.render\">\\\n              <sf-decorator ng-repeat=\"item in form.items\" form=\"item\"></sf-decorator>\\\n            </div>\\\n          </div>\\\n        </fieldset>\\\n        '\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-mediaupload.html',\n        '\\\n        <div class=\"form-group {{form.htmlClass}}\"\\\n             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\\n          <label class=\"control-label\"\\\n                 ng-show=\"showTitle()\"\\\n                 for=\"{{form.key && form.key[0]}}\">{{form.title}}</label>\\\n          <media-upload ng-model=\"$$value$$\"\\\n                        cn-file-type=\"form.fileType\"\\\n                        cn-upload-path=\"form.uploadPath\"\\\n                        cn-data=\"form.data\"\\\n                        cn-preview-path=\"form.previewPath\"\\\n                        cn-model-value-key=\"form.modelValueKey\"\\\n                        ng-model-options=\"form.ngModelOptions\"\\\n                        sf-changed=\"form\"\\\n                        schema-validate=\"form\"\\\n                        ff-form=\"form\"\\\n                        class=\"clearfix\">\\\n          </media-upload>\\\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\\\n       </div>\\\n        '\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-reusable.html',\n        '\\\n        <div class=\"form-group cn-reusable {{form.htmlClass}}\"\\\n             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\\n          <label class=\"control-label\"\\\n                 ng-show=\"showTitle()\"\\\n                 for=\"{{form.key.join(\\'.\\')}}\">{{form.title}}</label>\\\n          <cn-select-or\\\n            ng-show=\"form.key\"\\\n            select-from=\"form.library\"\\\n            ng-model=\"$$value$$\"\\\n            ng-model-options=\"form.ngModelOptions\"\\\n            sf-changed=\"form\"\\\n            schema-validate=\"form\"\\\n            ff-form=\"form\"\\\n            directiveId=\"form.directiveId\"\\\n            item-template=\"form.itemTemplate\"\\\n            toggle-text=\"form.toggleText\"\\\n            disabled=\"form.readonly\">\\\n            <sf-decorator ng-repeat=\"item in form.items\" form=\"item\"/>\\\n          </cn-select-or>\\\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\\\n        </div>\\\n        '\n    );\n  }\n\n})();"],"sourceRoot":"/source/"}