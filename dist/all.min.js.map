{"version":3,"sources":["all.min.js","_cn-flex-form.module.js","cn-flex-form-config.service.js","cn-flex-form-header.directive.js","cn-flex-form-modal-loader.js","cn-flex-form-modal-loader.service.js","cn-flex-form-types.service.js","cn-flex-form-validate.directive.js","cn-flex-form.directive.js","cn-flex-form.routes.js","cn-flex-form.service.js","sandbox.js","schema-form-extensions.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","angular","module","cnFlexFormConfigProvider","addIgnoreParam","param","ignoreParams","push","cnFlexFormConfig","$stateParams","getStateParams","_","chain","omit","v","isUndefined","isNull","$inject","$get","provider","cnFlexFormHeader","restrict","scope","config","submit","loadOffscreen","controller","FlexFormHeader","bindToController","controllerAs","template","$scope","updateData","console","log","$emit","isDisabled","btnConfig","vm","this","directive","FlexFormModalLoader","FlexFormModal","$state","$rootScope","activate","modal","open","result","goBack","dismiss","$on","dismissModal","transition","go","arguments","cnFlexFormModalLoaderService","$modal","openModal","currentModal","getMapping","instance","factory","getPromises","state","promises","promiseMap","getPromise","id","$q","promise","defer","getPromiseForResolve","cnFlexFormModalLoaderServiceProvider","addMapping","def","resolve","parent","modalMap","modalId","resolveMapping","d","service","cnFlexFormTypesProvider","registerFieldType","fieldType","fieldTypeRegister","unshift","cnFlexFormTypes","getFieldType","field","i","l","length","condition","type","schema","includes","titleMap","titleMapResolve","titleMapQuery","format","ffValidate","form","require","link","elem","attrs","ngModel","required","$watch","$viewValue","$setValidity","cnFlexForm","model","formIndex","formName","delayForm","cleanupEvent","FlexForm","cnFlexFormService","$location","isNumber","forms","search","debug","process","cur","prev","isCompiled","compile","formCtrl","getSchema","updateSchema","showForm","cleanup","each","events","listener","undefined","cnFlexFormRoutesProvider","$stateProvider","addStates","options","name","url","permissions","cnFlexFormRoutes","templateUrl","cnFlexFormServiceProvider","schemaFormDecoratorsProvider","registerField","handler","fieldTypeHandlers","createDirective","CNFlexFormService","Api","$parse","sfPath","$interpolate","$timeout","cnUtil","CNFlexFormConstructor","services","CNFlexForm","window","arrayCopies","arrayListeners","dataCache","defaults","errors","formCache","listeners","resolveRegister","updates","params","setupConfig","processField","bind","initModelWatch","initArrayCopyWatch","broadcastErrors","setValue","compiled","getSchemaForm","setupSchemaRefresh","processSchema","getSchemaType","isArray","first","processDefault","getKey","parseExpression","modelValue","get","equals","set","copy","processFieldset","fieldset","items","collapsible","toggleCollapse","collapsed","render","selectDisplay","processSelectDisplay","_ogKeys","without","keys","addToFormCache","description","readonly","processResolve","watch","processFieldWatch","processSection","processComponent","isString","isFunction","call","registerHandler","error","buildError","isEmpty","ngModelOptions","allowInvalid","find","reject","$broadcast","reduce","total","next","test","depth","parse","properties","last","pop","matchArray","match","shift","dataProp","fieldProp","handleResolve","resolveType","registerResolve","exp","data","cursor","loadMore","refreshSchema","fieldKey","register","prop","resolution","functionCondition","isConditionFunction","parsedCondition","parseCondition","adjustment","date","replace","trim","math","operator","+","-","*","/","adjuster","val","trigger","updatePath","fromPath","replaceArrayIndex","update","path","from","moment","add","toDate","eval","p","floor","ceil","round","initialize","original","invert","functionName","functionArgument","predicate","arr","comparator","comparisonValue","evaluation","forEach","evaluatePredicate","toString","val1","val2","runHandler","isObject","arrMatch","registerArrayHandlers","handlers","arrKey","onArray","reorder","lastKey","deregisterHandlers","arrVal","deregisterArrayHandlers","item","watching","modelWatch","onModelWatch","initSchemaParams","firstUpdate","cleanModel","prevParams","event","index","parseInt","addArrayCopy","copies","getArrayCopiesFor","list","splice","getArrayCopies","keyStart","copiesList","getFromFormCache","addToDataCache","getFromDataCache","start","processArray","array","sortOptions","e","ui","section","component","htmlClass","cols","processCurrency","currencyFormat","currency-dollars","currency-microcents","currency","processPercentage","processReusable","view","processMediaUpload","processCsvUpload","processRadiobuttons","radios","fullWidth","btnClass","divide","processDate","maxView","iconClass","modelFormatter","m","multiply","hours","minutes","modelParser","startOf","viewFormatter","dateFormat","viewParser","processSelect","select","getTitleMap","onInit","setter","newVal","valProp","valueProperty","q","titleQuery","minLookup","isDefined","default","onAdd","detailedList","selectionStyle","maxItems","displayFormat","itemFormatter","processTemplate","$setDirty","processToggle","toggle","processHelp","help","processDisplay","display","getDisplay","tpl","parseScope","processor","arrayIndex","map","processTable","table","row","columns","extend","selectField","setupArraySelectDisplay","setupSelectDisplay","getArrayIndex","selectKey","splitKey","ObjectPath","indexedSelectKey","setArrayIndex","selectValue","formCopies","indexedKey","splitIndexedKey","selectModel","itemValue","count","keyMap","pluck","once","resetCount","refresh","debounce","diff","then","processUpdatedSchema","refreshData","reset","concat","registers","reprocessSchema","indexOf","cached","reprocessField","current","isChild","redraw","subKey","message","arrayIndexKey","exec","re","RegExp","asArray","keyCopy","clone","indexOfIndex","prototype","cn-radiobuttons","cn-autocomplete","cn-datetimepicker","cn-display","cn-currency","cn-percentage","cn-mediaupload","cn-csvupload","cn-reusable","cn-toggle","cn-table","FlexFormSandbox","onSchema","schemaStr","fromJson","schemaFormConfig","extensions","extension","addTemplates","$templateCache","put","sharedAutocompleteTpl","run"],"mappings":"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","file":"all.min.js","sourcesContent":["\"use strict\";function _defineProperty(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}!function(){angular.module(\"cn.flex-form\",[\"ui.router\",\"schemaForm\",\"ui.bootstrap.datetimepicker\",\"cnTagsInput\",\"cn.util\"])}(),function(){function e(){function e(e){n.push(e)}function r(e){function r(){return _.chain(e).omit(n).omit(function(e){return _.isUndefined(e)||_.isNull(e)}).value()}return{getStateParams:r,ignoreParams:n}}r.$inject=[\"$stateParams\"];var n=[\"page\",\"debug\",\"sandbox\",\"modal\",\"modalId\"];return{addIgnoreParam:e,$get:r}}angular.module(\"cn.flex-form\").provider(\"cnFlexFormConfig\",e)}(),function(){function e(){return{restrict:\"E\",scope:{config:\"=ffHeaderConfig\",submit:\"&ffSubmit\",loadOffscreen:\"&ffLoadOffscreen\"},controller:r,bindToController:!0,controllerAs:\"vm\",template:'\\n          <div class=\"col-md-6\">\\n            <h5 ng-if=\"vm.config.title.lead\">{{::vm.config.title.lead}}</h5>\\n            <h1>{{vm.config.title.main}}</h1>\\n            <h5 ng-if=\"vm.config.title.sub\">{{::vm.config.title.sub}}</h5>\\n          </div>\\n          <div class=\"{{vm.config.buttonContainerClass || \\'page-action-btns\\'}}\">\\n            <div class=\"btn-options\"\\n                 ng-mouseover=\"vm.loadOffscreen()\">\\n              <a class=\"btn\"\\n                 ng-if=\"vm.config.actionConfig.returnState\"\\n                 ui-sref=\"{{vm.config.actionConfig.returnState}}\">\\n                {{vm.config.actionConfig.returnText || \\'Cancel\\'}}\\n              </a>\\n              <span ng-repeat=\"button in vm.config.actionConfig.actions\">\\n                <a class=\"btn {{button.style && \\'btn-\\'+button.style}}\"\\n                   ng-disabled=\"vm.isDisabled(button)\"\\n                   ng-class=\"{\\'btn-primary\\': $index === vm.config.actionConfig.actions.length - 1}\"\\n                   ng-click=\"vm.submit({ handler: button.handler})\"\\n                   tooltip=\"{{button.helptext}}\"\\n                   tooltip-placement=\"bottom\"\\n                   ng-bind-html=\"button.text || \\'Save\\'\">\\n                  {{button.text || \\'Save\\'}}\\n                </a>\\n              </span>\\n            </div>\\n            <p class=\"data-updated-at text-right\"\\n               id=\"data-updated-at\"\\n               ng-hide=\"vm.config.noData\">\\n              <a ng-click=\"vm.updateData()\">Update Data</a>\\n            </p>\\n          </div>'}}function r(e){function r(){console.log(\"updateData:\",r),e.$emit(\"ffRefreshData\")}function n(e){return t.config.isDisabled?t.config.isDisabled(e):!1}var t=this;t.updateData=r,t.isDisabled=n}angular.module(\"cn.flex-form\").directive(\"cnFlexFormHeader\",e),r.$inject=[\"$scope\"]}(),function(){function e(e,r,n,t){function o(){i.modal=e.open(i),i.modal.result[\"finally\"](a),i.dismiss=n.$on(\"$stateChangeStart\",s)}function a(){r.transition||r.go(\"^\")}function s(){console.log(\"dismissModal:\",arguments),i.dismiss(),i.modal.dismiss()}var i=this;console.log(\"FlexFormModalLoader:\",t.modal),o()}function r(e,r,n){function t(){var t=e.getMapping(n.modal);return console.log(\"currentModal:\",t),this.modal=r.open(t),this.modal}var o={open:t};return o}angular.module(\"cn.flex-form\").controller(\"FlexFormModalLoader\",e).factory(\"FlexFormModal\",r),e.$inject=[\"FlexFormModal\",\"$state\",\"$rootScope\",\"$stateParams\"],r.$inject=[\"cnFlexFormModalLoaderService\",\"$modal\",\"$stateParams\"]}(),function(){function e(e){var r=s[e];return r||(r={},s[e]=r),r}function r(r,n,t){var o=e(r),a=o[n];return a||(a=t.defer(),o[n]=a),a}function n(r,n,t){var o=e(r),a=t.defer();return o[n]=a,a}function t(){function e(e,r){r.resolve={parent:n},a[e]=r}function n(e,n){return r(e.modal,e.modalId,n).promise}var t={addMapping:e,$get:o};return n.$inject=[\"$stateParams\",\"$q\"],t}function o(e){function r(r,t,o){var a=n(r,t,e);return a.resolve(o),a.promise}function t(e){return a[e]}var o={getMapping:t,resolveMapping:r};return o}angular.module(\"cn.flex-form\").provider(\"cnFlexFormModalLoaderService\",t);var a={},s={};o.$inject=[\"$q\"]}(),function(){function e(){function e(e){n.unshift(e)}function r(){function e(e){for(var r=0,t=n.length;t>r;r++)if(n[r].condition(e))return n[r].type;return e.type||e.schema&&e.schema.type}return{fieldTypeRegister:n,getFieldType:e}}var n=[{condition:function(e){return\"hidden\"===e.type},type:\"hidden\"},{condition:function(e){return e.type.includes(\"radios\")},type:\"cn-radios\"},{condition:function(e){return e.type.includes(\"radiobuttons\")},type:\"cn-radiobuttons\"},{condition:function(e){return e.type.includes(\"autocomplete\")||e.titleMap||e.titleMapResolve||e.titleMapQuery},type:\"cn-autocomplete\"},{condition:function(e){return\"cn-datetimepicker\"===e.type||\"datetime-local\"===e.type||\"time-minutes\"===e.type},type:\"cn-datetimepicker\"},{condition:function(e){return\"help\"===e.type},type:\"help\"},{condition:function(e){return e.type.includes(\"display\")},type:\"cn-display\"},{condition:function(e){return e.schema&&e.schema.format&&e.schema.format.includes(\"currency\")},type:\"cn-currency\"},{condition:function(e){return e.schema&&\"percentage\"===e.schema.format},type:\"cn-percentage\"},{condition:function(e){return\"toggle\"===e.type||\"boolean\"===e.type},type:\"cn-toggle\"},{condition:function(e){return\"mediaupload\"===e.type},type:\"cn-mediaupload\"},{condition:function(e){return\"csvupload\"===e.type},type:\"cn-csvupload\"},{condition:function(e){return\"reusable\"===e.type},type:\"cn-reusable\"},{condition:function(e){return\"table\"===e.type},type:\"cn-table\"},{condition:function(e){return\"array\"===e.type},type:\"array\"}];return{registerFieldType:e,$get:r}}angular.module(\"cn.flex-form\").provider(\"cnFlexFormTypes\",e)}(),function(){function e(){return{restrict:\"A\",scope:{form:\"=ffValidate\"},require:\"ngModel\",link:r}}function r(e,r,n,t){e.form&&e.form.required&&e.$watch(function(){return t.$viewValue},function(e){t.$setValidity(\"schemaForm\",!0),t.$setValidity(\"tv4-302\",e)})}angular.module(\"cn.flex-form\").directive(\"ffValidate\",e)}(),function(){function e(){return{restrict:\"E\",template:'        <div ng-if=\"vm.showForm()\">          <ng-form name=\"{{vm.formName}}\"                sf-schema=\"vm.config.schema.schema\"                sf-form=\"vm.form\"                sf-model=\"vm.model\"></ng-form>          <!-- debug panel to display model -->          <section ng-if=\"vm.debug\"><pre pretty-json=\"vm.model\"></pre></section>        </div>      ',scope:{config:\"=ffConfig\",model:\"=ffModel\",formIndex:\"=ffFormIndex\",formName:\"=ffFormName\",delayForm:\"=ffDelayForm\",cleanupEvent:\"=ffCleanupEvent\"},controller:r,controllerAs:\"vm\",bindToController:!0}}function r(e,r,n){function t(){angular.isNumber(c.formIndex)?c.form=c.config.schema.forms[c.formIndex].form:c.form=c.config.schema.form,n.search().debug&&(c.debug=!0)}function o(r,n){c.form&&(c.service?(console.log(\"vm.service.isCompiled():\",c.service.isCompiled()),c.service.compile(c.config.schema,c.model)):c.service=e(c.config.schema,c.model,{formCtrl:c.config.formCtrl,getSchema:c.config.getSchema,updateSchema:s}))}function a(){return!c.delayForm&&c.service&&c.service.isCompiled()}function s(e){c.config.schema=e,c.activate()}function i(){_.each(c.events,function(e){e()}),c.service.cleanup()}var c=this;c.service=void 0,c.events=[],c.activate=t,c.cleanup=i,c.process=o,c.showForm=a,c.events.push(r.$watch(function(){return c.config.schema},c.process)),c.activate(),r.$on(c.cleanupEvent||\"$destroy\",c.cleanup)}angular.module(\"cn.flex-form\").directive(\"cnFlexForm\",e),r.$inject=[\"cnFlexFormService\",\"$scope\",\"$location\"]}(),function(){function e(e){function r(){}function n(r){e.state(r.name+\".page.modal\",{url:\"/~:modal/:modalId\",controller:\"FlexFormModalLoader\",controllerAs:\"vm\",permissions:r.permissions})}var t={addStates:n,$get:r};return t}function r(e){e.state(\"flex-form-sandbox\",{url:\"/flex-form/sandbox\",controller:\"FlexFormSandbox\",controllerAs:\"vm\",templateUrl:\"app/components/cn-flex-form/sandbox.html\"})}angular.module(\"cn.flex-form\").provider(\"cnFlexFormRoutes\",e).config(r),e.$inject=[\"$stateProvider\"],r.$inject=[\"$stateProvider\"]}(),function(){function cnFlexFormServiceProvider(e,r){function n(n){n.condition&&r.registerFieldType({condition:n.condition,type:n.type}),n.handler&&(fieldTypeHandlers[n.type]=n.handler),n.templateUrl&&(e.addMapping(\"bootstrapDecorator\",n.type,n.templateUrl),e.createDirective(n.type,n.templateUrl))}return{registerField:n,$get:CNFlexFormService}}function CNFlexFormService(Api,$parse,cnFlexFormConfig,cnFlexFormTypes,sfPath,$interpolate,$rootScope,$timeout,cnUtil,$stateParams){function CNFlexFormConstructor(e,r,n){var t;if(services.length)for(var o=0,a=services.length;a>o;o++)if(services[o].model===r){t=services[o],t.compile(e,r,n);break}return t||(t=new CNFlexForm(e,r,n),services.push(t)),t||new CNFlexForm(e,r,n)}function CNFlexForm(e,r,n){$stateParams.debug&&(window.services=services),this.arrayCopies={},this.arrayListeners={},this.dataCache={},this.defaults={},this.errors=[],this.events=[],this.formCache={},this.listeners={},this.resolveRegister={},this.model=r,this.updates=0,this.params=cnFlexFormConfig.getStateParams(),this._=_,this.compile(e,r,n)}function compile(e,r,n){var t=this;t.schema=e,t.model=r,t.isCompiled()||(t.setupConfig(n),e.forms?_.each(e.forms,function(e){_.each(e.form,t.processField.bind(t))}):_.each(e.form,t.processField.bind(t)),t.initModelWatch(),t.initArrayCopyWatch(),t.isCompiled(!0)),t.broadcastErrors()}function isCompiled(e){var r=this;return e&&(r.schema.compiled=e),r.schema&&r.schema.compiled}function setupConfig(e){var r=this;e&&(e.formCtrl&&(r.formCtrl=e.formCtrl),e.updateSchema&&(r.updateSchema=e.updateSchema),e.getSchema&&(r.getSchemaForm=r.setupSchemaRefresh(e.getSchema)))}function processSchema(e){var r=this,n=e.schema;n&&(e.getSchemaType=function(){return _.isArray(n.type)?_.first(n.type):n.type},r.processDefault(e))}function processDefault(e){var r=this,n=e.schema;if(n[\"default\"]){var t=r.getKey(e.key);if(r.updates){if(t.includes&&t.includes(\"[]\"))return;var o=r.parseExpression(e.key,r.model),a=o.get();(!r.defaults[t]||_.isUndefined(a)||angular.equals(a,r.defaults[t]))&&o.set(n[\"default\"])}r.defaults[t]=angular.copy(n[\"default\"])}}function processFieldset(e){var r=this;e.type=\"cn-fieldset\",_.each(e.items,r.processField.bind(r)),e.collapsible?(e.toggleCollapse=function(){e.collapsible&&(e.collapsed=!e.collapsed)},e.render=!e.collapsed):e.render=!0}function processField(e){var r=this;if(e.selectDisplay&&r.processSelectDisplay(e,r.getSchema(e.key)),\"fieldset\"===e.type)r.processFieldset(e);else{e._ogKeys||(e._ogKeys=_.without(_.keys(e),\"key\",\"htmlClass\"));var n=r.getKey(e.key);if(e.key&&(r.addToFormCache(e,n),e.schema=r.getSchema(n),e.schema&&(e.schema.description&&(e.description=e.schema.description),e.readonly&&!e.schema.readonly&&(e.readonly=!1))),r.processSchema(e),e.type||(e.type=e.getSchemaType&&e.getSchemaType()),e.resolve&&r.processResolve(e),e.watch&&r.processFieldWatch(e),\"section\"===e.type||\"tabarray\"===e.type)r.processSection(e);else if(\"component\"===e.type)r.processComponent(e);else{var t=cnFlexFormTypes.getFieldType(e),o=fieldTypeHandlers[t];_.isString(o)?r[o](e):_.isFunction(o)&&o.call(r,e),e.updateSchema&&r.registerHandler(e,null,e.updateSchema),e.error?(r.errors.push(r.buildError(e)),_.isEmpty(e.ngModelOptions)?e.ngModelOptions={allowInvalid:!0}:e.ngModelOptions.allowInvalid=!0):_.find(r.errors,{key:n})&&(r.errors=_.reject(r.errors,{key:n}),$rootScope.$broadcast(\"schemaForm.error.\"+n,\"schemaForm\",!0),$rootScope.$broadcast(\"schemaForm.error.\"+n,\"serverValidation\",!0))}}}function getKey(e){return _.isArray(e)&&(e=_.reduce(e,function(e,r){return/^(\\d*)$/.test(r)?e+\"[\"+r+\"]\":e+\".\"+r})),e}function getSchema(e,r){var n=this;if(e){e=n.getKey(e),e=sfPath.parse(e),r=r||n.schema.schema.properties,\"\"===_.last(e)&&e.pop();for(var t,o,a;e.length>1;)t=e[0],o=e[1],a=o.match(/^\\d*$/),a?(r=r[e.shift()].items.properties,e.shift()):r=r[e.shift()].properties;return t=e[0],r[t]}}function processResolve(e){var r=this;return _.each(e.resolve,function(n,t){r.handleResolve(e,t,n);var o=n.match(/^(schema\\.data\\.|model\\.)(\\w+)/);o&&(\"schema.data.\"===o[1]?r.registerResolve(e,t,o[2]):\"model.\"===o[1]&&r.registerHandler(o[2],function(){r.handleResolve(e,t,n)}))}),e}function handleResolve(e,r,n){var t=this,o=t.parseExpression(n).get();o&&o.cursor?e.loadMore=function(){var e=n.match(/schema\\.data\\.(.+)/)[1];t.refreshSchema(\"data:\"+e+\":\"+o.cursor)}:delete e.loadMore,e[r]=o&&o.data?o.data:o}function registerResolve(e,r,n){var t=this,o=t.getKey(e.key);t.resolveRegister[n]=t.resolveRegister[n]||{};var a=t.resolveRegister[n];a[o]=a[o]||[],a[o].push({field:e,prop:r})}function processFieldWatch(field){var service=this,schema=field.schema;field.watch=_.isArray(field.watch)?field.watch:[field.watch],_.each(field.watch,function(watch){if(watch.resolution){var condition=watch.condition,functionCondition=service.isConditionFunction(condition),resolution=watch.resolution,handler;if(_.isFunction(resolution))handler=function(e,r){var n=functionCondition?service.parseCondition(functionCondition):condition;(!n||$parse(n)(service))&&resolution(e,r)};else{var adjustment={};adjustment.date=resolution.match(/\\+ ?(\\d+) days/),adjustment.date?(adjustment.date=adjustment.date[1],resolution=resolution.replace(adjustment.date,\"\").trim()):(adjustment.math=resolution.match(/(\\+|\\-|\\/|\\*) ?(\\S+)/),adjustment.math&&(adjustment.operator={\"+\":\"add\",\"-\":\"subtract\",\"*\":\"multiply\",\"/\":\"divide\"}[adjustment.math[1]],adjustment.adjuster=service.parseExpression(adjustment.math[2]))),resolution=resolution.match(/(\\S+) ?= ?(\\S+)/),handler=function handler(val,prev,key,trigger){var updatePath=void 0,fromPath=void 0;resolution[1].includes(\"arrayIndex\")&&(updatePath=replaceArrayIndex(resolution[1],key));var update=service.parseExpression(updatePath||resolution[1]);if(trigger!==update.path().key){trigger=update.path().key,resolution[2].includes(\"arrayIndex\")&&(fromPath=replaceArrayIndex(resolution[2],key));var from=service.parseExpression(fromPath||resolution[2]),parsedCondition=functionCondition?service.parseCondition(functionCondition,condition):condition;if(!parsedCondition||$parse(parsedCondition)(service))if(adjustment.date)update.set(moment(from.get()).add(adjustment.date,\"days\").toDate());else if(adjustment.math){var result=eval(from.get()+adjustment.math[1]+adjustment.adjuster.get());if(schema=schema||field.items&&(field.items[0].schema||field.items[0].items&&field.items[0].items[0].schema),\"cn-currency\"===field.type){var p=schema&&\"currency-dollars\"===schema.format?2:0;result=\"*\"===adjustment.math[1]?_.floor(result,p):\"/\"===adjustment.math[1]?_.ceil(result,p):_.round(result,p)}service.listeners[trigger]&&(service.listeners[trigger].trigger=key),update.set(result||0)}else update.set(from.get())}}}service.registerHandler(field,handler,field.updateSchema,watch.initialize)}})}function isConditionFunction(e){return e&&e.match(/(\\!?)(.+)\\((.+)\\)/)}function parseCondition(condition,original){var service=this,invert=condition[1],functionName=condition[2],functionArgument=condition[3];if(\"any\"===functionName){var predicate=functionArgument.match(/(.+)\\[\\]\\.*(.*)(===|>|<|>=|<=)(.+)/),arr=service.parseExpression(predicate[1]).get(),comparator=predicate[3],comparisonValue=predicate[4].trim().replace(/'/g,\"\"),key=predicate[2].trim(),evaluation=!1;return arr.forEach(function(e){var r=key?e[key]:e;evaluatePredicate(r,comparator,comparisonValue)&&(evaluation=!0)}),invert?(!evaluation).toString():evaluation.toString()}return condition=original.replace(/model\\./g,\"service.model.\"),!!eval(condition)+\"\"}function evaluatePredicate(e,r,n){switch(r){case\"===\":return e===n;case\">=\":return e>=n;case\"<=\":return n>=e;case\">\":return e>n;case\"<\":return n>e}}function registerHandler(e,r,n,t){var o=this;if(_.isObject(e)&&!_.isArray(e)){if(!e.key&&e.items)return void _.each(e.items,function(e){o.registerHandler(e,r,e.updateSchema)});e=e.key}e=o.getKey(e);var a=e.match(/([^[\\]]*)\\[]\\.?(.+)/);if(a)return void o.registerArrayHandlers(a[1],a[2],r,n,t);var s=o.parseExpression(e,o.model).get();if(!o.listeners[e]){var i=angular.copy(s);o.listeners[e]={handlers:[],updateSchema:n,prev:i}}r&&(o.listeners[e].handlers.push(r),t&&r(s,null,e))}function registerArrayHandlers(e,r,n,t,o){var a=this,s=function(s,i,c){if(i||0===i){var l,m,d;if(i>s||c){var p=e+\"[\"+(i-1)+\"].\"+r;if(a.listeners[p])for(l=0,m=i;m>l;l++)d=e+\"[\"+l+\"].\"+r,a.deregisterHandlers(d);for(l=0,m=s;m>l;l++)d=e+\"[\"+l+\"].\"+r,a.registerHandler(d,n,t)}else if(s>(i||0))for(l=i,m=s;m>l;l++)d=e+\"[\"+l+\"].\"+r,a.registerHandler(d,n,t,o)}},i=a.parseExpression(e,a.model).get();_.each(i,function(s,i){var c=e+\"[\"+i+\"].\"+r;a.registerHandler(c,n,t),o&&n(null,null,c)}),a.arrayListeners[e+\".length\"]?a.arrayListeners[e+\".length\"].handlers.push(s):a.arrayListeners[e+\".length\"]={handlers:[s],prev:i?i.length:0}}function deregisterHandlers(e){var r=this;e=r.getKey(e);var n=e.match(/([^[\\]]*)\\[]\\.?(.+)/);return n?void r.deregisterArrayHandlers(n[1],n[2]):void(r.listeners[e]&&(r.listeners[e].handlers=[]))}function deregisterArrayHandlers(e,r){var n=this;n.parseExpression(e,n.model).get().forEach(function(t,o){n.deregisterHandlers(e+\"[\"+o+\"].\"+r)})}function initModelWatch(){var e=this;e.watching||(e.modelWatch&&e.modelWatch(),e.modelWatch=$rootScope.$watch(function(){return e.model},e.onModelWatch.bind(e),!0),e.initSchemaParams(),e.watching=!0,e.firstUpdate=!0)}function onModelWatch(e,r){var n=this;(n.firstUpdate||!angular.equals(e,r))&&(n.firstUpdate=!1,cnUtil.cleanModel(n.model),n.prevParams=angular.copy(n.params),n.params={},_.each(n.arrayListeners,function(e,r){var t=n.parseExpression(r,n.model).get();angular.equals(t,e.prev)||(_.each(e.handlers,function(r){r(t,e.prev)}),e.prev=angular.copy(t))}),_.each(n.listeners,function(e,r){if(e){var t=n.parseExpression(r,n.model).get();angular.equals(t,e.prev)||(_.each(e.handlers,function(n){n(t,e.prev,r,e.trigger)}),e.trigger=null,e.prev=angular.copy(t)),e.updateSchema&&!angular.isUndefined(t)&&null!==t&&(n.params[r]=t)}}),angular.equals(n.params,n.prevParams)||(n.model.id&&!n.updates&&_.isEmpty(n.prevParams)?++n.updates:n.refreshSchema()))}function initSchemaParams(){var e=this;_.each(e.listeners,function(r,n){if(r){var t=e.parseExpression(n,e.model).get();r.updateSchema&&!angular.isUndefined(t)&&null!==t&&(e.params[n]=t)}})}function initArrayCopyWatch(){console.log(\"initArrayCopyWatch: how many times does this event get registered?\");var e=this;e.events.push($rootScope.$on(\"schemaFormPropagateScope\",function(r,n){var t=e.getKey(n.form.key),o=t.match(/^.*\\[(\\d+)].*$/);t=t.replace(/\\[\\d+]/g,\"[]\"),o=o&&parseInt(o[1]),n.form.condition||(n.form.condition=\"true\"),e.addArrayCopy(n.form,t,o),n.$emit(\"flexFormArrayCopyAdded\",t)})),e.events.push($rootScope.$on(\"schemaFormDeleteScope\",function(r,n,t){console.log(\"schemaFormDeleteScope:\",t,n.form,n);var o=e.getKey(n.form.key).replace(/\\[\\d+]/g,\"[]\"),a=e.getArrayCopiesFor(o);if(a.forEach(function(e){e.splice(t,1)}),n.form.link){var s=e.parseExpression(n.form.link,e.model).get();s.splice(t,1)}}))}function addArrayCopy(e,r,n){var t=this;(!n||0>n)&&(n=0),t.arrayCopies[r]||(t.arrayCopies[r]=[]),t.arrayCopies[r][n]=e}function getArrayCopies(e){var r=this;return r.arrayCopies[e]}function getArrayCopiesFor(e){var r=this,n=[];return e+=\"[]\",_.each(r.arrayCopies,function(r,t){t.includes(e)&&n.push(r)}),n}function addToFormCache(e,r){var n=this;r=r||n.getKey(e.key),n.getFromFormCache(r)||(n.formCache[r]=e)}function getFromFormCache(e){var r=this;return r.formCache[e]}function addToDataCache(e,r){var n=this;e&&(n.dataCache[e]=r)}function getFromDataCache(e){var r=this;return r.dataCache[e]}function parseExpression(exp,depth){var service=this;if(!exp||/^(null|false|true|undefined|''|[0-9.]+|\\[]|\\{})$/.test(exp))return{get:function get(){return eval(exp)}};exp=service.getKey(exp);var match=exp.match(/^(model\\.)?(\\S+)$/),modelValue={get:function(){for(var e=sfPath.parse(exp),r=depth||service;r&&e.length>1;)r=r[e.shift()];return r&&r[e[0]]},set:function(e){for(var r=sfPath.parse(exp),n=depth||service;n&&r.length>1;){var t=r.shift();n[t]||(/^\\d?$/.test(r[0])?n[t]=[]:n[t]={}),n=n[t]}return n[r[0]]=e,e},path:function(){return{exp:exp,depth:depth,key:match[2]}}};return modelValue}function processArray(e){var r=this,n=r.getKey(e.key);e.sortOptions={update:function(e,t){var o=r.arrayListeners[n+\".length\"];o.handlers.forEach(function(e){e(o.prev,o.prev,!0)})}},r.processSection(e)}function processSection(e){var r=this;_.each(e.items,r.processField.bind(r))}function processComponent(e){var r=this;e.type=\"section\",e.htmlClass=\"row\";var n=12/_.reject(e.items,\"hidden\").length;_.each(e.items,function(t,o){r.processField(t),e.items[o]={type:\"section\",htmlClass:\"col-sm-\"+n,items:[t]}})}function processCurrency(e){e.currencyFormat={\"currency-dollars\":\"dollars\",\"currency-microcents\":\"microcents\",currency:\"cents\"}[e.schema.format],e.type=\"cn-currency\"}function processPercentage(e){e.type=\"cn-percentage\"}function processReusable(e){var r=this;e.type=\"cn-reusable\",e.view=e.view||\"new\",e.items.forEach(r.processField.bind(r)),e.items=[{type:\"section\",items:e.items,condition:\"!model.\"+r.getKey(e.key)+\".id\"}]}function processMediaUpload(e){var r=this;e.type=\"cn-mediaupload\",_.each(e.data,function(n,t){e.data[t]=r.parseExpression(n).get()})}function processCsvUpload(e){e.type=\"cn-csvupload\"}function processRadiobuttons(e){e.type=\"cn-radiobuttons\",e.fullWidth&&(e.btnClass=\"col-sm-\"+_.divide(12,e.titleMap.length))}function processDate(e){e.type=\"cn-datetimepicker\",\"time-minutes\"===e.schema.format&&(e.maxView=\"hour\",e.iconClass=\"fa fa-clock-o\",e.modelFormatter=function(e){if(e){var r=moment(e);return _.add(_.multiply(r.hours(),60),r.minutes())}},e.modelParser=function(e){if(e){var r=parseInt(e),n=_.floor(r/60),t=r%60;return moment().startOf(\"day\").add(\"hours\",n).add(\"minutes\",t)}},e.viewFormatter=function(r){return r?e.modelParser(r).format(e.dateFormat):void 0},e.viewParser=function(e){if(e){var r=e.match(/^(\\d{1,2}):?(\\d{1,2})? (a|p)/);if(r){var n=_.add(\"12\"===r[1]?0:r[1],\"a\"===r[3]?0:12),t=r[2]||\"00\";return 1===t.length&&(t+=\"0\"),_.add(_.multiply(n,60),t)}}})}function processSelect(e){var r=this,n=e.schema;if((e.titleMapResolve||e.titleMap)&&(e.getTitleMap=function(){return e.titleMap||r.schema.data[e.titleMapResolve]},e.onInit=function(n,t,o,a){var s=r.parseExpression(t.key,r.model);if(n=s.get(),\"tag-init\"===o){var i;if(\"array\"===t.schema.type)i=[],_.each(n,function(r){var n=e.valueProperty||\"object\"!==e.schema.items.type&&\"value\",t=n?_defineProperty({},n,r):r;i.push(_.find(e.getTitleMap(),t))});else{var c=e.valueProperty||\"object\"!==t.schema.type&&\"value\",l=c?_defineProperty({},c,n):n;i=_.find(e.getTitleMap(),l)}i&&a(i)}}),e.titleMapQuery){var t=e.titleMapQuery.params.q;e.titleQuery=function(r){console.log(\"titleMap:\",r);var n={};return t&&(n[t]=r),Api.get({url:e.titleMapQuery.url,params:n})},t||(e.minLookup=\"0\"),e.onInit=function(e,r,n,t){\"tag-init\"===n&&t(e)}}if(n.items){var o=[];_.each(n.items.properties,function(e,r){angular.isDefined(e[\"default\"])&&o.push({key:r,\"default\":e[\"default\"]})}),o.length&&(e.onAdd=function(e,r,n){e.value&&\"tag-added\"===n&&_.each(o,function(r){e.value[r.key]||(e.value[r.key]=r[\"default\"])})})}e.type.includes(\"cn-autocomplete\")||(e.items?(e.detailedList=!0,\"component\"!==e.items[0].type&&(e.items.length>1&&(e.items=[{type:\"component\",items:e.items}]),r.processFieldset(e)),e.type=\"cn-autocomplete-detailed\"):(e.selectionStyle||(\"tags\"===e.key?e.selectionStyle=\"tags\":\"array\"===e.getSchemaType()&&1!==e.schema.maxItems?e.selectionStyle=\"list\":e.selectionStyle=\"select\"),e.type=\"cn-autocomplete\")),e.displayFormat&&(e.itemFormatter=r.processTemplate(e.displayFormat)),r.registerHandler(e.key,function(n){var t=r.formCtrl&&r.formCtrl[r.getKey(e.key)];t&&t.$setDirty&&t.$setDirty()},e.updateSchema)}function processToggle(e){e.type=\"cn-toggle\"}function processHelp(e){e.htmlClass=\"help-block\"}function processDisplay(e){var r=this;e.type=\"cn-display\",e.getDisplay=r.processTemplate(e.displayFormat,!0)}function processTemplate(e,r){var n=this,t=$interpolate;return function(o,a){return r&&(angular.isDefined(a)&&(o=_.map(o,function(e){return\"arrayIndex\"===e?a:e})),o=n.parseExpression(o,n.model).get()),t(e)(o)}}function processTable(e){var r=this;e.type=\"cn-table\",e.items.forEach(function(n){for(var t=0;t<e.columns.length;t++)_.extend(n.items[t],e.columns[t]),r.processField(n.items[t])})}function processSelectDisplay(e,r){var n,t=this,o=_.find(e.items,\"selectField\");n=r&&\"array\"===r.type?t.setupArraySelectDisplay(e,o):t.setupSelectDisplay(e,o),e.selectDisplay=!1,t.registerHandler(o.key,n,o.updateSchema,!0),t.processField(e)}function setupArraySelectDisplay(e,r){var n=this;_.each(e.items,function(e){\"false\"!==e.condition&&(e.condition=\"true\")});var t=function(t,o,a){var s=getArrayIndex(a);_.each(e.items,function(e){var t=n.getKey(r.key),o=n.getKey(e.key),a=ObjectPath.parse(o);if(t!==o){var i=n.setArrayIndex(t,s),c=n.parseExpression(i,n.model).get(),l=n.getArrayCopies(o);_.includes(c,a[a.length-1])?_.each(l,function(e){getArrayIndex(e)==s&&(e.condition=\"true\")}):_.each(l,function(e){getArrayIndex(e)==s&&(e.condition=\"false\",n.parseExpression(n.getKey(e.key),n.model).set())})}})},o=n.parseExpression(n.getKey(e.key),n.model).get();_.each(e.items,function(e){var t=n.getKey(e.key),a=n.getKey(r.key);t!==a&&_.each(o,function(e,r){var o=n.setArrayIndex(t,r),s=ObjectPath.parse(o),i=n.setArrayIndex(a,r),c=n.parseExpression(i,n.model),l=c.get(),m=n.parseExpression(o,n.model).get();m&&!_.includes(l,s[s.length-1])&&(l||(l=[]),l.push(s[s.length-1]),c.set(l))})});var a=n.getSchema(e.key)[\"default\"];_.each(a,function(e,t){var o=n.getKey(r.key),a=n.setArrayIndex(o,t),s=n.parseExpression(a,n.model),i=s.get();_.each(e,function(e,r){i||(i=[]),i.push(r),s.set(i)})});var s=0,i=_.pluck(_.reject(e.items,{condition:\"false\"}),\"key\"),c=$rootScope.$on(\"flexFormArrayCopyAdded\",function(r,o){var a=n.parseExpression(n.getKey(e.key),n.model).get();if(a){var c=a.length*i.length;if(_.includes(i,o)&&s++,s===c){for(var l=0;l<a.length;l++)t(null,null,\"[\"+l+\"]\");s=0}}}),l=$rootScope.$on(\"flexForm.updatePage\",function(){s=0});return n.events.push(c),n.events.push(l),t}function setupSelectDisplay(e,r){var n=this,t=function(){var t=n.getKey(r.key);_.each(e.items,function(e){var r=n.getKey(e.key),o=ObjectPath.parse(r);if(t!==r){var a=n.parseExpression(t,n.model).get();_.includes(a,o[o.length-1])?e.condition=\"true\":(e.condition=\"false\",n.parseExpression(r,n.model).set())}})},o=n.getKey(r.key),a=n.parseExpression(o,n.model),s=a.get();_.each(e.items,function(e){var r=n.getKey(e.key);if(o!==r){var t=ObjectPath.parse(r),i=n.parseExpression(r,n.model).get();i&&!_.includes(s,t[t.length-1])&&(s||(s=[]),s.push(t[t.length-1]),a.set(s))}});var i=n.getSchema(e.key)[\"default\"];_.each(i,function(e,r){s||(s=[]),s.push(r),a.set(s)});var c=n.parseExpression(e.key,n.model);return i&&!c.get()&&c.set(i),t}function setupSchemaRefresh(e){var r=this;r.refreshSchema=_.debounce(function(n){var t=_.extend(cnFlexFormConfig.getStateParams(),r.params);console.log(\"service.schema.params, params:\",r.schema.params,t);var o,a=cnUtil.diff(r.schema.params,t,!0);(a||n)&&(n?t.updateSchema=n:(o=_.keys(a),o.length>1&&(a=_.omit(a,_.isNull),o=_.keys(a)),t.updateSchema=_.first(o)),t.updateSchema||(a=cnUtil.diff(t,_.omit(r.schema.params,\"updateSchema\")),o=_.keys(a),t.updateSchema=_.first(o)),e(t).then(function(e){++r.updates,r.processUpdatedSchema(e)}))},100),r.refreshData=_.debounce(function(){e(_.extend(r.schema.params,{updateSchema:\"refreshData\"})).then(function(e){r.processUpdatedSchema(e),console.log(\"service.schema.params:\",r.schema.params)})},100),r.events.push($rootScope.$on(\"ffRefreshData\",r.refreshData))}function processUpdatedSchema(e){var r=this;if(e.diff){r.schema.params=e.params,e.diff.data&&_.each(e.diff.data,function(e,n){e&&e.data&&!_.isEmpty(r.schema.data[n].data)&&!e.reset&&(e.data=r.schema.data[n].data.concat(e.data)),r.schema.data[n]=e,r.resolveRegister[n]&&_.each(r.resolveRegister[n],function(e){e.forEach(function(e){r.handleResolve(e.field,e.prop,\"schema.data.\"+n)})})});var n=[];e.diff.schema&&_.each(e.diff.schema,function(e,t){r.schema.schema.properties[t]=e,reprocessSchema(e,t,n)}),e.diff.form&&_.each(e.diff.form,function(e){-1===n.indexOf(e.key)&&n.push(e.key);var t=r.getFromFormCache(e.key);t&&r.reprocessField(t,e);var o=r.getArrayCopies(e.key);o&&_.each(o,function(n){r.reprocessField(n,e)})}),n.length&&_.each(n,function(e){var n=r.getFromFormCache(e);if(n&&r.processField(n),e.includes(\"[]\")){var t=r.getArrayCopies(e);_.each(t,function(e){e&&r.processField(e)})}}),r.broadcastErrors()}else r.updateSchema(e)}function reprocessField(e,r,n){var t=this;_.extend(e,_.omit(r,\"items\",\"key\")),e._ogKeys.forEach(function(n){r[n]||delete e[n]}),e._ogKeys=_.keys(r),t.deregisterHandlers(r.key),!n&&e.redraw&&e.redraw()}function reprocessSchema(e,r,n){n.push(r),e.properties&&_.each(e.properties,function(e,t){reprocessSchema(e,r+\".\"+t,n)}),e.items&&e.items.properties&&_.each(e.properties,function(e,t){reprocessSchema(e,r+\"[].\"+t,n)})}function buildError(e){var r=this,n=r.getKey(e.key);return{key:n,message:e.error}}function broadcastErrors(){var e=this;$timeout(function(){e.errors.forEach(function(e){$rootScope.$broadcast(\"schemaForm.error.\"+e.key,\"serverValidation\",e.message)})},1)}function replaceArrayIndex(e,r){var n=/([^.]*)\\[arrayIndex\\]/.exec(e),t=new RegExp(n[1]+\"\\\\[(\\\\d+)\\\\]\"),o=t.exec(r);return e.replace(n[0],o[0])}function getArrayIndex(e){return _.isObject(e)?_.find(e.key,function(e){return _.isNumber(e)}):/\\[(\\d+)\\]/.exec(e)[1]}function setArrayIndex(e,r,n){var t,o=this;t=_.isString(e)?ObjectPath.parse(e):_.clone(e);var a=t.indexOf(\"\");return t[a]=r,n?t:o.getKey(t)}function cleanup(){var e=this;_.each(e.events,function(e){e()})}var services=[],prototype={compile:compile,addArrayCopy:addArrayCopy,addToDataCache:addToDataCache,addToFormCache:addToFormCache,broadcastErrors:broadcastErrors,buildError:buildError,cleanup:cleanup,deregisterHandlers:deregisterHandlers,deregisterArrayHandlers:deregisterArrayHandlers,getArrayCopies:getArrayCopies,getArrayCopiesFor:getArrayCopiesFor,getFromDataCache:getFromDataCache,getFromFormCache:getFromFormCache,getKey:getKey,getSchema:getSchema,handleResolve:handleResolve,initArrayCopyWatch:initArrayCopyWatch,initModelWatch:initModelWatch,initSchemaParams:initSchemaParams,isCompiled:isCompiled,isConditionFunction:isConditionFunction,onModelWatch:onModelWatch,parseCondition:parseCondition,parseExpression:parseExpression,processArray:processArray,processDefault:processDefault,processDisplay:processDisplay,processField:processField,processFieldset:processFieldset,processFieldWatch:processFieldWatch,processComponent:processComponent,processCurrency:processCurrency,processPercentage:processPercentage,processDate:processDate,processHelp:processHelp,processRadiobuttons:processRadiobuttons,processReusable:processReusable,processSchema:processSchema,processSelectDisplay:processSelectDisplay,processResolve:processResolve,processSection:processSection,processSelect:processSelect,processTable:processTable,processTemplate:processTemplate,processToggle:processToggle,processUpdatedSchema:processUpdatedSchema,processMediaUpload:processMediaUpload,processCsvUpload:processCsvUpload,registerArrayHandlers:registerArrayHandlers,registerHandler:registerHandler,registerResolve:registerResolve,reprocessField:reprocessField,setArrayIndex:setArrayIndex,setupConfig:setupConfig,setupArraySelectDisplay:setupArraySelectDisplay,setupSelectDisplay:setupSelectDisplay,setupSchemaRefresh:setupSchemaRefresh};return _.extend(CNFlexForm.prototype,prototype),_.extend(CNFlexFormConstructor,prototype),CNFlexFormConstructor}angular.module(\"cn.flex-form\").provider(\"cnFlexFormService\",cnFlexFormServiceProvider);var fieldTypeHandlers={\"cn-radiobuttons\":\"processRadiobuttons\",\"cn-autocomplete\":\"processSelect\",\"cn-datetimepicker\":\"processDate\",help:\"processHelp\",\"cn-display\":\"processDisplay\",\"cn-currency\":\"processCurrency\",\"cn-percentage\":\"processPercentage\",\"cn-mediaupload\":\"processMediaUpload\",\"cn-csvupload\":\"processCsvUpload\",\n\"cn-reusable\":\"processReusable\",\"cn-toggle\":\"processToggle\",\"cn-table\":\"processTable\",array:\"processArray\"};cnFlexFormServiceProvider.$inject=[\"schemaFormDecoratorsProvider\",\"cnFlexFormTypesProvider\"],CNFlexFormService.$inject=[\"Api\",\"$parse\",\"cnFlexFormConfig\",\"cnFlexFormTypes\",\"sfPath\",\"$interpolate\",\"$rootScope\",\"$timeout\",\"cnUtil\",\"$stateParams\"]}(),function(){function e(){function e(){console.log(\"FlexFormSandbox\")}function r(){if(n.schemaStr){var e=angular.fromJson(n.schemaStr);console.log(\"schema:\",e),!e.form&&e.forms&&(e.form=e.forms[0].form),n.config.schema=e.form&&e}}var n=this;n.activate=e,n.onSchema=r,n.model={},n.config={},n.schemaStr=\"\",e()}angular.module(\"cn.flex-form\").controller(\"FlexFormSandbox\",e)}(),function(){function e(e){var r=[\"cn-fieldset\",\"cn-toggle\",\"cn-datetimepicker\",\"cn-autocomplete\",\"cn-autocomplete-detailed\",\"cn-currency\",\"cn-radiobuttons\",\"cn-percentage\",\"cn-display\",\"cn-mediaupload\",\"cn-csvupload\",\"cn-reusable\",\"cn-table\"];_.each(r,function(r){e.registerField({type:r,templateUrl:\"app/components/cn-flex-form/forms/\"+r+\".html\"})})}function r(e){e.put(\"app/components/cn-flex-form/forms/cn-toggle.html\",'\\n        <div class=\"form-group {{form.htmlClass}}\"\\n             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\n          <label class=\"control-label\" ng-show=\"showTitle()\">{{form.title}}</label>\\n          <div class=\"clearfix\">\\n            <cn-toggle-switch\\n              class=\"pull-left\"\\n              ng-show=\"form.key\"\\n              ng-model-options=\"form.ngModelOptions\"\\n              ng-model=\"$$value$$\"\\n              sf-changed=\"form\"\\n              schema-validate=\"form\"\\n              on-value=\"form.onValue\"\\n              off-value=\"form.offValue\"\\n              undefined-class=\"form.undefinedClass\"/>\\n            <span ng-show=\"form.onText && form.offText\">\\n              {{$$value$$ === form.onValue ? form.onText : form.offText}}\\n            </span>\\n          </div>\\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\\n        </div>'),e.put(\"app/components/cn-flex-form/forms/cn-datetimepicker.html\",'\\n        <div class=\"form-group {{form.htmlClass}}\"\\n             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\n          <label class=\"control-label\"\\n                 for=\"{{form.key.join(\\'.\\')}}\"\\n                 ng-show=\"showTitle()\">{{form.title}}</label>\\n          <cn-datetimepicker\\n            ng-show=\"form.key\"\\n            ng-model=\"$$value$$\"\\n            ng-model-options=\"form.ngModelOptions\"\\n            is-disabled=\"form.readonly\"\\n            sf-changed=\"form\"\\n            schema-validate=\"form\"\\n            input-id=\"{{form.key.join(\\'.\\')}}\"\\n            min-date=\"form.minDate\"\\n            max-view=\"{{form.maxView}}\"\\n            cn-date-required=\"form.required\"\\n            placeholder=\"{{form.placeholder}}\"\\n            model-type=\"{{form.schema.type}}\"\\n            model-formatter=\"form.modelFormatter\"\\n            model-parser=\"form.modelParser\"\\n            view-formatter=\"form.viewFormatter\"\\n            view-parser=\"form.viewParser\"\\n            format-string={{form.dateFormat}}\\n            icon-class={{form.iconClass}}>\\n          </cn-datetimepicker>\\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\\n        </div>');var r='\\n          <tags-input\\n            ng-show=\"form.key\"\\n            ng-model=\"$$value$$\"\\n            ng-model-options=\"form.ngModelOptions\"\\n            ng-disabled=\"form.readonly\"\\n            sf-changed=\"form\"\\n            schema-validate=\"form\"\\n            input-id=\"{{form.key.join(\\'.\\')}}\"\\n            display-property=\"{{form.displayProperty || \\'name\\'}}\"\\n            value-property=\"{{form.valueProperty}}\"\\n            placeholder=\"{{form.placeholder || \\' \\'}}\"\\n            add-on-blur=\"true\"\\n            add-on-comma=\"false\"\\n            add-from-autocomplete-only=\"{{!form.allowNew}}\"\\n            on-before-tag-added=\"form.onAdd({value: $tag}, form, $event, $prev)\"\\n            on-init=\"form.onInit($tag, form, $event, $setter)\"\\n            model-type=\"{{form.getSchemaType()}}\"\\n            array-value-type=\"{{form.schema.items.type}}\"\\n            hide-tags=\"{{form.detailedList}}\"\\n            tags-style=\"{{form.selectionStyle}}\"\\n            required=\"{{form.required}}\"\\n            min-length=\"{{form.minLength}}\"\\n            allowed-tags-pattern=\".*\"\\n            dropdown=\"true\"\\n            item-formatter=\"form.itemFormatter\"\\n            min-tags=\"{{form.schema.minItems}}\"\\n            max-tags=\"{{form.schema.maxItems || form.getSchemaType() !== \\'array\\' ? 1 : 0}}\"\\n            allow-bulk=\"{{form.bulkAdd}}\"\\n            bulk-delimiter=\"{{form.bulkDelimiter}}\"\\n            bulk-placeholder=\"{{form.bulkPlaceholder}}\"\\n            show-button=\"true\">\\n            <auto-complete\\n              source=\"form.getTitleMap && form.getTitleMap() || form.titleQuery($query)\"\\n              skip-filtering=\"{{form.titleQuery ? true : false}}\"\\n              min-length=\"{{form.minLookup || (form.titleQuery && 3 || 0)}}\">\\n            </auto-complete>\\n          </tags-input>';e.put(\"app/components/cn-flex-form/forms/cn-autocomplete.html\",'\\n        <div class=\"form-group {{form.htmlClass}}\"\\n             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\n          <label class=\"control-label\"\\n                 for=\"{{form.key.join(\\'.\\')}}-input\"\\n                 ng-show=\"showTitle()\">{{form.title}}</label>\\n          '+r+'\\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\\n        </div>'),e.put(\"app/components/cn-flex-form/forms/cn-autocomplete-detailed.html\",'\\n        <div sf-array=\"form\"\\n             class=\"form-group {{form.htmlClass}}\"\\n             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\n          <label class=\"control-label\"\\n                 for=\"{{form.key.join(\\'.\\')}}-input\"\\n                 ng-show=\"showTitle()\">{{form.title}}</label>\\n          <ol class=\"list-group cn-autocomplete-list\"\\n              ng-show=\"modelArray.length\"\\n              ng-model=\"modelArray\">\\n            <li class=\"list-group-item {{form.fieldHtmlClass}}\"\\n                ng-repeat=\"item in modelArray track by $index\">\\n              <button ng-hide=\"form.readonly || form.remove === null\"\\n                      ng-click=\"deleteFromArray($index)\"\\n                      type=\"button\" class=\"close pull-right\">\\n                <span aria-hidden=\"true\">&times;</span>\\n              </button>\\n              <sf-decorator ng-init=\"arrayIndex = $index\" form=\"copyWithIndex($index)\"/>\\n            </li>\\n          </ol>\\n          '+r+'\\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\\n        </div>'),e.put(\"app/components/cn-flex-form/forms/cn-currency.html\",'\\n        <div class=\"form-group {{form.htmlClass}}\"\\n             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\n          <label class=\"control-label\"\\n                 ng-show=\"showTitle()\"\\n                 for=\"{{form.key.join(\\'.\\')}}\">{{form.title}}</label>\\n          <div class=\"{{form.fieldClass}} input-group\">\\n            <label class=\"input-group-addon\"\\n                   ng-disabled=\"form.readonly\"\\n                   for=\"{{form.key.join(\\'.\\')}}\">$</label>\\n            <input class=\"form-control\"\\n                   cn-currency-format=\"{{form.currencyFormat}}\"\\n                   cn-currency-placeholder=\"{{form.placeholder}}\"\\n                   ng-show=\"form.key\"\\n                   ng-model-options=\"form.ngModelOptions\"\\n                   ng-disabled=\"form.readonly\"\\n                   sf-changed=\"form\"\\n                   schema-validate=\"form\"\\n                   ff-validate=\"form\"\\n                   type=\"text\"\\n                   step=\"any\"\\n                   min=\"{{form.min}}\"\\n                   max=\"{{form.max}}\"\\n                   id=\"{{form.key.join(\\'.\\')}}\"\\n                   name=\"{{form.key.join(\\'.\\')}}\"\\n                   ng-model=\"$$value$$\">\\n          </div>\\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\\n        </div>'),e.put(\"app/components/cn-flex-form/forms/cn-radiobuttons.html\",'\\n        <div class=\"form-group schema-form-radiobuttons cn-radiobuttons {{form.htmlClass}}\"\\n             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\n          <label class=\"control-label\" ng-show=\"showTitle()\">{{form.title}}</label>\\n          <div class=\"btn-group clearfix\">\\n            <label class=\"btn btn-{{item.value}} {{form.btnClass}} {{item.value === $$value$$ ? \\'active\\' : \\'\\'}}\"\\n                   ng-repeat=\"item in form.titleMap\">\\n              <input type=\"radio\"\\n                     class=\"{{form.fieldHtmlClass}} hide\"\\n                     sf-changed=\"form\"\\n                     ng-disabled=\"form.readonly\"\\n                     ng-model=\"$$value$$\"\\n                     ng-model-options=\"form.ngModelOptions\"\\n                     schema-validate=\"form\"\\n                     ff-validate=\"form\"\\n                     ng-value=\"item.value\"\\n                     name=\"{{form.key.join(\\'.\\')}}\">\\n              <i class=\"fa fa-{{item.value}} fa-lg\"></i>\\n              <span ng-bind-html=\"item.name\"></span>\\n            </label>\\n          </div>\\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\\n        </div>'),e.put(\"app/components/cn-flex-form/forms/cn-percentage.html\",'\\n        <div class=\"form-group {{form.htmlClass}}\"\\n             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\n          <label class=\"control-label\"\\n                 ng-show=\"showTitle()\"\\n                 for=\"{{form.key && form.key[0]}}\">{{form.title}}</label>\\n          <div class=\"{{form.fieldClass}} input-group\">\\n            <input class=\"form-control\"\\n                   cn-percentage-format\\n                   ng-show=\"form.key\"\\n                   ng-model-options=\"form.ngModelOptions\"\\n                   ng-disabled=\"form.readonly\"\\n                   sf-changed=\"form\"\\n                   schema-validate=\"form\"\\n                   type=\"number\"\\n                   step=\"any\"\\n                   min=\"{{form.min}}\"\\n                   max=\"{{form.max}}\"\\n                   id=\"{{form.key && form.key[0]}}\"\\n                   name=\"{{form.key && form.key[0]}}\"\\n                   ng-model=\"$$value$$\">\\n             <div class=\"input-group-addon\"\\n                    ng-disabled=\"form.readonly\"\\n                    for=\"{{form.key && form.key[0]}}\">%</div>\\n          </div>\\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\\n        </div>'),e.put(\"app/components/cn-flex-form/forms/cn-display.html\",'\\n        <div class=\"form-group cn-display{{form.htmlClass}}\">\\n          <input ng-show=\"form.key\"\\n                 class=\"form-control\"\\n                 id=\"{{form.key.join(\\'.\\')}}\"\\n                 name=\"{{form.key.join(\\'.\\')}}\"\\n                 ng-disabled=\"true\"\\n                 value=\"{{form.getDisplay(form.key, form.arrayIndex)}}\">\\n        </div>'),e.put(\"app/components/cn-flex-form/forms/cn-fieldset.html\",'\\n        <fieldset ng-disabled=\"form.readonly\" class=\"schema-form-fieldset {{form.htmlClass}}\">\\n          <legend ng-click=\"form.toggleCollapse()\"\\n                  ng-class=\"{\\'sr-only\\': !showTitle(), collapsible: form.collapsible}\"\\n                  ng-mouseenter=\"form.render = true\">\\n            <i ng-show=\"form.collapsible\"\\n               class=\"fa fa-caret-{{form.collapsed ? \\'right\\' : \\'down\\'}}\"></i>\\n            {{ form.title }}\\n          </legend>\\n          <div class=\"help-block\" ng-show=\"form.description\" ng-bind-html=\"form.description\"></div>\\n          <div collapse=\"form.collapsed\">\\n            <div ng-if=\"form.render\">\\n              <sf-decorator ng-repeat=\"item in form.items\" form=\"item\"/>\\n            </div>\\n          </div>\\n        </fieldset>'),e.put(\"app/components/cn-flex-form/forms/cn-mediaupload.html\",'\\n        <div class=\"form-group {{form.htmlClass}}\"\\n             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\n          <label class=\"control-label\"\\n                 ng-show=\"showTitle()\"\\n                 for=\"{{form.key && form.key[0]}}\">{{form.title}}</label>\\n          <media-upload ng-model=\"$$value$$\"\\n                        cn-file-type=\"form.fileType\"\\n                        cn-upload-path=\"form.uploadPath\"\\n                        cn-data=\"form.data\"\\n                        cn-preview-path=\"form.previewPath\"\\n                        cn-model-value-key=\"form.modelValueKey\"\\n                        ng-model-options=\"form.ngModelOptions\"\\n                        sf-changed=\"form\"\\n                        schema-validate=\"form\"\\n                        ff-form=\"form\"\\n                        class=\"clearfix\">\\n          </media-upload>\\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\\n       </div>'),e.put(\"app/components/cn-flex-form/forms/cn-csvupload.html\",'\\n        <div class=\"form-group {{form.htmlClass}}\"\\n             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\n          <label class=\"control-label\"\\n                 ng-show=\"showTitle()\"\\n                 for=\"{{form.key && form.key[0]}}\">{{form.title}}</label>\\n          <csv-upload ng-model=\"$$value$$\"\\n                        cn-upload-path=\"form.uploadPath\"\\n                        ng-model-options=\"form.ngModelOptions\"\\n                        sf-changed=\"form\"\\n                        schema-validate=\"form\"\\n                        ff-form=\"form\"\\n                        class=\"clearfix\">\\n          </csv-upload>\\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\\n       </div>'),e.put(\"app/components/cn-flex-form/forms/cn-reusable.html\",'\\n        <div class=\"form-group cn-reusable {{form.htmlClass}}\"\\n             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\n          <label class=\"control-label\"\\n                 ng-show=\"showTitle()\"\\n                 for=\"{{form.key.join(\\'.\\')}}\">{{form.title}}</label>\\n          <cn-select-or\\n            ng-show=\"form.key\"\\n            select-from=\"form.library\"\\n            ng-model=\"$$value$$\"\\n            ng-model-options=\"form.ngModelOptions\"\\n            sf-changed=\"form\"\\n            schema-validate=\"form\"\\n            ff-form=\"form\"\\n            directiveId=\"form.directiveId\"\\n            item-template=\"form.itemTemplate\"\\n            toggle-text=\"form.toggleText\"\\n            disabled=\"form.readonly\"\\n            view=\"form.view\">\\n            <sf-decorator ng-repeat=\"item in form.items\" form=\"item\"/>\\n          </cn-select-or>\\n          <p ng-if=\"form.loadMore && form.view === \\'list\\'\">\\n            <a ng-click=\"form.loadMore()\"\\n               class=\"btn btn-default btn-block\">Load More</a>\\n          </p>\\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\\n        </div>'),e.put(\"app/components/cn-flex-form/forms/cn-table.html\",'        <div class=\"form-group cn-ff-table {{form.htmlClass}}\"             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">          <h6>{{form.title}}</h6>          <div class=\"row\">            <div ng-repeat=\"col in form.columns\" class=\"{{col.columnWidth}}\">              <p class=\"column-header\">{{col.columnHeader}}</p>            </div>          </div>          <div class=\"row\" ng-repeat=\"row in form.items\">            <div ng-repeat=\"col in row.items\" class=\"{{col.columnWidth}}\">              <sf-decorator form=\"col\"></sf-decorator>            </div>          </div>          <span class=\"help-block\" sf-message=\"form.description\"></span>        </div>        ')}angular.module(\"cn.flex-form\").config(e).run(r),e.$inject=[\"cnFlexFormServiceProvider\"],r.$inject=[\"$templateCache\"]}();\n//# sourceMappingURL=all.min.js.map\n","(function() {\n  'use strict';\n  angular.module('cn.flex-form', [\n    'ui.router',\n    'schemaForm',\n    'ui.bootstrap.datetimepicker',\n    'cnTagsInput',\n    'cn.util'\n  ]);\n})();","(function() {\n  'use strict';\n  angular\n      .module('cn.flex-form')\n      .provider('cnFlexFormConfig', cnFlexFormConfigProvider);\n\n  function cnFlexFormConfigProvider() {\n\n    cnFlexFormConfig.$inject = ['$stateParams'];\n\n    var ignoreParams = ['page', 'debug', 'sandbox', 'modal', 'modalId'];\n\n    return {\n      addIgnoreParam: addIgnoreParam,\n      $get: cnFlexFormConfig\n    };\n\n    ////////\n\n    function addIgnoreParam(param) {\n      ignoreParams.push(param);\n    }\n\n    function cnFlexFormConfig($stateParams) {\n      return {\n        getStateParams: getStateParams,\n        ignoreParams: ignoreParams\n      };\n\n      ////////\n\n      function getStateParams() {\n        return _\n            .chain($stateParams)\n            .omit(ignoreParams)\n            .omit(function(v) {\n              return _.isUndefined(v) || _.isNull(v);\n            })\n            .value();\n      }\n    }\n\n  }\n\n})();","(function () {\n  'use strict';\n\n  angular\n    .module('cn.flex-form')\n    .directive('cnFlexFormHeader', cnFlexFormHeader);\n\n  function cnFlexFormHeader() {\n    return {\n      restrict: 'E',\n      scope: {\n        config: '=ffHeaderConfig',\n        submit: '&ffSubmit',\n        loadOffscreen: '&ffLoadOffscreen'\n      },\n      controller: FlexFormHeader,\n      bindToController: true,\n      controllerAs: 'vm',\n      template: `\n          <div class=\"col-md-6\">\n            <h5 ng-if=\"vm.config.title.lead\">{{::vm.config.title.lead}}</h5>\n            <h1>{{vm.config.title.main}}</h1>\n            <h5 ng-if=\"vm.config.title.sub\">{{::vm.config.title.sub}}</h5>\n          </div>\n          <div class=\"{{vm.config.buttonContainerClass || 'page-action-btns'}}\">\n            <div class=\"btn-options\"\n                 ng-mouseover=\"vm.loadOffscreen()\">\n              <a class=\"btn\"\n                 ng-if=\"vm.config.actionConfig.returnState\"\n                 ui-sref=\"{{vm.config.actionConfig.returnState}}\">\n                {{vm.config.actionConfig.returnText || 'Cancel'}}\n              </a>\n              <span ng-repeat=\"button in vm.config.actionConfig.actions\">\n                <a class=\"btn {{button.style && 'btn-'+button.style}}\"\n                   ng-disabled=\"vm.isDisabled(button)\"\n                   ng-class=\"{'btn-primary': $index === vm.config.actionConfig.actions.length - 1}\"\n                   ng-click=\"vm.submit({ handler: button.handler})\"\n                   tooltip=\"{{button.helptext}}\"\n                   tooltip-placement=\"bottom\"\n                   ng-bind-html=\"button.text || 'Save'\">\n                </a>\n              </span>\n            </div>\n            <p class=\"data-updated-at text-right\"\n               id=\"data-updated-at\"\n               ng-hide=\"vm.config.noData\">\n              <a ng-click=\"vm.updateData()\">Update Data</a>\n            </p>\n          </div>`\n    };\n  }\n\n  FlexFormHeader.$inject = ['$scope'];\n  function FlexFormHeader($scope) {\n    var vm = this;\n\n    vm.updateData = updateData;\n    vm.isDisabled = isDisabled;\n\n    ///////////\n\n    function updateData() {\n      console.log('updateData:', updateData);\n      $scope.$emit('ffRefreshData');\n    }\n\n    function isDisabled(btnConfig) {\n      if(vm.config.isDisabled) return vm.config.isDisabled(btnConfig);\n      return false;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n      .module('cn.flex-form')\n      .controller('FlexFormModalLoader', FlexFormModalLoader)\n      .factory('FlexFormModal', FlexFormModal);\n\n  FlexFormModalLoader.$inject = [\n    'FlexFormModal', '$state', '$rootScope', '$stateParams'\n  ];\n  function FlexFormModalLoader(FlexFormModal, $state, $rootScope, $stateParams) {\n\n    var vm = this;\n    console.log('FlexFormModalLoader:', $stateParams.modal);\n\n    activate();\n\n    //////////\n\n    function activate() {\n      vm.modal = FlexFormModal.open(vm);\n      vm.modal.result.finally(goBack);\n\n      vm.dismiss = $rootScope.$on('$stateChangeStart', dismissModal);\n    }\n\n    function goBack() {\n      if (!$state.transition) {\n        $state.go('^');\n      }\n    }\n\n    function dismissModal() {\n      console.log('dismissModal:', arguments);\n      vm.dismiss();\n      vm.modal.dismiss();\n    }\n  }\n\n  FlexFormModal.$inject = ['cnFlexFormModalLoaderService', '$modal', '$stateParams'];\n  function FlexFormModal(cnFlexFormModalLoaderService, $modal, $stateParams) {\n\n    var instance = {\n      open: openModal\n    };\n\n    return instance;\n\n    function openModal() {\n      var currentModal = cnFlexFormModalLoaderService.getMapping($stateParams.modal);\n      console.log('currentModal:', currentModal);\n\n      this.modal = $modal.open(currentModal);\n      return this.modal;\n    }\n\n  }\n\n})();\n","(function() {\n  'use strict';\n\n  angular\n      .module('cn.flex-form')\n      .provider('cnFlexFormModalLoaderService', cnFlexFormModalLoaderServiceProvider);\n\n  var modalMap = {};\n  var promiseMap = {};\n\n  function getPromises(state) {\n    var promises = promiseMap[state];\n    if(!promises) {\n      promises = {};\n      promiseMap[state] = promises;\n    }\n    return promises;\n  }\n\n  function getPromise(state, id, $q) {\n    var promises = getPromises(state);\n    var promise = promises[id];\n    if(!promise) {\n      promise = $q.defer();\n      promises[id] = promise;\n    }\n    return promise;\n  }\n\n  function getPromiseForResolve(state, id, $q) {\n    var promises = getPromises(state);\n    var promise = $q.defer();\n    promises[id] = promise;\n    return promise;\n  }\n\n  function cnFlexFormModalLoaderServiceProvider() {\n\n    var provider = {\n      addMapping: addMapping,\n      $get: cnFlexFormModalLoaderService\n    };\n\n    parent.$inject = ['$stateParams', '$q'];\n\n    return provider;\n\n    ////////////\n\n    function addMapping(state, def) {\n      def.resolve = {\n        parent: parent\n      };\n      modalMap[state] = def;\n    }\n\n    function parent($stateParams, $q) {\n      return getPromise($stateParams.modal, $stateParams.modalId, $q).promise;\n    }\n  }\n\n  cnFlexFormModalLoaderService.$inject = ['$q'];\n\n  function cnFlexFormModalLoaderService($q) {\n    var service = {\n      getMapping: getMapping,\n      resolveMapping: resolveMapping\n    };\n\n    return service;\n\n    /////////////\n\n    function resolveMapping(state, id, parent) {\n      var d = getPromiseForResolve(state, id, $q);\n      d.resolve(parent);\n      return d.promise;\n    }\n\n    function getMapping(state) {\n      return modalMap[state];\n    }\n  }\n\n})();","(function() {\n  'use strict';\n  angular\n      .module('cn.flex-form')\n      .provider('cnFlexFormTypes', cnFlexFormTypesProvider);\n\n  function cnFlexFormTypesProvider() {\n\n    var fieldTypeRegister = [{\n      condition: field => field.type === 'hidden',\n      type: 'hidden'\n    }, {\n      condition: field => field.type.includes('radios'),\n      type: 'cn-radios'\n    }, {\n      condition: field => field.type.includes('radiobuttons'),\n      type: 'cn-radiobuttons'\n    }, {\n      condition: field => field.type.includes('autocomplete') || field.titleMap || field.titleMapResolve || field.titleMapQuery,\n      type: 'cn-autocomplete'\n    }, {\n      condition: field => field.type === 'cn-datetimepicker' || field.type === 'datetime-local' || field.type === 'time-minutes',\n      type: 'cn-datetimepicker'\n    }, {\n      condition: field => field.type === 'help',\n      type: 'help'\n    }, {\n      condition: field => field.type.includes('display'),\n      type: 'cn-display'\n    }, {\n      condition: field => field.schema && field.schema.format && field.schema.format.includes('currency'),\n      type: 'cn-currency'\n    }, {\n      condition: field => field.schema && field.schema.format === 'percentage',\n      type: 'cn-percentage'\n    }, {\n      condition: field => field.type === 'toggle' || field.type === 'boolean',\n      type: 'cn-toggle'\n    }, {\n      condition: field => field.type === 'mediaupload',\n      type: 'cn-mediaupload'\n    }, {\n      condition: field => field.type === 'csvupload',\n      type: 'cn-csvupload'\n    }, {\n      condition: field => field.type === 'reusable',\n      type: 'cn-reusable'\n    }, {\n      condition: field => field.type === 'table',\n      type: 'cn-table'\n    }, {\n      condition: field => field.type === 'array',\n      type: 'array'\n    }];\n\n    return {\n      registerFieldType: registerFieldType,\n      $get: cnFlexFormTypes\n    };\n\n    ////////\n\n    function registerFieldType(fieldType) {\n      fieldTypeRegister.unshift(fieldType);\n    }\n\n    function cnFlexFormTypes() {\n      return {\n        fieldTypeRegister: fieldTypeRegister,\n        getFieldType: getFieldType\n      };\n\n      /////////\n\n      function getFieldType(field) {\n        for(var i = 0, l = fieldTypeRegister.length; i < l; i++) {\n          if(fieldTypeRegister[i].condition(field)) {\n            return fieldTypeRegister[i].type;\n          }\n        }\n        return field.type || field.schema && field.schema.type;\n      }\n    }\n\n  }\n\n})();","(function() {\n  'use strict';\n  angular\n      .module('cn.flex-form')\n      .directive('ffValidate', ffValidate);\n\n  function ffValidate() {\n    return {\n      restrict: 'A',\n      scope: { form: '=ffValidate' },\n      require: 'ngModel',\n      link: link\n    };\n  }\n\n  function link($scope, elem, attrs, ngModel) {\n    //console.log('$scope, ngModel:', $scope.form, ngModel);\n    if($scope.form && $scope.form.required) {\n      $scope.$watch(function() { return ngModel.$viewValue; }, function(value) {\n        // override schemaForm validation\n        ngModel.$setValidity('schemaForm', true);\n        ngModel.$setValidity('tv4-302', value);\n      });\n    }\n  }\n})();","(function() {\n  'use strict';\n  angular\n      .module('cn.flex-form')\n      .directive('cnFlexForm', cnFlexForm);\n\n  function cnFlexForm() {\n    return {\n      restrict: 'E',\n      template: '\\\n        <div ng-if=\"vm.showForm()\">\\\n          <ng-form name=\"{{vm.formName}}\"\\\n                sf-schema=\"vm.config.schema.schema\"\\\n                sf-form=\"vm.form\"\\\n                sf-model=\"vm.model\"></ng-form>\\\n          <!-- debug panel to display model -->\\\n          <section ng-if=\"vm.debug\"><pre pretty-json=\"vm.model\"></pre></section>\\\n        </div>\\\n      ',\n      scope: {\n        config: '=ffConfig',\n        model: '=ffModel',\n        formIndex: '=ffFormIndex',\n        formName: '=ffFormName',\n        delayForm: '=ffDelayForm',\n        cleanupEvent: '=ffCleanupEvent'\n      },\n      controller: FlexForm,\n      controllerAs: 'vm',\n      bindToController: true\n    };\n  }\n\n  FlexForm.$inject = ['cnFlexFormService', '$scope', '$location'];\n  function FlexForm(cnFlexFormService, $scope, $location) {\n    var vm = this;\n    vm.service = undefined;\n    vm.events = [];\n\n    vm.activate = activate;\n    vm.cleanup = cleanup;\n    vm.process = process;\n    vm.showForm = showForm;\n\n    vm.events.push($scope.$watch(function() { return vm.config.schema; }, vm.process));\n\n    vm.activate();\n\n    $scope.$on(vm.cleanupEvent || '$destroy', vm.cleanup);\n\n    //////////\n\n    function activate() {\n      //console.log('vm.formName:', vm.formName);\n      if(angular.isNumber(vm.formIndex)) {\n        vm.form = vm.config.schema.forms[vm.formIndex].form;\n      }\n      else {\n        vm.form = vm.config.schema.form;\n      }\n\n      // debug\n      if($location.search().debug) {\n        vm.debug = true;\n      }\n    }\n\n    function process(cur, prev) {\n      //console.log('process:', cur, prev);\n      if(vm.form) {\n        if(!vm.service) {\n          vm.service = cnFlexFormService(vm.config.schema, vm.model, {\n            formCtrl: vm.config.formCtrl,\n            getSchema: vm.config.getSchema,\n            updateSchema: updateSchema\n          });\n        }\n        else {\n          console.log('vm.service.isCompiled():', vm.service.isCompiled());\n          vm.service.compile(vm.config.schema, vm.model);\n        }\n        //$scope.$broadcast('schemaFormRedraw');\n      }\n    }\n\n    function showForm() {\n      //console.log('showForm:', vm.delayForm, vm.formName);\n      return !vm.delayForm && vm.service && vm.service.isCompiled();\n    }\n\n    function updateSchema(schema) {\n      vm.config.schema = schema;\n      vm.activate();\n    }\n\n    function cleanup() {\n      _.each(vm.events, function(listener) {\n        listener();\n      });\n      vm.service.cleanup();\n    }\n\n  }\n})();","(function() {\n  angular\n      .module('cn.flex-form')\n      .provider('cnFlexFormRoutes', cnFlexFormRoutesProvider)\n      .config(cnFlexFormRoutes);\n\n  cnFlexFormRoutesProvider.$inject = ['$stateProvider'];\n  function cnFlexFormRoutesProvider($stateProvider) {\n    var provider = {\n      addStates: addStates,\n      $get: $get\n    };\n\n    return provider;\n\n    ////////////\n\n    function $get() {\n      // nothing to do here, but required\n    }\n\n    function addStates(options) {\n      $stateProvider\n          .state(options.name + '.page.modal', {\n            url: '/~:modal/:modalId',\n            controller: 'FlexFormModalLoader',\n            controllerAs: 'vm',\n            permissions: options.permissions\n          });\n    }\n  }\n\n  cnFlexFormRoutes.$inject = ['$stateProvider'];\n  function cnFlexFormRoutes($stateProvider) {\n\n    $stateProvider\n        .state('flex-form-sandbox', {\n          url: '/flex-form/sandbox',\n          controller: 'FlexFormSandbox',\n          controllerAs: 'vm',\n          templateUrl: 'app/components/cn-flex-form/sandbox.html'\n        });\n  }\n\n})();","(function() {\n  'use strict';\n  angular\n      .module('cn.flex-form')\n      .provider('cnFlexFormService', cnFlexFormServiceProvider);\n\n  var fieldTypeHandlers = {\n    //'cn-radios': 'processRadios',\n    'cn-radiobuttons': 'processRadiobuttons',\n    'cn-autocomplete': 'processSelect',\n    'cn-datetimepicker': 'processDate',\n    'help': 'processHelp',\n    'cn-display': 'processDisplay',\n    'cn-currency': 'processCurrency',\n    'cn-percentage': 'processPercentage',\n    'cn-mediaupload': 'processMediaUpload',\n    'cn-csvupload': 'processCsvUpload',\n    'cn-reusable': 'processReusable',\n    'cn-toggle': 'processToggle',\n    'cn-table': 'processTable',\n    'array': 'processArray'\n  };\n\n  cnFlexFormServiceProvider.$inject = [\n    'schemaFormDecoratorsProvider',\n    'cnFlexFormTypesProvider'\n  ];\n\n  function cnFlexFormServiceProvider(schemaFormDecoratorsProvider,\n                                     cnFlexFormTypesProvider) {\n    return {\n      registerField: registerField,\n      $get: CNFlexFormService\n    };\n\n    //////////\n\n    function registerField(fieldType) {\n      if(fieldType.condition) {\n        cnFlexFormTypesProvider.registerFieldType({\n          condition: fieldType.condition,\n          type: fieldType.type\n        });\n      }\n\n      if(fieldType.handler) {\n        fieldTypeHandlers[fieldType.type] = fieldType.handler;\n      }\n\n      if(fieldType.templateUrl) {\n        schemaFormDecoratorsProvider.addMapping(\n            'bootstrapDecorator',\n            fieldType.type,\n            fieldType.templateUrl\n        );\n        schemaFormDecoratorsProvider.createDirective(\n            fieldType.type,\n            fieldType.templateUrl\n        );\n      }\n    }\n  }\n\n  CNFlexFormService.$inject = [\n    'Api', '$parse', 'cnFlexFormConfig', 'cnFlexFormTypes', 'sfPath',\n    '$interpolate', '$rootScope', '$timeout', 'cnUtil', '$stateParams'\n  ];\n\n  function CNFlexFormService(Api, $parse, cnFlexFormConfig, cnFlexFormTypes, sfPath,\n                             $interpolate, $rootScope, $timeout, cnUtil, $stateParams) {\n\n    var services = [];\n    var prototype = {\n      compile,\n      addArrayCopy,\n      addToDataCache,\n      addToFormCache,\n      broadcastErrors,\n      buildError,\n      cleanup,\n      deregisterHandlers,\n      deregisterArrayHandlers,\n      getArrayCopies,\n      getArrayCopiesFor,\n      getFromDataCache,\n      getFromFormCache,\n      getKey,\n      getSchema,\n      handleResolve,\n      initArrayCopyWatch,\n      initModelWatch,\n      initSchemaParams,\n      isCompiled,\n      isConditionFunction,\n      onModelWatch,\n      parseCondition,\n      parseExpression,\n      processArray,\n      processDefault,\n      processDisplay,\n      processField,\n      processFieldset,\n      processFieldWatch,\n      processComponent,\n      processCurrency,\n      processPercentage,\n      processDate,\n      processHelp,\n      //processRadios,\n      processRadiobuttons,\n      processReusable,\n      processSchema,\n      processSelectDisplay,\n      processResolve,\n      processSection,\n      processSelect,\n      processTable,\n      processTemplate,\n      processToggle,\n      processUpdatedSchema,\n      processMediaUpload,\n      processCsvUpload,\n      registerArrayHandlers,\n      registerHandler,\n      registerResolve,\n      reprocessField,\n      setArrayIndex,\n      setupConfig,\n      setupArraySelectDisplay,\n      setupSelectDisplay,\n      setupSchemaRefresh\n    };\n\n    function CNFlexFormConstructor(schema, model, config) {\n      var service;\n      if(services.length) {\n        for(var i = 0, l = services.length; i < l; i++) {\n          if(services[i].model === model) {\n            service = services[i];\n            service.compile(schema, model, config);\n            break;\n          }\n        }\n      }\n      if(!service) {\n        service = new CNFlexForm(schema, model, config);\n        services.push(service);\n      }\n      return service || new CNFlexForm(schema, model, config);\n    }\n\n    function CNFlexForm(schema, model, config) {\n\n      if($stateParams.debug) {\n        window.services = services;\n      }\n\n      this.arrayCopies = {};\n      this.arrayListeners = {};\n      this.dataCache = {};\n      this.defaults = {};\n      this.errors = [];\n      this.events = [];\n      this.formCache = {};\n      this.listeners = {};\n      this.resolveRegister = {};\n      this.model = model;\n      this.updates = 0;\n\n      this.params = cnFlexFormConfig.getStateParams();\n\n      this._ = _;\n\n      this.compile(schema, model, config);\n    }\n\n    _.extend(CNFlexForm.prototype, prototype);\n    _.extend(CNFlexFormConstructor, prototype);\n\n    return CNFlexFormConstructor;\n\n    //////////////\n\n    function compile(schema, model, config) {\n      var service = this;\n\n      service.schema = schema;\n      service.model = model;\n\n      if(!service.isCompiled()) {\n        service.setupConfig(config);\n\n        if(schema.forms) {\n          _.each(schema.forms, function(form) {\n            _.each(form.form, service.processField.bind(service));\n          });\n        }\n        else {\n          _.each(schema.form, service.processField.bind(service));\n        }\n\n        service.initModelWatch();\n        service.initArrayCopyWatch();\n        service.isCompiled(true);\n      }\n\n      service.broadcastErrors();\n    }\n\n    function isCompiled(setValue) {\n      var service = this;\n      if(setValue) {\n        service.schema.compiled = setValue;\n      }\n      return service.schema && service.schema.compiled;\n    }\n\n    function setupConfig(config) {\n      var service = this;\n      if(config) {\n        if(config.formCtrl) service.formCtrl = config.formCtrl;\n        if(config.updateSchema) service.updateSchema = config.updateSchema;\n        if(config.getSchema) service.getSchemaForm = service.setupSchemaRefresh(config.getSchema);\n      }\n    }\n\n    function processSchema(field) {\n      var service = this,\n          schema = field.schema;\n\n      if(schema) {\n\n        field.getSchemaType = function() {\n          return _.isArray(schema.type) ? _.first(schema.type) : schema.type;\n        };\n\n        service.processDefault(field);\n      }\n    }\n\n    function processDefault(field) {\n      var service = this,\n          schema = field.schema;\n\n      if(schema.default) {\n        var key = service.getKey(field.key);\n        // if schemaUpdate hasn't been triggered, let schemaForm directive handle defaults\n        if(service.updates) {\n          if(key.includes && key.includes('[]')) return;\n          var model = service.parseExpression(field.key, service.model);\n          var modelValue = model.get();\n          // if there's an existing default and it's the same as the current value\n          // update the current value to the new default\n          if(!service.defaults[key] || _.isUndefined(modelValue) || angular.equals(modelValue, service.defaults[key])) {\n            model.set(schema.default);\n          }\n        }\n        service.defaults[key] = angular.copy(schema.default);\n      }\n    }\n\n    function processFieldset(fieldset) {\n      var service = this;\n\n      fieldset.type = 'cn-fieldset';\n      _.each(fieldset.items, service.processField.bind(service));\n\n      if(fieldset.collapsible) {\n        fieldset.toggleCollapse = function() {\n          if(fieldset.collapsible) {\n            fieldset.collapsed = !fieldset.collapsed;\n          }\n        };\n\n        fieldset.render = !fieldset.collapsed;\n      }\n      else {\n        fieldset.render = true;\n      }\n    }\n\n    function processField(field) {\n      var service = this;\n\n      if (field.selectDisplay) {\n        service.processSelectDisplay(field, service.getSchema(field.key));\n      }\n\n      if(field.type === 'fieldset') {\n        service.processFieldset(field);\n      }\n      else {\n        if(!field._ogKeys) {\n          field._ogKeys = _.without(_.keys(field), 'key', 'htmlClass');\n        }\n\n        var key = service.getKey(field.key);\n\n        if(field.key) {\n          service.addToFormCache(field, key);\n          field.schema = service.getSchema(key);\n\n          if(/*!field.immutable && */field.schema) {\n            if(field.schema.description) field.description = field.schema.description;\n            if(field.readonly && !field.schema.readonly) field.readonly = false;\n          }\n        }\n\n        service.processSchema(field);\n\n        if(!field.type) field.type = field.getSchemaType && field.getSchemaType();\n\n        if(field.resolve) service.processResolve(field);\n\n        if(field.watch) service.processFieldWatch(field);\n\n        if(field.type === 'section' || field.type === 'tabarray') {\n          service.processSection(field);\n        }\n        else if(field.type === 'component') {\n          service.processComponent(field);\n        }\n        else {\n\n          var fieldType = cnFlexFormTypes.getFieldType(field);\n          var handler = fieldTypeHandlers[fieldType];\n          if(_.isString(handler)) {\n            service[handler](field);\n          }\n          else if(_.isFunction(handler)) {\n            handler.call(service, field);\n          }\n\n          if(field.updateSchema) {\n            service.registerHandler(field, null, field.updateSchema);\n          }\n          if(field.error) {\n            service.errors.push(service.buildError(field));\n            if (_.isEmpty(field.ngModelOptions)) {\n              field.ngModelOptions = {\n                allowInvalid: true\n              };\n            } else {\n              field.ngModelOptions.allowInvalid = true;\n            }\n          }\n          else if(_.find(service.errors, {key: key})) {\n            service.errors = _.reject(service.errors, {key: key});\n            $rootScope.$broadcast('schemaForm.error.' + key, 'schemaForm', true);\n            $rootScope.$broadcast('schemaForm.error.' + key, 'serverValidation', true);\n          }\n        }\n      }\n    }\n\n    function getKey(key) {\n      if(_.isArray(key)) {\n        key = _.reduce(key, function(total, next) {\n          if(/^(\\d*)$/.test(next)) {\n            return total + '[' + next + ']';\n          }\n          return total + '.' + next;\n        });\n      }\n      return key;\n    }\n\n    function getSchema(key, depth) {\n      var service = this;\n      if(!key) return;\n\n      key = service.getKey(key);\n\n      //key = key.split('.');\n      //key = key\n      //    .replace(/arrayIndex/g, '')\n      //    .replace(/(\\[')([^.]+)\\.([^.]+)('])/g, '.$2%ff_dt%$3')\n      //    .replace(/\\./g, '%ff_sp%')\n      //    .replace(/%ff_dt%/g, '.')\n      //    .split('%ff_sp%');\n      key = sfPath.parse(key);\n      depth = depth || service.schema.schema.properties;\n\n      if (_.last(key) === '') key.pop();\n\n      var first, next, matchArray;\n\n      while(key.length > 1) {\n        first = key[0];\n        next = key[1];\n        matchArray = next.match(/^\\d*$/);\n        //if(first.slice(first.length - 2) === '[]') {\n        if(matchArray) {\n          depth = depth[key.shift()].items.properties;\n          key.shift();\n        }\n        else {\n          depth = depth[key.shift()].properties;\n        }\n      }\n\n      first = key[0];\n\n      return depth[first];\n    }\n\n    function processResolve(field) {\n      var service = this;\n\n      _.each(field.resolve, function(dataProp, fieldProp) {\n        service.handleResolve(field, fieldProp, dataProp);\n\n        var resolveType = dataProp.match(/^(schema\\.data\\.|model\\.)(\\w+)/);\n\n        if(resolveType) {\n          if(resolveType[1] === 'schema.data.') {\n            service.registerResolve(field, fieldProp, resolveType[2]);\n          }\n          else if(resolveType[1] === 'model.') {\n            service.registerHandler(resolveType[2], function() {\n              service.handleResolve(field, fieldProp, dataProp);\n            });\n          }\n        }\n      });\n\n      return field;\n    }\n\n    function handleResolve(field, fieldProp, exp) {\n      var service = this;\n      var data = service.parseExpression(exp).get();\n      if (data && data.cursor) {\n        field.loadMore = function() {\n          var dataProp = exp.match(/schema\\.data\\.(.+)/)[1];\n          service.refreshSchema(`data:${dataProp}:${data.cursor}`);\n        };\n      } else {\n        delete field.loadMore;\n      }\n      field[fieldProp] = (data && data.data) ? data.data : data;\n    }\n\n    function registerResolve(field, fieldProp, dataProp) {\n      var service = this;\n\n      let fieldKey = service.getKey(field.key);\n      service.resolveRegister[dataProp] = service.resolveRegister[dataProp] || {};\n\n      let register = service.resolveRegister[dataProp];\n      register[fieldKey] = register[fieldKey] || [];\n      register[fieldKey].push({\n        field: field,\n        prop: fieldProp\n      });\n    }\n\n    function processFieldWatch(field) {\n      var service = this,\n          schema = field.schema;\n\n      field.watch = _.isArray(field.watch) ? field.watch : [field.watch];\n\n      _.each(field.watch, function(watch) {\n        if(watch.resolution) {\n          var condition = watch.condition;\n          var functionCondition = service.isConditionFunction(condition);\n\n          var resolution = watch.resolution;\n          var handler;\n\n          if(_.isFunction(resolution)) {\n            handler = function(cur, prev) {\n              var parsedCondition = functionCondition ? service.parseCondition(functionCondition) : condition;\n              if(!parsedCondition || $parse(parsedCondition)(service)) {\n                resolution(cur, prev);\n              }\n            };\n          }\n          else {\n            var adjustment = {};\n\n            adjustment.date = resolution.match(/\\+ ?(\\d+) days/);\n\n            if(adjustment.date) {\n              adjustment.date = adjustment.date[1];\n              resolution = resolution.replace(adjustment.date, '').trim();\n            }\n            else {\n              adjustment.math = resolution.match(/(\\+|\\-|\\/|\\*) ?(\\S+)/);\n\n              if(adjustment.math) {\n                adjustment.operator = {\n                  '+': 'add',\n                  '-': 'subtract',\n                  '*': 'multiply',\n                  '/': 'divide'\n                }[adjustment.math[1]];\n\n                adjustment.adjuster = service.parseExpression(adjustment.math[2]);\n              }\n            }\n\n            resolution = resolution.match(/(\\S+) ?= ?(\\S+)/);\n\n            handler = (val, prev, key, trigger) => {\n              let updatePath, fromPath;\n\n              if(resolution[1].includes('arrayIndex')) {\n                updatePath = replaceArrayIndex(resolution[1], key);\n              }\n              let update = service.parseExpression(updatePath || resolution[1]);\n\n              // avoid loop where two watches keep triggering each other\n              if(trigger === update.path().key) return;\n              trigger = update.path().key;\n\n              if (resolution[2].includes('arrayIndex')) {\n                fromPath = replaceArrayIndex(resolution[2], key);\n              }\n              let from = service.parseExpression(fromPath || resolution[2]);\n\n              var parsedCondition = functionCondition ? service.parseCondition(functionCondition, condition) : condition;\n              if(!parsedCondition || $parse(parsedCondition)(service)) {\n                if(adjustment.date) {\n                  update.set(moment(from.get()).add(adjustment.date, 'days').toDate());\n                }\n                else if(adjustment.math) {\n                  //var result = _[adjustment.operator](from.get(), adjustment.adjuster.get());\n                  //console.log('_.%s(%s, %s):', adjustment.operator, from.get(), adjustment.adjuster.get(), result);\n                  let result = eval(from.get() + adjustment.math[1] + adjustment.adjuster.get());\n                  //console.log('eval(%s %s %s):', from.get(), adjustment.math[1], adjustment.adjuster.get(), result);\n                  //console.log('result:', result);\n                  //console.log('adjustment.math:', adjustment, from.get(), adjustment.adjuster.get(), result);\n                  //console.log('schema.format:', schema.format);\n                  schema = schema || field.items && (field.items[0].schema || (field.items[0].items && field.items[0].items[0].schema));\n                  if(field.type === 'cn-currency') {\n                    let p = schema && schema.format === 'currency-dollars' ? 2 : 0;\n\n                    if(adjustment.math[1] === '*') {\n                      result = _.floor(result, p);\n                    }\n                    else if(adjustment.math[1] === '/') {\n                      result = _.ceil(result, p);\n                    }\n                    else {\n                      result = _.round(result, p);\n                    }\n                  }\n                  //service.listeners[update.path().key].prev = result;\n                  if(service.listeners[trigger]) {\n                    service.listeners[trigger].trigger = key;\n                  }\n                  update.set(result || 0);\n                }\n                else {\n                  update.set(from.get());\n                }\n              }\n            };\n          }\n\n          service.registerHandler(field, handler, field.updateSchema, watch.initialize);\n        }\n      });\n    }\n\n    function isConditionFunction(condition) {\n      return condition && condition.match(/(\\!?)(.+)\\((.+)\\)/);\n    }\n\n    function parseCondition(condition, original) {\n      var service = this,\n          invert = condition[1],\n          functionName = condition[2],\n          functionArgument = condition[3];\n\n      if(functionName === 'any') {\n        var predicate = functionArgument.match(/(.+)\\[\\]\\.*(.*)(===|>|<|>=|<=)(.+)/),\n            arr = service.parseExpression(predicate[1]).get(),\n            comparator = predicate[3],\n            comparisonValue = predicate[4].trim().replace(/'/g, ''),\n            key = predicate[2].trim(),\n            evaluation = false;\n\n        arr.forEach(function(value) {\n          var val = key ? value[key] : value;\n          if(evaluatePredicate(val, comparator, comparisonValue)) {\n            evaluation = true;\n          }\n        });\n\n        return invert ? (!evaluation).toString() : evaluation.toString();\n      }\n      else {\n        condition = original.replace(/model\\./g, 'service.model.');\n        //console.log('eval:', condition, eval(condition));\n        // stupid hack so we can evaluate the evaluated results\n        return !!eval(condition) + '';\n      }\n    }\n\n    function evaluatePredicate(val1, comparator, val2) {\n      switch(comparator) {\n        case '===': return val1 === val2;\n        case '>=': return val1 >= val2;\n        case '<=': return val1 <= val2;\n        case '>': return val1 > val2;\n        case '<': return val1 < val2;\n      }\n    }\n\n    function registerHandler(key, handler, updateSchema, runHandler) {\n      var service = this;\n\n      // if field is passed instead of key\n      if(_.isObject(key) && !_.isArray(key)) {\n        if(!key.key && key.items) {\n          _.each(key.items, function(field) {\n            service.registerHandler(field, handler, field.updateSchema);\n          });\n          return;\n        }\n        else {\n          key = key.key;\n        }\n      }\n\n      key = service.getKey(key);\n      var arrMatch = key.match(/([^[\\]]*)\\[]\\.?(.+)/);\n\n      if(arrMatch) {\n        service.registerArrayHandlers(arrMatch[1], arrMatch[2], handler, updateSchema, runHandler);\n        return;\n      }\n\n      var cur = service.parseExpression(key, service.model).get();\n\n      if(!service.listeners[key]) {\n        var prev = angular.copy(cur);\n        service.listeners[key] = {\n          handlers: [],\n          updateSchema: updateSchema,\n          prev: prev\n        };\n      }\n\n      if(handler) {\n        service.listeners[key].handlers.push(handler);\n        if(runHandler) handler(cur, null, key);\n      }\n    }\n\n    function registerArrayHandlers(arrKey, fieldKey, handler, updateSchema, runHandler) {\n      var service = this;\n      var onArray = function(cur, prev, reorder) {\n\n        if(!prev && prev !== 0) return;\n        var i, l, key;\n\n        if(prev > cur || reorder) {\n          var lastKey = arrKey + '[' + (prev - 1) + ']' + '.' + fieldKey;\n          // only deregister handlers once each time an element is removed\n          if (service.listeners[lastKey]) {\n            for(i = 0, l = prev; i < l; i++) {\n              key = arrKey + '[' + i + ']' + '.' + fieldKey;\n              service.deregisterHandlers(key);\n            }\n          }\n          for(i = 0, l = cur; i < l; i++) {\n            key = arrKey + '[' + i + ']' + '.' + fieldKey;\n            service.registerHandler(key, handler, updateSchema);\n            //no need to call if just reregisering handlers\n            //if(runHandler) handler(null, null, key);\n          }\n        }\n        else if(cur > (prev || 0)) {\n          for(i = prev, l = cur; i < l; i++) {\n            key = arrKey + '[' + i + ']' + '.' + fieldKey;\n            service.registerHandler(key, handler, updateSchema, runHandler);\n            //if(runHandler) handler(null, null, key);\n          }\n        }\n      };\n\n      var arrVal = service.parseExpression(arrKey, service.model).get();\n      _.each(arrVal, function(field, i) {\n        var key = arrKey + '[' + i + ']' + '.' + fieldKey;\n        service.registerHandler(key, handler, updateSchema);\n        if(runHandler) handler(null, null, key);\n      });\n\n      if(service.arrayListeners[arrKey + '.length']) {\n        service.arrayListeners[arrKey + '.length'].handlers.push(onArray);\n      } else {\n        service.arrayListeners[arrKey + '.length'] = {\n          handlers: [onArray],\n          prev: arrVal ? arrVal.length : 0\n        };\n      }\n    }\n\n    function deregisterHandlers(key) {\n      var service = this;\n\n      key = service.getKey(key);\n      var arrMatch = key.match(/([^[\\]]*)\\[]\\.?(.+)/);\n\n      if(arrMatch) {\n        service.deregisterArrayHandlers(arrMatch[1], arrMatch[2]);\n        return;\n      }\n\n      //console.log('deregisterHandlers:', key);\n      if(service.listeners[key]) service.listeners[key].handlers = [];\n    }\n\n    function deregisterArrayHandlers(arrKey, fieldKey) {\n      var service = this;\n\n      //console.log('deregisterArrayHandlers:', arrKey, fieldKey);\n\n      service.parseExpression(arrKey, service.model).get().forEach((item, i) => {\n        service.deregisterHandlers(`${arrKey}[${i}].${fieldKey}`);\n      });\n    }\n\n    function initModelWatch() {\n      //console.log('initModelWatch:', initModelWatch);\n      var service = this;\n      if(service.watching) return;\n      if(service.modelWatch) service.modelWatch();\n\n      service.modelWatch = $rootScope.$watch(\n          function() { return service.model; },\n          service.onModelWatch.bind(service),\n          true\n      );\n\n      service.initSchemaParams();\n      service.watching = true;\n      service.firstUpdate = true;\n    }\n\n    function onModelWatch(cur, prev) {\n      var service = this;\n      // we always run through the listeners on the first update because angular seems to mess up\n      // when the defaults are applied and uses the same object for both cur and prev\n      if(service.firstUpdate || !angular.equals(cur, prev)) {\n        service.firstUpdate = false;\n        cnUtil.cleanModel(service.model);\n\n        service.prevParams = angular.copy(service.params);\n        service.params = {};\n\n        _.each(service.arrayListeners, function(listener, key) {\n          var val = service.parseExpression(key, service.model).get();\n          if(!angular.equals(val, listener.prev)) {\n            _.each(listener.handlers, function(handler) {\n              handler(val, listener.prev);\n            });\n            listener.prev = angular.copy(val);\n          }\n        });\n\n        _.each(service.listeners, function(listener, key) {\n          if(listener) {\n            var val = service.parseExpression(key, service.model).get();\n            //console.log('listener:', key, val, listener.prev, angular.equals(val, listener.prev));\n            if(!angular.equals(val, listener.prev)) {\n              _.each(listener.handlers, function(handler) {\n                //console.log('key, listener.trigger:', key, listener.trigger);\n                handler(val, listener.prev, key, listener.trigger);\n              });\n              listener.trigger = null;\n              listener.prev = angular.copy(val);\n            }\n            if(listener.updateSchema && !angular.isUndefined(val) && val !== null) {\n              service.params[key] = val;\n            }\n          }\n        });\n\n        if(!angular.equals(service.params, service.prevParams)) {\n          if(service.model.id && !service.updates && _.isEmpty(service.prevParams)) {\n            ++service.updates;\n          }\n          else {\n            service.refreshSchema();\n          }\n        }\n      }\n    }\n\n    function initSchemaParams() {\n      var service = this;\n      _.each(service.listeners, function(listener, key) {\n        if(listener) {\n          var val = service.parseExpression(key, service.model).get();\n          if(listener.updateSchema && !angular.isUndefined(val) && val !== null) {\n            service.params[key] = val;\n          }\n        }\n      });\n    }\n\n    function initArrayCopyWatch() {\n      console.log('initArrayCopyWatch: how many times does this event get registered?');\n      var service = this;\n\n      //TODO: refactor this, only register event once\n      service.events.push($rootScope.$on('schemaFormPropagateScope', function(event, scope) {\n        var key = service.getKey(scope.form.key);\n        var index = key.match(/^.*\\[(\\d+)].*$/);\n\n        key = key.replace(/\\[\\d+]/g, '[]');\n        index = index && parseInt(index[1]);\n\n        if(!scope.form.condition) scope.form.condition = 'true';\n\n        service.addArrayCopy(scope.form, key, index);\n        //console.log('service.arrayCopies:', service.arrayCopies);\n        scope.$emit('flexFormArrayCopyAdded', key);\n      }));\n\n      service.events.push($rootScope.$on('schemaFormDeleteScope', function(event, scope, index) {\n        console.log('schemaFormDeleteScope:', index, scope.form, scope);\n        var key = service.getKey(scope.form.key).replace(/\\[\\d+]/g, '[]');\n        var copies = service.getArrayCopiesFor(key);\n\n        copies.forEach((list) => {\n          list.splice(index, 1);\n        });\n\n        if(scope.form.link) {\n          var list = service.parseExpression(scope.form.link, service.model).get();\n          list.splice(index, 1);\n        }\n      }));\n    }\n\n    function addArrayCopy(form, key, index) {\n      var service = this;\n      if(!index || index < 0) index = 0;\n      if(!service.arrayCopies[key]) service.arrayCopies[key] = [];\n      service.arrayCopies[key][index] = form;\n      //service.arrayCopies[key].push(form);\n    }\n\n    function getArrayCopies(key) {\n      var service = this;\n      return service.arrayCopies[key];\n    }\n\n    function getArrayCopiesFor(keyStart) {\n      var service = this;\n      var copiesList = [];\n      keyStart += '[]';\n\n      _.each(service.arrayCopies, (copies, key) => {\n        if(key.includes(keyStart)) copiesList.push(copies);\n      });\n\n      return copiesList;\n    }\n\n    function addToFormCache(field, key) {\n      var service = this;\n      key = key || service.getKey(field.key);\n      if(!service.getFromFormCache(key)) service.formCache[key] = field;\n    }\n\n    function getFromFormCache(key) {\n      var service = this;\n      return service.formCache[key];\n    }\n\n    function addToDataCache(key, modelValue) {\n      var service = this;\n\n      if(key) {\n        service.dataCache[key] = modelValue;\n      }\n    }\n\n    function getFromDataCache(key) {\n      var service = this;\n\n      return service.dataCache[key];\n    }\n\n    function parseExpression(exp, depth) {\n      var service = this;\n      // if expression is specific value\n      if(!exp || /^(null|false|true|undefined|''|[0-9.]+|\\[]|\\{})$/.test(exp)) {\n        return {\n          \"get\": function() {\n            return eval(exp);\n          }\n        };\n      }\n\n      exp = service.getKey(exp);\n\n      //var key;\n      var match = exp.match(/^(model\\.)?(\\S+)$/);\n\n      // cache fucks shit up if the model changes so disabling\n      //var cached;\n\n      // return from cache if possible\n      //if(!/\\[]/.test(exp) && match && match[2]) {\n      //  if(!depth || depth === service.model) {\n      //    key = match[2];\n      //\n      //    cached = service.getFromDataCache(key);\n      //    if(cached) {\n      //      return cached;\n      //    }\n      //  }\n      //}\n\n      var modelValue = {\n        \"get\": function() {\n          //var path = exp.replace(/\\[]/g, '').replace(/\\[(\\d+)]/g, '.$1').split('.');\n          var path = sfPath.parse(exp);\n          var start = depth || service;\n\n          while(start && path.length > 1) {\n            start = start[path.shift()];\n          }\n\n          //if(/\\[]/g.test(exp)) {\n          //  console.log('exp:', exp, start, start && start[path[0]]);\n          //}\n          return start && start[path[0]];\n        },\n        \"set\": function(val) {\n          //var path = exp.replace(/\\[]/g, '').replace(/\\[(\\d+)]/g, '.$1').split('.');\n          var path = sfPath.parse(exp);\n          var start = depth || service;\n\n          while(start && path.length > 1) {\n            var key = path.shift();\n            if(!start[key]) {\n              if(/^\\d?$/.test(path[0])) {\n                start[key] = [];\n              }\n              else {\n                start[key] = {};\n              }\n            }\n            start = start[key];\n          }\n\n          start[path[0]] = val;\n\n          return val;\n        },\n        \"path\": function() {\n          return {\n            exp: exp,\n            depth: depth,\n            key: match[2]\n          };\n        }\n      };\n\n      //if(key) {\n      //  service.addToDataCache(key, modelValue);\n      //}\n\n      return modelValue;\n    }\n\n    function processArray(array) {\n      var service = this;\n      var key = service.getKey(array.key);\n\n      array.sortOptions = {\n        update: function(e, ui) {\n          let listener = service.arrayListeners[`${key}.length`];\n          listener.handlers.forEach(handler => {\n            handler(listener.prev, listener.prev, true);\n          });\n        }\n      };\n\n      service.processSection(array);\n    }\n\n    function processSection(section) {\n      var service = this;\n      _.each(section.items, service.processField.bind(service));\n    }\n\n    function processComponent(component) {\n      var service = this;\n\n      component.type = 'section';\n      component.htmlClass = 'row';\n\n      var cols = 12 / _.reject(component.items, 'hidden').length;\n\n      _.each(component.items, function(field, i) {\n        service.processField(field);\n        component.items[i] = {\n          type: 'section',\n          htmlClass: 'col-sm-' + cols,\n          items: [field]\n        };\n      });\n    }\n\n    function processCurrency(field) {\n      field.currencyFormat = {\n        'currency-dollars': 'dollars',\n        'currency-microcents': 'microcents',\n        'currency': 'cents'\n      }[field.schema.format];\n\n      field.type = 'cn-currency';\n    }\n\n    function processPercentage(field) {\n      field.type = 'cn-percentage';\n    }\n\n    function processReusable(field) {\n      var service = this;\n      field.type = 'cn-reusable';\n      field.view = field.view || 'new';\n      field.items.forEach(service.processField.bind(service));\n      field.items = [{\n        type: 'section',\n        items: field.items,\n        condition: '!model.' + service.getKey(field.key) + '.id'\n      }];\n    }\n\n    function processMediaUpload(field) {\n      var service = this;\n      field.type = 'cn-mediaupload';\n      _.each(field.data, function(dataProp, key) {\n        field.data[key] = service.parseExpression(dataProp).get();\n      });\n    }\n\n    function processCsvUpload(field) {\n      var service = this;\n      field.type = 'cn-csvupload';\n      // _.each(field.data, function(dataProp, key) {\n      //   field.data[key] = service.parseExpression(dataProp).get();\n      // });\n    }\n\n    function processRadiobuttons(radios) {\n      var service = this;\n      radios.type = 'cn-radiobuttons';\n      if(radios.fullWidth) {\n        radios.btnClass = 'col-sm-' + _.divide(12, radios.titleMap.length);\n      }\n    }\n\n    function processDate(date) {\n      var service = this;\n      date.type = 'cn-datetimepicker';\n\n      if(date.schema.format === 'time-minutes') {\n        date.maxView = 'hour';\n        date.iconClass = 'fa fa-clock-o';\n\n        date.modelFormatter = val => {\n          if(!val) return;\n\n          let m = moment(val);\n\n          return _.add(_.multiply(m.hours(), 60), m.minutes());\n        };\n\n        date.modelParser = val => {\n          if(!val) return;\n\n          let d = parseInt(val);\n          let hours = _.floor(d / 60);\n          let minutes = d % 60;\n\n          return moment().startOf('day').add('hours', hours).add('minutes', minutes);\n        };\n\n        date.viewFormatter = val => {\n          if(!val) return;\n\n          return date.modelParser(val).format(date.dateFormat);\n        };\n\n        date.viewParser = val => {\n          if(!val) return;\n\n          let match = val.match(/^(\\d{1,2}):?(\\d{1,2})? (a|p)/);\n          if(!match) return;\n\n          let hours = _.add(match[1] === '12' ? 0 : match[1], match[3] === 'a' ? 0 : 12);\n          let minutes = match[2] || '00';\n\n          if(minutes.length === 1) minutes += '0';\n\n          return _.add(_.multiply(hours, 60), minutes);\n        };\n      }\n    }\n\n    function processSelect(select) {\n      var service = this,\n          schema = select.schema;\n\n      if(select.titleMapResolve || select.titleMap) {\n        select.getTitleMap = function() {\n          return select.titleMap || service.schema.data[select.titleMapResolve];\n        };\n\n        select.onInit = function(val, form, event, setter) {\n          var modelValue = service.parseExpression(form.key, service.model);\n          // make sure we have correct value\n          val = modelValue.get();\n          //console.log('service.getKey(form.key), val:', service.getKey(form.key), val);\n          if(event === 'tag-init') {\n            var newVal;\n            if(form.schema.type === 'array') {\n              newVal = [];\n              _.each(val, val => {\n                let valProp = select.valueProperty || select.schema.items.type !== 'object' && 'value';\n                let match = valProp ? {[valProp]: val} : val;\n                newVal.push(_.find(select.getTitleMap(), match));\n              });\n            }\n            else {\n              let valProp = select.valueProperty || form.schema.type !== 'object' && 'value';\n              let match = valProp ? {[valProp]: val} : val;\n              newVal = _.find(select.getTitleMap(), match);\n            }\n            //console.log('newVal:', newVal);\n            if(newVal) setter(newVal);\n          }\n        };\n      }\n\n      if(select.titleMapQuery) {\n        var key = select.titleMapQuery.params.q;\n        select.titleQuery = function(q) {\n          console.log('titleMap:', q);\n          var params = {};\n          if(key) {\n            params[key] = q;\n          }\n          return Api.get({\n            url: select.titleMapQuery.url,\n            params: params\n          });\n        };\n\n        // wrap in string so returns truthy when compiled, but converted to number within directive\n        if(!key) select.minLookup = '0';\n\n        select.onInit = function(val, form, event, setter) {\n          //console.log('titleQuery:onInit:', val, form, event, setter);\n          if(event === 'tag-init') {\n            setter(val);\n          }\n        };\n      }\n\n      if(schema.items) {\n        var defaults = [];\n        _.each(schema.items.properties, function(schema, key) {\n          if(angular.isDefined(schema.default)) {\n            defaults.push({\n              \"key\": key,\n              default: schema.default\n            });\n          }\n        });\n        if(defaults.length) {\n          select.onAdd = function(val, form, event) {\n            if(val.value && event === 'tag-added') {\n              _.each(defaults, function(prop) {\n                //console.log('prop:', prop, val);\n                if(!val.value[prop.key]) val.value[prop.key] = prop.default;\n              });\n            }\n          };\n        }\n      }\n\n      if(!select.type.includes('cn-autocomplete')) {\n        if(select.items) {\n          select.detailedList = true;\n\n          if(select.items[0].type !== 'component') {\n            if(select.items.length > 1) {\n              select.items = [{\n                type: \"component\",\n                items: select.items\n              }];\n            }\n\n            service.processFieldset(select);\n          }\n\n          select.type = 'cn-autocomplete-detailed';\n        }\n        else {\n          if(!select.selectionStyle) {\n            if(select.key === 'tags') {\n              select.selectionStyle = 'tags';\n            }\n            else if(select.getSchemaType() === 'array' && select.schema.maxItems !== 1) {\n              select.selectionStyle = 'list';\n            }\n            else {\n              select.selectionStyle = 'select';\n            }\n          }\n          select.type = 'cn-autocomplete';\n        }\n      }\n\n      if(select.displayFormat) {\n        select.itemFormatter = service.processTemplate(select.displayFormat);\n      }\n\n      service.registerHandler(select.key, function(val) {\n        var form = service.formCtrl && service.formCtrl[service.getKey(select.key)];\n        if(form && form.$setDirty) form.$setDirty();\n      }, select.updateSchema);\n    }\n\n    function processToggle(toggle) {\n      toggle.type = 'cn-toggle';\n    }\n\n    function processHelp(help) {\n      help.htmlClass = 'help-block';\n    }\n\n    function processDisplay(display) {\n      var service = this;\n      display.type = 'cn-display';\n      display.getDisplay = service.processTemplate(display.displayFormat, true);\n    }\n\n    function processTemplate(tpl, parseScope) {\n      var service = this;\n      //var processor = /<(\\S+)[^>]*>.*<\\/\\1>/.test(tpl) ? $compile : $interpolate;\n      var processor = $interpolate;\n      return function(scope, arrayIndex) {\n        if(parseScope) {\n          if(angular.isDefined(arrayIndex)) {\n            scope = _.map(scope, function(key) {\n              return key === 'arrayIndex' ? arrayIndex : key;\n            });\n          }\n          scope = service.parseExpression(scope, service.model).get();\n        }\n        return processor(tpl)(scope);\n      };\n    }\n\n    function processTable(table) {\n      var service = this;\n      table.type = 'cn-table';\n      table.items.forEach(function(row) {\n        for (var i = 0; i < table.columns.length; i++) {\n          _.extend(row.items[i], table.columns[i]);\n          //if (row.columns[i].key) row.columns[i].key = ObjectPath.parse(row.columns[i].key);\n          service.processField(row.items[i]);\n        }\n      });\n    }\n\n    function processSelectDisplay(selectDisplay, schema) {\n      var service = this,\n          selectField = _.find(selectDisplay.items, 'selectField'),\n          handler;\n\n      if (schema && schema.type === 'array') {\n        handler = service.setupArraySelectDisplay(selectDisplay, selectField);\n      } else {\n        handler = service.setupSelectDisplay(selectDisplay, selectField);\n      }\n\n      selectDisplay.selectDisplay = false;\n      service.registerHandler(selectField.key, handler, selectField.updateSchema, true);\n      service.processField(selectDisplay);\n    }\n\n    function setupArraySelectDisplay(selectDisplay, selectField) {\n      var service = this;\n      _.each(selectDisplay.items, function(item) {\n        if(item.condition !== 'false') {\n          item.condition = 'true';\n        }\n      });\n      var handler = function(val, prev, key) {\n        var index = getArrayIndex(key);\n        _.each(selectDisplay.items, function(item) {\n          var selectKey = service.getKey(selectField.key);\n          var key = service.getKey(item.key);\n          var splitKey = ObjectPath.parse(key);\n          if (selectKey === key) return;\n          var indexedSelectKey = service.setArrayIndex(selectKey, index);\n          var selectValue = service.parseExpression(indexedSelectKey, service.model).get();\n          var formCopies = service.getArrayCopies(key);\n          if (_.includes(selectValue, splitKey[splitKey.length - 1])) {\n            _.each(formCopies, function(copy) {\n              if (getArrayIndex(copy) == index) {\n                copy.condition = 'true';\n              }\n            });\n          } else {\n            _.each(formCopies, function(copy) {\n              if (getArrayIndex(copy) == index) {\n                copy.condition = 'false';\n                service.parseExpression(service.getKey(copy.key), service.model).set();\n              }\n            });\n          }\n        });\n      };\n      // handle legacy objects that don't have values set in the selectField\n      var model = service.parseExpression(service.getKey(selectDisplay.key), service.model).get();\n      _.each(selectDisplay.items, function(item) {\n        var key = service.getKey(item.key);\n        var selectKey = service.getKey(selectField.key);\n        if (key === selectKey) return;\n        _.each(model, function(elem, i) {\n          var indexedKey = service.setArrayIndex(key, i);\n          var splitIndexedKey = ObjectPath.parse(indexedKey);\n          var indexedSelectKey = service.setArrayIndex(selectKey, i);\n          var selectModel = service.parseExpression(indexedSelectKey, service.model);\n          var selectValue = selectModel.get();\n          var itemValue = service.parseExpression(indexedKey, service.model).get();\n          if (itemValue && !_.includes(selectValue, splitIndexedKey[splitIndexedKey.length - 1])) {\n            if (!selectValue) {\n              selectValue = [];\n            }\n            selectValue.push(splitIndexedKey[splitIndexedKey.length - 1]);\n            selectModel.set(selectValue);\n          }\n        });\n      });\n      // handle new objects with values set in defaults\n      var defaults = service.getSchema(selectDisplay.key).default;\n      _.each(defaults, function(elem, i) {\n        var selectKey = service.getKey(selectField.key);\n        var indexedSelectKey = service.setArrayIndex(selectKey, i);\n        var selectModel = service.parseExpression(indexedSelectKey, service.model);\n        var selectValue = selectModel.get();\n        _.each(elem, function(val, key) {\n          if (!selectValue) {\n            selectValue = [];\n          }\n          selectValue.push(key);\n          selectModel.set(selectValue);\n        });\n      });\n      // run handler once all arrayCopies have been instantiated\n      var count = 0;\n      var keyMap = _.pluck(_.reject(selectDisplay.items, {\"condition\":\"false\"}), 'key');\n      var once = $rootScope.$on('flexFormArrayCopyAdded', function(event, key) {\n        var model = service.parseExpression(service.getKey(selectDisplay.key), service.model).get();\n        if (model) {\n          var total = model.length * (keyMap.length);\n          if (_.includes(keyMap, key)) {\n            count++;\n          }\n          if (count === total) {\n            for (var i = 0; i < model.length; i++) {\n              handler(null, null, '[' + i + ']');\n            }\n            count = 0;\n          }\n        }\n      });\n      var resetCount = $rootScope.$on('flexForm.updatePage', function() {\n        count = 0;\n      });\n      service.events.push(once);\n      service.events.push(resetCount);\n      return handler;\n    }\n\n    function setupSelectDisplay(selectDisplay, selectField) {\n      var service = this;\n      var handler = function() {\n        var selectKey = service.getKey(selectField.key);\n        _.each(selectDisplay.items, function(item) {\n          var key = service.getKey(item.key);\n          var splitKey = ObjectPath.parse(key);\n          if (selectKey === key) return;\n          var selectValue = service.parseExpression(selectKey, service.model).get();\n          if (_.includes(selectValue, splitKey[splitKey.length - 1])) {\n            item.condition = 'true';\n          } else {\n            item.condition = 'false';\n            service.parseExpression(key, service.model).set();\n          }\n        });\n      };\n      // handle legacy objects that don't have values set in the selectField\n      var selectKey = service.getKey(selectField.key);\n      var selectModel = service.parseExpression(selectKey, service.model);\n      var selectValue = selectModel.get();\n      _.each(selectDisplay.items, function(item) {\n        var key = service.getKey(item.key);\n        if (selectKey === key) return;\n        var splitKey = ObjectPath.parse(key);\n        var itemValue = service.parseExpression(key, service.model).get();\n        if (itemValue && !_.includes(selectValue, splitKey[splitKey.length - 1])) {\n          if (!selectValue) {\n            selectValue = [];\n          }\n          selectValue.push(splitKey[splitKey.length - 1]);\n          selectModel.set(selectValue);\n        }\n      });\n      // handle new objects with values set in the defaults\n      var defaults = service.getSchema(selectDisplay.key).default;\n      _.each(defaults, function(val, key) {\n        if (!selectValue) {\n          selectValue = [];\n        }\n        selectValue.push(key);\n        selectModel.set(selectValue);\n      });\n      // set default values here\n      var model = service.parseExpression(selectDisplay.key, service.model);\n      if (defaults && !model.get()) {\n        model.set(defaults);\n      }\n\n      return handler;\n    }\n\n    function setupSchemaRefresh(refresh) {\n      var service = this;\n      service.refreshSchema = _.debounce(function(updateSchema) {\n        var params = _.extend(cnFlexFormConfig.getStateParams(), service.params);\n        console.log('service.schema.params, params:', service.schema.params, params);\n        var diff = cnUtil.diff(service.schema.params, params, true);\n        var keys;\n\n        if(diff || updateSchema) {\n          if (updateSchema) params.updateSchema = updateSchema;\n          else {\n            keys = _.keys(diff);\n\n            if(keys.length > 1) {\n              diff = _.omit(diff, _.isNull);\n              keys = _.keys(diff);\n            }\n            //console.log('keys, diff:', keys, diff, {\n            //  cur: _.clone(params),\n            //  prev: _.clone(service.schema.params)\n            //});\n\n            params.updateSchema = _.first(keys);\n          }\n\n          if(!params.updateSchema) {\n            diff = cnUtil.diff(params, _.omit(service.schema.params, 'updateSchema'));\n            keys = _.keys(diff);\n\n            params.updateSchema = _.first(keys);\n          }\n\n          refresh(params).then(function(schema) {\n            ++service.updates;\n            //service.updateSchema(schema);\n            service.processUpdatedSchema(schema);\n          });\n        }\n      }, 100);\n\n      service.refreshData = _.debounce(function() {\n        refresh(_.extend(service.schema.params, {updateSchema: 'refreshData'})).then(function(schema) {\n          service.processUpdatedSchema(schema);\n          console.log('service.schema.params:', service.schema.params);\n        });\n      }, 100);\n\n      service.events.push($rootScope.$on('ffRefreshData', service.refreshData));\n    }\n\n    function processUpdatedSchema(schema) {\n      var service = this;\n      if(schema.diff) {\n        service.schema.params = schema.params;\n\n        if(schema.diff.data) {\n          _.each(schema.diff.data, (data, prop) => {\n            if(data && data.data && !_.isEmpty(service.schema.data[prop].data) && !data.reset) {\n              data.data = service.schema.data[prop].data.concat(data.data);\n            }\n            service.schema.data[prop] = data;\n            if(service.resolveRegister[prop]) {\n              _.each(service.resolveRegister[prop], (registers) => {\n                registers.forEach(register => {\n                  service.handleResolve(register.field, register.prop, `schema.data.${prop}`);\n                });\n              });\n            }\n          });\n        }\n\n        var keys = [];\n\n        if(schema.diff.schema) {\n          _.each(schema.diff.schema, function(schema, key) {\n            service.schema.schema.properties[key] = schema;\n            reprocessSchema(schema, key, keys);\n          });\n        }\n\n        if(schema.diff.form) {\n          _.each(schema.diff.form, function(form) {\n\n            if(keys.indexOf(form.key) === -1) {\n              keys.push(form.key);\n            }\n\n            // don't want to override key when extending cached objects\n            //var key = form.key;\n            //delete form.key;\n\n            var cached = service.getFromFormCache(form.key);\n            if(cached) {\n              service.reprocessField(cached, form);\n            }\n            var copies = service.getArrayCopies(form.key);\n            if(copies) {\n              _.each(copies, function(copy) {\n                service.reprocessField(copy, form);\n              });\n            }\n          });\n        }\n\n        if(keys.length) {\n          _.each(keys, function(key) {\n            var form = service.getFromFormCache(key);\n            if(form) service.processField(form);\n            if(key.includes('[]')) {\n              var copies = service.getArrayCopies(key);\n              _.each(copies, function(copy) {\n                if(copy) service.processField(copy);\n              });\n            }\n          });\n        }\n\n        service.broadcastErrors();\n      }\n      else {\n        service.updateSchema(schema);\n      }\n    }\n\n    function reprocessField(current, update, isChild) {\n      var service = this;\n\n      _.extend(current, _.omit(update, 'items', 'key'));\n\n      current._ogKeys.forEach(key => {\n        if(!update[key]) delete current[key];\n      });\n      current._ogKeys = _.keys(update);\n\n      service.deregisterHandlers(update.key);\n\n      if(!isChild && current.redraw) current.redraw();\n    }\n\n    function reprocessSchema(schema, key, keys) {\n      keys.push(key);\n      if(schema.properties) {\n        _.each(schema.properties, function(schema, subKey) {\n          reprocessSchema(schema, key + '.' + subKey, keys);\n        });\n      }\n      if(schema.items && schema.items.properties) {\n        _.each(schema.properties, function(schema, subKey) {\n          reprocessSchema(schema, key + '[].' + subKey, keys);\n        });\n      }\n    }\n\n    function buildError(field) {\n      var service = this;\n      var key = service.getKey(field.key);\n      return {\n        key: key,\n        message: field.error\n      };\n    }\n\n    function broadcastErrors() {\n      var service = this;\n      $timeout(function() {\n        service.errors.forEach(function(error) {\n          $rootScope.$broadcast('schemaForm.error.' + error.key, 'serverValidation', error.message);\n        });\n      }, 1);\n    }\n\n    function replaceArrayIndex(resolve, key) {\n      var arrayIndexKey = /([^.]*)\\[arrayIndex\\]/.exec(resolve);\n      var re = new RegExp(arrayIndexKey[1] + '\\\\[(\\\\d+)\\\\]');\n      var index = re.exec(key);\n      return resolve.replace(arrayIndexKey[0], index[0]);\n    }\n\n    function getArrayIndex(key) {\n      if (_.isObject(key)) {\n        return _.find(key.key, function(key) {\n          return _.isNumber(key);\n        });\n      } else {\n        return /\\[(\\d+)\\]/.exec(key)[1];\n      }\n    }\n\n    function setArrayIndex(key, index, asArray) {\n      var service = this;\n      var keyCopy;\n      if (_.isString(key)) {\n        keyCopy = ObjectPath.parse(key);\n      } else {\n        keyCopy = _.clone(key);\n      }\n      var indexOfIndex = keyCopy.indexOf('');\n      keyCopy[indexOfIndex] = index;\n\n      if (asArray) {\n        return keyCopy;\n      } else {\n        return service.getKey(keyCopy);\n      }\n    }\n\n    function cleanup() {\n      var service = this;\n      _.each(service.events, function(listener) {\n        listener();\n      });\n    }\n  }\n})();","(function() {\n  'use strict';\n\n  angular\n      .module('cn.flex-form')\n      .controller('FlexFormSandbox', FlexFormSandbox);\n\n  /* @ngInject */\n  function FlexFormSandbox() {\n    /* jshint validthis: true */\n    var vm = this;\n\n    vm.activate = activate;\n    vm.onSchema = onSchema;\n    vm.model = {};\n    vm.config = {};\n    vm.schemaStr = '';\n\n    activate();\n\n    ////////////////\n\n    function activate() {\n      console.log('FlexFormSandbox');\n    }\n\n    function onSchema() {\n      if(vm.schemaStr) {\n        var schema = angular.fromJson(vm.schemaStr);\n        console.log('schema:', schema);\n        if(!schema.form && schema.forms) {\n          schema.form = schema.forms[0].form;\n        }\n        vm.config.schema = schema.form && schema;\n      }\n    }\n\n  }\n})();","(function() {\n  'use strict';\n\n  angular.module('cn.flex-form')\n      .config(schemaFormConfig)\n      .run(addTemplates);\n\n  schemaFormConfig.$inject = ['cnFlexFormServiceProvider'];\n\n  function schemaFormConfig(cnFlexFormServiceProvider) {\n    var extensions = [\n      'cn-fieldset',\n      'cn-toggle',\n      'cn-datetimepicker',\n      'cn-autocomplete',\n      'cn-autocomplete-detailed',\n      'cn-currency',\n      'cn-radiobuttons',\n      'cn-percentage',\n      'cn-display',\n      'cn-mediaupload',\n      'cn-csvupload',\n      'cn-reusable',\n      'cn-table'\n    ];\n\n    _.each(extensions, function(extension) {\n      cnFlexFormServiceProvider.registerField({\n        type: extension,\n        templateUrl: `app/components/cn-flex-form/forms/${extension}.html`\n      });\n    });\n  }\n\n  addTemplates.$inject = ['$templateCache'];\n\n  function addTemplates($templateCache) {\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-toggle.html',\n        `\n        <div class=\"form-group {{form.htmlClass}}\"\n             ng-class=\"{'has-error': hasError(), 'has-success': hasSuccess()}\">\n          <label class=\"control-label\" ng-show=\"showTitle()\">{{form.title}}</label>\n          <div class=\"clearfix\">\n            <cn-toggle-switch\n              class=\"pull-left\"\n              ng-show=\"form.key\"\n              ng-model-options=\"form.ngModelOptions\"\n              ng-model=\"$$value$$\"\n              sf-changed=\"form\"\n              schema-validate=\"form\"\n              on-value=\"form.onValue\"\n              off-value=\"form.offValue\"\n              undefined-class=\"form.undefinedClass\"/>\n            <span ng-show=\"form.onText && form.offText\">\n              {{$$value$$ === form.onValue ? form.onText : form.offText}}\n            </span>\n          </div>\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\n        </div>`\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-datetimepicker.html',\n        `\n        <div class=\"form-group {{form.htmlClass}}\"\n             ng-class=\"{'has-error': hasError(), 'has-success': hasSuccess()}\">\n          <label class=\"control-label\"\n                 for=\"{{form.key.join('.')}}\"\n                 ng-show=\"showTitle()\">{{form.title}}</label>\n          <cn-datetimepicker\n            ng-show=\"form.key\"\n            ng-model=\"$$value$$\"\n            ng-model-options=\"form.ngModelOptions\"\n            is-disabled=\"form.readonly\"\n            sf-changed=\"form\"\n            schema-validate=\"form\"\n            input-id=\"{{form.key.join('.')}}\"\n            min-date=\"form.minDate\"\n            max-view=\"{{form.maxView}}\"\n            cn-date-required=\"form.required\"\n            placeholder=\"{{form.placeholder}}\"\n            model-type=\"{{form.schema.type}}\"\n            model-formatter=\"form.modelFormatter\"\n            model-parser=\"form.modelParser\"\n            view-formatter=\"form.viewFormatter\"\n            view-parser=\"form.viewParser\"\n            format-string={{form.dateFormat}}\n            icon-class={{form.iconClass}}>\n          </cn-datetimepicker>\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\n        </div>`\n    );\n\n    var sharedAutocompleteTpl = `\n          <tags-input\n            ng-show=\"form.key\"\n            ng-model=\"$$value$$\"\n            ng-model-options=\"form.ngModelOptions\"\n            ng-disabled=\"form.readonly\"\n            sf-changed=\"form\"\n            schema-validate=\"form\"\n            input-id=\"{{form.key.join('.')}}\"\n            display-property=\"{{form.displayProperty || 'name'}}\"\n            value-property=\"{{form.valueProperty}}\"\n            placeholder=\"{{form.placeholder || ' '}}\"\n            add-on-blur=\"true\"\n            add-on-comma=\"false\"\n            add-from-autocomplete-only=\"{{!form.allowNew}}\"\n            on-before-tag-added=\"form.onAdd({value: $tag}, form, $event, $prev)\"\n            on-init=\"form.onInit($tag, form, $event, $setter)\"\n            model-type=\"{{form.getSchemaType()}}\"\n            array-value-type=\"{{form.schema.items.type}}\"\n            hide-tags=\"{{form.detailedList}}\"\n            tags-style=\"{{form.selectionStyle}}\"\n            required=\"{{form.required}}\"\n            min-length=\"{{form.minLength}}\"\n            allowed-tags-pattern=\".*\"\n            dropdown=\"true\"\n            item-formatter=\"form.itemFormatter\"\n            min-tags=\"{{form.schema.minItems}}\"\n            max-tags=\"{{form.schema.maxItems || form.getSchemaType() !== 'array' ? 1 : 0}}\"\n            allow-bulk=\"{{form.bulkAdd}}\"\n            bulk-delimiter=\"{{form.bulkDelimiter}}\"\n            bulk-placeholder=\"{{form.bulkPlaceholder}}\"\n            show-button=\"true\">\n            <auto-complete\n              source=\"form.getTitleMap && form.getTitleMap() || form.titleQuery($query)\"\n              skip-filtering=\"{{form.titleQuery ? true : false}}\"\n              min-length=\"{{form.minLookup || (form.titleQuery && 3 || 0)}}\">\n            </auto-complete>\n          </tags-input>`;\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-autocomplete.html',\n        `\n        <div class=\"form-group {{form.htmlClass}}\"\n             ng-class=\"{'has-error': hasError(), 'has-success': hasSuccess()}\">\n          <label class=\"control-label\"\n                 for=\"{{form.key.join('.')}}-input\"\n                 ng-show=\"showTitle()\">{{form.title}}</label>\n          ${sharedAutocompleteTpl}\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\n        </div>`\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-autocomplete-detailed.html',\n        `\n        <div sf-array=\"form\"\n             class=\"form-group {{form.htmlClass}}\"\n             ng-class=\"{'has-error': hasError(), 'has-success': hasSuccess()}\">\n          <label class=\"control-label\"\n                 for=\"{{form.key.join('.')}}-input\"\n                 ng-show=\"showTitle()\">{{form.title}}</label>\n          <ol class=\"list-group cn-autocomplete-list\"\n              ng-show=\"modelArray.length\"\n              ng-model=\"modelArray\">\n            <li class=\"list-group-item {{form.fieldHtmlClass}}\"\n                ng-repeat=\"item in modelArray track by $index\">\n              <button ng-hide=\"form.readonly || form.remove === null\"\n                      ng-click=\"deleteFromArray($index)\"\n                      type=\"button\" class=\"close pull-right\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n              <sf-decorator ng-init=\"arrayIndex = $index\" form=\"copyWithIndex($index)\"/>\n            </li>\n          </ol>\n          ${sharedAutocompleteTpl}\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\n        </div>`\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-currency.html',\n        `\n        <div class=\"form-group {{form.htmlClass}}\"\n             ng-class=\"{'has-error': hasError(), 'has-success': hasSuccess()}\">\n          <label class=\"control-label\"\n                 ng-show=\"showTitle()\"\n                 for=\"{{form.key.join('.')}}\">{{form.title}}</label>\n          <div class=\"{{form.fieldClass}} input-group\">\n            <label class=\"input-group-addon\"\n                   ng-disabled=\"form.readonly\"\n                   for=\"{{form.key.join('.')}}\">$</label>\n            <input class=\"form-control\"\n                   cn-currency-format=\"{{form.currencyFormat}}\"\n                   cn-currency-placeholder=\"{{form.placeholder}}\"\n                   ng-show=\"form.key\"\n                   ng-model-options=\"form.ngModelOptions\"\n                   ng-disabled=\"form.readonly\"\n                   sf-changed=\"form\"\n                   schema-validate=\"form\"\n                   ff-validate=\"form\"\n                   type=\"text\"\n                   step=\"any\"\n                   min=\"{{form.min}}\"\n                   max=\"{{form.max}}\"\n                   id=\"{{form.key.join('.')}}\"\n                   name=\"{{form.key.join('.')}}\"\n                   ng-model=\"$$value$$\">\n          </div>\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\n        </div>`\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-radiobuttons.html',\n        `\n        <div class=\"form-group schema-form-radiobuttons cn-radiobuttons {{form.htmlClass}}\"\n             ng-class=\"{'has-error': hasError(), 'has-success': hasSuccess()}\">\n          <label class=\"control-label\" ng-show=\"showTitle()\">{{form.title}}</label>\n          <div class=\"btn-group clearfix\">\n            <label class=\"btn btn-{{item.value}} {{form.btnClass}} {{item.value === $$value$$ ? 'active' : ''}}\"\n                   ng-repeat=\"item in form.titleMap\">\n              <input type=\"radio\"\n                     class=\"{{form.fieldHtmlClass}} hide\"\n                     sf-changed=\"form\"\n                     ng-disabled=\"form.readonly\"\n                     ng-model=\"$$value$$\"\n                     ng-model-options=\"form.ngModelOptions\"\n                     schema-validate=\"form\"\n                     ff-validate=\"form\"\n                     ng-value=\"item.value\"\n                     name=\"{{form.key.join('.')}}\">\n              <i class=\"fa fa-{{item.value}} fa-lg\"></i>\n              <span ng-bind-html=\"item.name\"></span>\n            </label>\n          </div>\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\n        </div>`\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-percentage.html',\n        `\n        <div class=\"form-group {{form.htmlClass}}\"\n             ng-class=\"{'has-error': hasError(), 'has-success': hasSuccess()}\">\n          <label class=\"control-label\"\n                 ng-show=\"showTitle()\"\n                 for=\"{{form.key && form.key[0]}}\">{{form.title}}</label>\n          <div class=\"{{form.fieldClass}} input-group\">\n            <input class=\"form-control\"\n                   cn-percentage-format\n                   ng-show=\"form.key\"\n                   ng-model-options=\"form.ngModelOptions\"\n                   ng-disabled=\"form.readonly\"\n                   sf-changed=\"form\"\n                   schema-validate=\"form\"\n                   type=\"number\"\n                   step=\"any\"\n                   min=\"{{form.min}}\"\n                   max=\"{{form.max}}\"\n                   id=\"{{form.key && form.key[0]}}\"\n                   name=\"{{form.key && form.key[0]}}\"\n                   ng-model=\"$$value$$\">\n             <div class=\"input-group-addon\"\n                    ng-disabled=\"form.readonly\"\n                    for=\"{{form.key && form.key[0]}}\">%</div>\n          </div>\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\n        </div>`\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-display.html',\n        `\n        <div class=\"form-group cn-display{{form.htmlClass}}\">\n          <input ng-show=\"form.key\"\n                 class=\"form-control\"\n                 id=\"{{form.key.join('.')}}\"\n                 name=\"{{form.key.join('.')}}\"\n                 ng-disabled=\"true\"\n                 value=\"{{form.getDisplay(form.key, form.arrayIndex)}}\">\n        </div>`\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-fieldset.html',\n        `\n        <fieldset ng-disabled=\"form.readonly\" class=\"schema-form-fieldset {{form.htmlClass}}\">\n          <legend ng-click=\"form.toggleCollapse()\"\n                  ng-class=\"{'sr-only': !showTitle(), collapsible: form.collapsible}\"\n                  ng-mouseenter=\"form.render = true\">\n            <i ng-show=\"form.collapsible\"\n               class=\"fa fa-caret-{{form.collapsed ? 'right' : 'down'}}\"></i>\n            {{ form.title }}\n          </legend>\n          <div class=\"help-block\" ng-show=\"form.description\" ng-bind-html=\"form.description\"></div>\n          <div collapse=\"form.collapsed\">\n            <div ng-if=\"form.render\">\n              <sf-decorator ng-repeat=\"item in form.items\" form=\"item\"/>\n            </div>\n          </div>\n        </fieldset>`\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-mediaupload.html',\n        `\n        <div class=\"form-group {{form.htmlClass}}\"\n             ng-class=\"{'has-error': hasError(), 'has-success': hasSuccess()}\">\n          <label class=\"control-label\"\n                 ng-show=\"showTitle()\"\n                 for=\"{{form.key && form.key[0]}}\">{{form.title}}</label>\n          <media-upload ng-model=\"$$value$$\"\n                        cn-file-type=\"form.fileType\"\n                        cn-upload-path=\"form.uploadPath\"\n                        cn-data=\"form.data\"\n                        cn-preview-path=\"form.previewPath\"\n                        cn-model-value-key=\"form.modelValueKey\"\n                        ng-model-options=\"form.ngModelOptions\"\n                        sf-changed=\"form\"\n                        schema-validate=\"form\"\n                        ff-form=\"form\"\n                        class=\"clearfix\">\n          </media-upload>\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\n       </div>`\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-csvupload.html',\n        `\n        <div class=\"form-group {{form.htmlClass}}\"\n             ng-class=\"{'has-error': hasError(), 'has-success': hasSuccess()}\">\n          <label class=\"control-label\"\n                 ng-show=\"showTitle()\"\n                 for=\"{{form.key && form.key[0]}}\">{{form.title}}</label>\n          <csv-upload ng-model=\"$$value$$\"\n                        cn-upload-path=\"form.uploadPath\"\n                        ng-model-options=\"form.ngModelOptions\"\n                        sf-changed=\"form\"\n                        schema-validate=\"form\"\n                        ff-form=\"form\"\n                        class=\"clearfix\">\n          </csv-upload>\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\n       </div>`\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-reusable.html',\n        `\n        <div class=\"form-group cn-reusable {{form.htmlClass}}\"\n             ng-class=\"{'has-error': hasError(), 'has-success': hasSuccess()}\">\n          <label class=\"control-label\"\n                 ng-show=\"showTitle()\"\n                 for=\"{{form.key.join('.')}}\">{{form.title}}</label>\n          <cn-select-or\n            ng-show=\"form.key\"\n            select-from=\"form.library\"\n            ng-model=\"$$value$$\"\n            ng-model-options=\"form.ngModelOptions\"\n            sf-changed=\"form\"\n            schema-validate=\"form\"\n            ff-form=\"form\"\n            directiveId=\"form.directiveId\"\n            item-template=\"form.itemTemplate\"\n            toggle-text=\"form.toggleText\"\n            disabled=\"form.readonly\"\n            view=\"form.view\">\n            <sf-decorator ng-repeat=\"item in form.items\" form=\"item\"/>\n          </cn-select-or>\n          <p ng-if=\"form.loadMore && form.view === 'list'\">\n            <a ng-click=\"form.loadMore()\"\n               class=\"btn btn-default btn-block\">Load More</a>\n          </p>\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\n        </div>`\n    );\n\n    $templateCache.put(\n        'app/components/cn-flex-form/forms/cn-table.html',\n        '\\\n        <div class=\"form-group cn-ff-table {{form.htmlClass}}\"\\\n             ng-class=\"{\\'has-error\\': hasError(), \\'has-success\\': hasSuccess()}\">\\\n          <h6>{{form.title}}</h6>\\\n          <div class=\"row\">\\\n            <div ng-repeat=\"col in form.columns\" class=\"{{col.columnWidth}}\">\\\n              <p class=\"column-header\">{{col.columnHeader}}</p>\\\n            </div>\\\n          </div>\\\n          <div class=\"row\" ng-repeat=\"row in form.items\">\\\n            <div ng-repeat=\"col in row.items\" class=\"{{col.columnWidth}}\">\\\n              <sf-decorator form=\"col\"></sf-decorator>\\\n            </div>\\\n          </div>\\\n          <span class=\"help-block\" sf-message=\"form.description\"></span>\\\n        </div>\\\n        '\n    );\n  }\n\n})();"],"sourceRoot":"/source/"}